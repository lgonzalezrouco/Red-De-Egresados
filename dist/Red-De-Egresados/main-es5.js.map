{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/egresado/home-egresado/home-egresado.component.ts","webpack:///src/app/auth/egresado/home-egresado/home-egresado.component.html","webpack:///src/app/auth/egresado/login/login.component.html","webpack:///src/app/auth/egresado/login/login.component.ts","webpack:///src/app/auth/egresado/perfil-de-servicio-egresado/perfil-de-servicio-egresado.component.ts","webpack:///src/app/auth/egresado/perfil-de-servicio-egresado/perfil-de-servicio-egresado.component.html","webpack:///src/app/auth/egresado/perfil/perfil.component.html","webpack:///src/app/auth/egresado/perfil/perfil.component.ts","webpack:///src/app/auth/egresado/register/register.component.html","webpack:///src/app/auth/egresado/register/register.component.ts","webpack:///src/app/auth/eleccion-register/eleccion-register.component.ts","webpack:///src/app/auth/eleccion-register/eleccion-register.component.html","webpack:///src/app/auth/empresa/home-empresa/home-empresa.component.ts","webpack:///src/app/auth/empresa/home-empresa/home-empresa.component.html","webpack:///src/app/auth/empresa/perfil-de-servicio-empresa/perfil-de-servicio-empresa.component.ts","webpack:///src/app/auth/empresa/perfil-de-servicio-empresa/perfil-de-servicio-empresa.component.html","webpack:///src/app/auth/empresa/perfil-empresa/perfil-empresa.component.html","webpack:///src/app/auth/empresa/perfil-empresa/perfil-empresa.component.ts","webpack:///src/app/auth/empresa/register-empresa/register-empresa.component.html","webpack:///src/app/auth/empresa/register-empresa/register-empresa.component.ts","webpack:///src/app/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/auth/forgot-password/forgot-password.component.html","webpack:///src/app/auth/services/auth.service.ts","webpack:///src/app/auth/wait-verification/wait-verification.component.ts","webpack:///src/app/auth/wait-verification/wait-verification.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/searchbar/searchbar.component.ts","webpack:///src/app/shared/searchbar/searchbar.component.html","webpack:///src/app/shared/toolbar/toolbar.component.html","webpack:///src/app/shared/toolbar/toolbar.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","initializeApp","firebaseConfig","enablePersistence","declarations","providers","bootstrap","HomeEgresadoComponent","http","authSvc","router","startAt","endAt","startObservable","asObservable","endObservable","resultadosDeBusqueda","firstNameFormGroup","firstName","required","pattern","minLength","optionsFormGroup","profesion","minAge","maxAge","orientacion","user","JSON","parse","localStorage","getItem","userFirebase","uid","console","log","navigate","emailVerified","empresa","profesions","get","getResultsWithFirstName","$event","valorDeEvent","target","value","next","start","end","searchwithFirstName","subscription","subscribe","makeQueryWithFirstName","resultado","setTimeout","unsubscribe","searchWithOption","makeQueryWithOptions","fecha","timeStamp","toString","match","res","fechaDeNacimiento","Date","today","edad","getFullYear","LoginComponent","loginForm","email","password","emailPattern","passwordPattern","hide","login","errorMessage","onLogin","PerfilDeServicioEgresadoComponent","route","uidDelUsuarioLogeado","paramMap","params","getUser","userSnapshot","usuarioIngresado","payload","data","exists","birthday","PerfilComponent","ngZone","todayYear","todayMonth","getMonth","todayDay","getDate","maxDate","editarForm","cellphone","lastName","gender","photoURL","firstNamePattern","lastNamePattern","birthdayPattern","genderPattern","cellphonePattern","profesionPattern","mostrar","nombreArchivo","mensajeArchivo","datosFormulario","FormData","porcentaje","finalizado","userAux","timestamp","seconds","event","files","length","type","i","name","append","afAuth","currentUser","updateProfile","displayName","window","location","reload","updateUserWithPhoto","updateUserWithoutPhoto","error","URLPublica","editUser","archivo","referencia","referenciaCloudStorage","tarea","tareaCloudStorage","percentageChanges","Math","round","getDownloadURL","URL","updateUserData","editar","RegisterComponent","firstFormGroup","yearDeEgreso","egresoPattern","secondFormGroup","DNI","maxLength","tituloEgreso","orientacionPattern","DNIPattern","tituloEgresoPattern","registerForm","years","patchValue","createUser","existeElEgresado","egresado","existeEgresado","DNIEnFirestore","register","undefined","onRegister","EleccionRegisterComponent","goToEgresadoRegister","goToEmpresaRegister","HomeEmpresaComponent","PerfilDeServicioEmpresaComponent","empresaIngresada","PerfilEmpresaComponent","empresaName","empresaNamePattern","editEmpresa","RegisterEmpresaComponent","registerEmpresaForm","CUIT","cuitPattern","registerEmpresa","ForgotPasswordComponent","passwordForm","resetPassword","alert","onReset","AuthService","angularFirestore","angularFirestorage","signInWithEmailAndPassword","result","setItem","stringify","message","values","createUserWithEmailAndPassword","sendVerificationEmail","setUserDataLogUp","setEmpresaDataLogUp","sendPasswordResetEmail","sendEmailVerification","signOut","removeItem","userRef","doc","userData","set","merge","verificada","empresaData","url","collection","snapshotChanges","parseInt","minAgeDate","maxAgeDate","ref","where","valueChanges","limit","orderBy","filter","datos","upload","providedIn","WaitVerificationComponent","user$","HomeComponent","goToLogin","NavbarComponent","loggedUser","verificarSiAlguienInicio","u","logout","SearchbarComponent","searchFilter","getResults","search","makeQuery","onSearch","setFilter","getSearchData","ToolbarComponent","matIconRegistry","domSanitizer","esEmpresa","addSvgIcon","bypassSecurityTrustResourceUrl","onLogout","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EleccionRegisterComponent } from './auth/eleccion-register/eleccion-register.component';\r\nimport { WaitVerificationComponent } from './auth/wait-verification/wait-verification.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './auth/egresado/login/login.component';\r\nimport { RegisterComponent } from './auth/egresado/register/register.component';\r\nimport { ForgotPasswordComponent } from './auth/forgot-password/forgot-password.component';\r\nimport { PerfilComponent } from './auth/egresado/perfil/perfil.component';\r\nimport { RegisterEmpresaComponent } from './auth/empresa/register-empresa/register-empresa.component';\r\nimport { PerfilEmpresaComponent } from './auth/empresa/perfil-empresa/perfil-empresa.component';\r\nimport { PerfilDeServicioEgresadoComponent } from './auth/egresado/perfil-de-servicio-egresado/perfil-de-servicio-egresado.component';\r\nimport { PerfilDeServicioEmpresaComponent } from './auth/empresa/perfil-de-servicio-empresa/perfil-de-servicio-empresa.component';\r\nimport { HomeEgresadoComponent } from './auth/egresado/home-egresado/home-egresado.component';\r\nimport { HomeEmpresaComponent } from './auth/empresa/home-empresa/home-empresa.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: 'perfil',\r\n    component: PerfilComponent,\r\n  },\r\n  {\r\n    path: 'eleccion-register',\r\n    component: EleccionRegisterComponent,\r\n  },\r\n  {\r\n    path: 'register-empresa',\r\n    component: RegisterEmpresaComponent,\r\n  },\r\n  {\r\n    path: 'wait-verification',\r\n    component: WaitVerificationComponent,\r\n  },\r\n  {\r\n    path: 'perfil-empresa',\r\n    component: PerfilEmpresaComponent,\r\n  },\r\n  {\r\n    path: 'perfil-de-servicio-egresado/:uid',\r\n    component: PerfilDeServicioEgresadoComponent,\r\n  },\r\n  {\r\n    path: 'perfil-de-servicio-empresa/:uid',\r\n    component: PerfilDeServicioEmpresaComponent,\r\n  },\r\n  {\r\n    path: 'home-egresado',\r\n    component: HomeEgresadoComponent\r\n  },\r\n  {\r\n    path: 'home-empresa',\r\n    component: HomeEmpresaComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'login-signup';\r\n}\r\n","<!-- <app-navbar></app-navbar> -->\r\n\r\n<!-- <app-searchbar></app-searchbar> -->\r\n<div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './shared/navbar/navbar.component';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\nimport { SearchbarComponent } from './shared/searchbar/searchbar.component';\r\nimport { EleccionRegisterComponent } from './auth/eleccion-register/eleccion-register.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { WaitVerificationComponent } from './auth/wait-verification/wait-verification.component';\r\nimport { LoginComponent } from './auth/egresado/login/login.component';\r\nimport { PerfilComponent } from './auth/egresado/perfil/perfil.component';\r\nimport { PerfilDeServicioEgresadoComponent } from './auth/egresado/perfil-de-servicio-egresado/perfil-de-servicio-egresado.component';\r\nimport { RegisterComponent } from './auth/egresado/register/register.component';\r\nimport { PerfilDeServicioEmpresaComponent } from './auth/empresa/perfil-de-servicio-empresa/perfil-de-servicio-empresa.component';\r\nimport { PerfilEmpresaComponent } from './auth/empresa/perfil-empresa/perfil-empresa.component';\r\nimport { RegisterEmpresaComponent } from './auth/empresa/register-empresa/register-empresa.component';\r\nimport { ForgotPasswordComponent } from './auth/forgot-password/forgot-password.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule, MAT_DATE_LOCALE} from '@angular/material/core';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\n\r\nimport { HttpClientModule } from \"@angular/common/http\"\r\n\r\nimport { ToolbarComponent } from './shared/toolbar/toolbar.component';\r\nimport { HomeEgresadoComponent } from './auth/egresado/home-egresado/home-egresado.component';\r\nimport { HomeEmpresaComponent } from './auth/empresa/home-empresa/home-empresa.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    SearchbarComponent,\r\n    EleccionRegisterComponent,\r\n    WaitVerificationComponent,\r\n    LoginComponent,\r\n    PerfilComponent,\r\n    PerfilDeServicioEgresadoComponent,\r\n    RegisterComponent,\r\n    PerfilDeServicioEmpresaComponent,\r\n    PerfilEmpresaComponent,\r\n    RegisterEmpresaComponent,\r\n    ForgotPasswordComponent,\r\n    HomeComponent,\r\n    ToolbarComponent,\r\n    HomeEgresadoComponent,\r\n    HomeEmpresaComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAuthModule,\r\n    AngularFirestoreModule.enablePersistence(),\r\n    FormsModule,\r\n    AngularFireStorageModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatToolbarModule,\r\n    HttpClientModule,\r\n    MatDividerModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatSelectModule\r\n  ],\r\n  providers: [\r\n    {provide: MAT_DATE_LOCALE, useValue: 'en-GB'}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subject, combineLatest } from 'rxjs';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home-egresado',\r\n  templateUrl: './home-egresado.component.html',\r\n  styleUrls: ['./home-egresado.component.scss'],\r\n})\r\nexport class HomeEgresadoComponent implements OnInit {\r\n  public profesions;\r\n\r\n  startAt = new Subject();\r\n  endAt = new Subject();\r\n  startObservable = this.startAt.asObservable();\r\n  endObservable = this.endAt.asObservable();\r\n  public resultadosDeBusqueda = null;\r\n  valorDeEvent;\r\n\r\n  firstNameFormGroup = new FormGroup({\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n  });\r\n\r\n  optionsFormGroup = new FormGroup({\r\n    profesion: new FormControl('', [Validators.required]),\r\n    minAge: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    maxAge: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    orientacion: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  public user: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authSvc: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n     this.user = JSON.parse(localStorage.getItem('user'));\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    const uid = localStorage.getItem('uid');\r\n    console.log(this.user);\r\n    console.log(uid);\r\n    if (!uid) {\r\n      this.router.navigate(['/home']);\r\n    } else if (this.user && uid) {\r\n      if (!userFirebase.emailVerified) {\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        if (this.user.empresa && uid) {\r\n          this.router.navigate(['/home-empresa']);\r\n        } else if (!this.user.empresa && uid) {\r\n          this.profesions = this.http.get(\r\n            '../../../../assets/JSON/profesion.json'\r\n          );\r\n          this.getResultsWithFirstName();\r\n          /* this.getResultsWithOptions(); */\r\n        }\r\n      }\r\n    }\r\n    /* const uid = localStorage.getItem('uid');\r\n    console.log(uid);\r\n    if (!uid) {\r\n      this.router.navigate(['/home']);\r\n    } else {\r\n      this.profesions = this.http.get('../../../../assets/JSON/profesion.json');\r\n      this.getResultsWithFirstName();\r\n      /* this.getResultsWithOptions();\r\n    } */\r\n\r\n    /* this.authSvc.afAuth.user.subscribe((u) => {\r\n      console.log(u);\r\n      if (!u) {\r\n        this.router.navigate(['/home']);\r\n      } else {\r\n        this.profesions = this.http.get(\r\n          '../../../../assets/JSON/profesion.json'\r\n        );\r\n        this.getResultsWithFirstName();\r\n        /* this.getResultsWithOptions();\r\n      }\r\n    }); */\r\n  }\r\n\r\n  // Es para conseguir la informacion para el parametro de busqueda\r\n  getSearchData($event) {\r\n    this.valorDeEvent = $event.target.value;\r\n  }\r\n\r\n  searchWithFirstName() {\r\n    this.startAt.next(this.valorDeEvent);\r\n    this.endAt.next(this.valorDeEvent + '\\uf8ff');\r\n  }\r\n\r\n  // Llama al metodo que se encuentra en el service\r\n  makeQueryWithFirstName(start, end) {\r\n    return this.authSvc.searchwithFirstName(start, end);\r\n  }\r\n\r\n  /*\r\n   * Se subscribe a un observable que va trayendo la informacion de la busqueda.\r\n   * Por razones de seguiridad y para evitar un consumo de la red, se desuscribe despues de 30 segundos\r\n   */\r\n  getResultsWithFirstName() {\r\n    let subscription = combineLatest(\r\n      this.startObservable,\r\n      this.endObservable\r\n    ).subscribe((value) => {\r\n      this.makeQueryWithFirstName(value[0], value[1]).subscribe((resultado) => {\r\n        this.resultadosDeBusqueda = resultado;\r\n        console.log(this.resultadosDeBusqueda);\r\n        setTimeout(() => {\r\n          subscription.unsubscribe;\r\n          console.log('DESUSCRITO');\r\n        }, 30000);\r\n      });\r\n    });\r\n  }\r\n\r\n  makeQueryWithOptions(profesion, minAge, maxAge, orientacion) {\r\n    return this.authSvc.searchWithOption(\r\n      profesion,\r\n      minAge,\r\n      maxAge,\r\n      orientacion\r\n    );\r\n  }\r\n\r\n  getResultsWithOptions() {\r\n    const {\r\n      profesion,\r\n      minAge,\r\n      maxAge,\r\n      orientacion,\r\n    } = this.optionsFormGroup.value;\r\n    this.makeQueryWithOptions(profesion, minAge, maxAge, orientacion).subscribe(\r\n      (resultado) => {\r\n        this.resultadosDeBusqueda = resultado;\r\n        console.log(this.resultadosDeBusqueda);\r\n      }\r\n    );\r\n  }\r\n\r\n  getEdad(fecha): number {\r\n    const timeStamp = fecha.toString();\r\n    let [, res] = timeStamp.match(/seconds=(\\d+)/);\r\n    let fechaDeNacimiento = new Date(+res * 1000);\r\n\r\n    let today: Date = new Date();\r\n\r\n    let edad: number = today.getFullYear() - fechaDeNacimiento.getFullYear();\r\n    return edad;\r\n  }\r\n}\r\n","<app-toolbar></app-toolbar>\r\n<div class=\"margen container-fluid\">\r\n  <!-- <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div> -->\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-3 \">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-3 alinear-centro sm-text-center\">\r\n        <img class=\"col-12 alinear-centro sm-text-center col-md-9 foto rounded-circle\" src=\"{{\r\n            user.photoURL ? user.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ user.firstName }}\" />\r\n      </div>\r\n      <div class=\"col-12 col-md-8 px-0 margin-top-content margin-bottom-content \">\r\n        <div class=\"row\">\r\n          <div class=\"col-10 col-md-11\">\r\n            <h1 class=\"line-height-normal sm-text-left bienvenido vertical-align\">\r\n              Bienvenido, {{ user.firstName }} {{user.lastName}}\r\n            </h1>\r\n          </div>\r\n          <div class=\"col-12 d-none d-sm-block\">\r\n            <p class=\"subtitulo-bienvenido line-height-normal mt-2 mb-3\">\r\n              <strong>En esta página podrás encontrar a tus ex egresados y a los demás egresados del Insitituto Politecnico Modelo</strong>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-3\">\r\n    <ng-container *ngIf=\"resultadosDeBusqueda != null || resultadosDeBusqueda != undefined; then mostrarResultados; else barraDeBusqueda\"></ng-container>\r\n    <ng-template #barraDeBusqueda>\r\n      <form [formGroup]=\"firstNameFormGroup\" (ngSubmit)=\"searchWithFirstName()\" class=\"mt-2 mb-3\">\r\n        <mat-card-header class=\"text-center alinear-centro\">\r\n          <mat-card-title class=\"text-center alinear-centro mt-2 mb-4\">\r\n            <h1 class=\"text-center alinear-centro line-height-normal titulo\">\r\n              Encuentra a los mejores egresados\r\n            </h1>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <div class=\"form-row margen-divider\">\r\n          <div class=\"offset-md-1 col-md-8\">\r\n            <mat-form-field class=\"full-width-height\">\r\n              <mat-label>Nombre de Egresado</mat-label>\r\n              <span matPrefix>\r\n                <mat-icon>search</mat-icon>&nbsp;\r\n              </span>\r\n              <input type=\"text\" matInput placeholder=\"Juan Perez\" (change)=\"getSearchData($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"sm-text-center col-md-2\">\r\n            <button type=\"submit\" mat-raised-button class=\"btn\">\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form [formGroup]=\"optionsFormGroup\" (ngSubmit)=\"getResultsWithOptions()\" class=\"mt-2 mb-3\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <mat-card-title class=\"text-center alinear-centro mt-4 mb-1\">\r\n          <h1 class=\"text-center alinear-centro line-height-normal titulo-opciones\">\r\n            ¿Problemas encontrando al egresado indicado?\r\n          </h1>\r\n        </mat-card-title>\r\n        <mat-card-subtitle class=\"text-center alinear-centro subtitulo mb-5\">No pasa nada, busca a los egresados segun las\r\n          preferencias que quieras</mat-card-subtitle>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2\">\r\n            <img src=\"../../../../assets/images/gorrolupa.png\" class=\" img-fluid ml-5 d-none d-md-block\" alt=\"\">\r\n          </div>\r\n          <div class=\"col-md-10\">\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Profesion</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Orientacion</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Minima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"minAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Maxima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"maxAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"sm-text-center offset-md-9 col-md-2\">\r\n          <button type=\"submit\" mat-raiser-button class=\"btn\">\r\n            Buscar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </ng-template>\r\n    <ng-template #mostrarResultados>\r\n      <form [formGroup]=\"firstNameFormGroup\" (ngSubmit)=\"searchWithFirstName()\" class=\"mt-2 mb-3\">\r\n        <div class=\"form-row margen-divider\">\r\n          <div class=\"offset-md-1 col-md-8\">\r\n            <mat-form-field class=\"full-width-height\">\r\n              <mat-label>Nombre de Egresado</mat-label>\r\n              <span matPrefix>\r\n                <mat-icon>search</mat-icon>&nbsp;\r\n              </span>\r\n              <input type=\"text\" matInput placeholder=\"Juan Perez\" (change)=\"getSearchData($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"sm-text-center col-md-2\">\r\n            <button type=\"submit\" mat-raised-button class=\"btn\">\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form [formGroup]=\"optionsFormGroup\" (ngSubmit)=\"getResultsWithOptions()\" class=\"mt-2 mb-3\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <div class=\"row mt-4\">\r\n          <div class=\"col-12\">\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Profesion</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Orientacion</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Minima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"minAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Maxima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"maxAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"sm-text-center col-md-2\">\r\n                <button type=\"submit\" mat-raised-button class=\"btn\">\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n      <div *ngIf=\"resultadosDeBusqueda != null\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <div *ngFor=\"let resultado of resultadosDeBusqueda\" class=\"row pt-4\">\r\n          <div class=\"col-12 col-md-6\">\r\n            <div class=\"row set-pointer\" [routerLink]=\"['/perfil-de-servicio-egresado', resultado.uid]\">\r\n              <div class=\"col-md-6 set-pointer\">\r\n                <img class=\"img-fluid foto col-md-12 rounded-circle d-none d-md-block\" src=\"{{\r\n                    resultado.photoURL\r\n                      ? resultado.photoURL\r\n                      : '../../../assets/images/user8.png'\r\n                  }}\" alt=\"{{ resultado.firstName }}\" />\r\n              </div>\r\n              <div class=\"col-md-6 set-pointer\">\r\n                <h1 class=\"nombre\">{{ resultado.firstName }} {{ resultado.lastName }}</h1>\r\n                <h2 class=\"profesion\">{{ resultado.profesion }}</h2>\r\n                <h3 class=\"orientacion\">{{ resultado.orientacion }}, {{ resultado.yearDeEgreso }}</h3>\r\n                <!-- <h3 class=\"yearDeEgreso\">{{ resultado.yearDeEgreso }}</h3> -->\r\n                <h3 class=\"edad\">{{ getEdad(resultado.birthday) }} años</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </mat-card>\r\n</div>\r\n\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        Bienvenido de nuevo\r\n      </h1>\r\n    </mat-card-title>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\" class=\"mt-5 mb-3\">\r\n      <div class=\"form-row mb-2\">\r\n        <div class=\"offset-3 col-6\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput type=\"email\" formControlName=\"email\">\r\n            <mat-error *ngIf=\"emailPattern.invalid && !emailPattern.touched\">\r\n              Por favor, ingrese un email válido.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"emailPattern.touched\" >\r\n              El email es <strong>requerido</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row mb-1\">\r\n        <div class=\"offset-3 col-6\">\r\n\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Contraseña</mat-label>\r\n            <input matInput type=\"password\" formControlName=\"password\" [type]=\"hide ? 'password':'text' \">\r\n            <mat-icon class=\"material-icons\" matSuffix (click)=\"hide = !hide\">\r\n              {{hide ? 'visibility':'visibility_off'}}\r\n            </mat-icon>\r\n            <mat-error *ngIf=\"passwordPattern.hasError('minLength')\">\r\n              La contraseña debe contener mínimo 8 caracteres.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"passwordPattern.hasError('required')\">\r\n              La contraseña es <strong>requerida</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <p class=\"sm-text-center float-right margen2\">\r\n            <a [routerLink]=\"['/forgot-password']\">\r\n              ¿Olvidaste tu Contraseña?\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"form-row mt-4 mb-4\" *ngIf=\"errorMessage\">\r\n        <div class=\"offset-2 col-8\">\r\n          <small class=\"form-text alert-danger text-center mt-2 pt-1 pb-1\"> {{ errorMessage }} </small>\r\n        </div>\r\n      </div> -->\r\n      <mat-card-actions class=\"mb-5\">\r\n        <div class=\"offset-3 col-6\">\r\n          <div class=\"alinear-centro mt-4\">\r\n            <button type=\"submit\" class=\"btn btn-dark btn-block alinear-centro\">Iniciar Sesion</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12 mt-4\">\r\n          <div class=\"alinear-centro mt-4\">\r\n            <p class=\"sm-text-center float-left mb-0\">\r\n              ¿No tienes una cuenta?\r\n              <a [routerLink]=\"['/eleccion-register']\">\r\n                Regístrate\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n\r\n<!-- ACLARACIONES -->\r\n<!-- El FormControlName esta asociado al nombre de las variables\r\n     FormControl del login.component.ts\r\n-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [AuthService],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n    ]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  emailPattern = this.loginForm.get('email');\r\n  passwordPattern = this.loginForm.get('password');\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  errorMessage: string;\r\n\r\n  // Variable para saber si la contraseña es visible o no\r\n  public hide = true;\r\n\r\n  constructor(private authSvc: AuthService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    const uid = localStorage.getItem('uid');\r\n    console.log(user);\r\n    console.log(uid);\r\n    if (user && uid) {\r\n      if (!userFirebase.emailVerified) {\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        if (user.empresa && uid) {\r\n          this.router.navigate(['/perfil-empresa']);\r\n        } else if (!user.empresa && uid) {\r\n          this.router.navigate(['/perfil']);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async onLogin() {\r\n    const { email, password } = this.loginForm.value;\r\n    try {\r\n      const user = await this.authSvc.login(email, password);\r\n\r\n      if (typeof user !== 'string') {\r\n        if (user && user.user.emailVerified == true) {\r\n          console.log(user);\r\n          this.router.navigate(['/home']);\r\n        } else if (user && user.user.emailVerified == false) {\r\n          console.log(user);\r\n          this.router.navigate(['/wait-verification']);\r\n        } else {\r\n          this.router.navigate(['/register']);\r\n        }\r\n      } else {\r\n        this.errorMessage = user;\r\n        console.log(user);\r\n      }\r\n    } catch (error) {\r\n      this.errorMessage = error;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-perfil-de-servicio-egresado',\r\n  templateUrl: './perfil-de-servicio-egresado.component.html',\r\n  styleUrls: ['./perfil-de-servicio-egresado.component.scss'],\r\n})\r\nexport class PerfilDeServicioEgresadoComponent implements OnInit {\r\n  public uid;\r\n  public usuarioIngresado;\r\n  public fechaDeNacimiento;\r\n  public uidDelUsuarioLogeado;\r\n\r\n  constructor(\r\n    private authSvc: AuthService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    console.log(user);\r\n    console.log(uid);\r\n    if (!uid) {\r\n      this.router.navigate(['/home']);\r\n    } else if (user && uid) {\r\n      if (!userFirebase.emailVerified) {\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        this.uidDelUsuarioLogeado = localStorage.getItem('uid');\r\n        this.route.paramMap.subscribe((params) => {\r\n          this.uid = params.get('uid');\r\n          console.log(this.uid);\r\n          console.log(this.uidDelUsuarioLogeado);\r\n          // Si el usuario seleccionado es el propio, se navega al propio perfil\r\n          if (this.uid == this.uidDelUsuarioLogeado) {\r\n            this.router.navigate(['/perfil']);\r\n          } else {\r\n            // Sino muestra los datos correspondientes\r\n            this.authSvc.getUser(this.uid).subscribe((userSnapshot) => {\r\n              this.usuarioIngresado = userSnapshot.payload.data();\r\n              console.log(userSnapshot.payload.exists);\r\n              console.log(this.usuarioIngresado);\r\n\r\n              const timeStamp = this.usuarioIngresado.birthday.toString();\r\n              let [, res] = timeStamp.match(/seconds=(\\d+)/);\r\n              this.fechaDeNacimiento = new Date(+res * 1000);\r\n              console.log(this.fechaDeNacimiento);\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    /* // Se consigue el uid del usuario que esta logeado\r\n    this.authSvc.afAuth.user.subscribe((u) => {\r\n      if (u) {\r\n        this.uidDelUsuarioLogeado = u.uid;\r\n        console.log(this.uidDelUsuarioLogeado);\r\n      } else {\r\n        console.log('Nadie inicio sesion');\r\n      }\r\n      return this.getUsuarioIngresado();\r\n    }); */\r\n  }\r\n\r\n  /* // Se consigue el uid del usuario del que se quiere ver el perfil\r\n  getUsuarioIngresado(){\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.uid = params.get('uid');\r\n      console.log(this.uid);\r\n      console.log(this.uidDelUsuarioLogeado);\r\n      this.authSvc.afAuth.user.subscribe((u) => {\r\n        if (u) {\r\n          this.uidDelUsuarioLogeado = u.uid;\r\n        } else {\r\n          console.log('Nadie inicio sesion');\r\n        }\r\n      });\r\n      // Si el usuario seleccionado es el propio, se navega al propio perfil\r\n      if (this.uid == this.uidDelUsuarioLogeado) {\r\n        this.router.navigate(['/perfil']);\r\n      } else {\r\n        // Sino muestra los datos correspondientes\r\n        this.authSvc.getUser(this.uid).subscribe((userSnapshot) => {\r\n          this.usuarioIngresado = userSnapshot.payload.data();\r\n          console.log(userSnapshot.payload.exists);\r\n          console.log(this.usuarioIngresado);\r\n\r\n          const timeStamp = this.usuarioIngresado.birthday.toString();\r\n          let [, res] = timeStamp.match(/seconds=(\\d+)/);\r\n          this.fechaDeNacimiento = new Date(+res * 1000);\r\n          console.log(this.fechaDeNacimiento);\r\n        });\r\n      }\r\n    });\r\n  } */\r\n}\r\n","<app-toolbar></app-toolbar>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <ng-container *ngIf=\"usuarioIngresado; then datos; else noExiste\"></ng-container>\r\n    <ng-template #datos>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 col-md-4 mt-3 md-margen\">\r\n          <img class=\"offset-md-2 col-md-8 rounded-circle\" src=\"{{\r\n          usuarioIngresado.photoURL ? usuarioIngresado.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ usuarioIngresado.firstName }}\" />\r\n          <div class=\"offset-md-3 mt-4 sm-alinear-centro\">\r\n            <h3 class=\"texto-datos\">\r\n              <p class=\"texto-dato\">\r\n                <img class=\"img-fluid mr-3\" src=\"../../../assets/images/sexo.png\"> {{ usuarioIngresado.gender }}\r\n              </p>\r\n              <p class=\"texto-dato\">\r\n                <img class=\"img-fluid mr-3 -ml-009\" src=\"../../../assets/images/nacimiento.png\">\r\n                {{ fechaDeNacimiento | date:\"dd/MM/yyyy\" }}\r\n              </p>\r\n              <p class=\"texto-dato\">\r\n                <img class=\"img-fluid mr-3 -ml-033\" src=\"../../../assets/images/egreso.png\">\r\n                {{ usuarioIngresado.yearDeEgreso }}\r\n              </p>\r\n              <p class=\"texto-dato\">\r\n                <img class=\"img-fluid mr-3 -ml-033\" src=\"../../../assets/images/orientacion.png\">\r\n                {{ usuarioIngresado.orientacion }}\r\n              </p>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12 col-md-8 px-0 margin-top-content mb-4\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 col-md-11\">\r\n              <h1 class=\"line-height-normal sm-text-left titulo vertical-align\">\r\n                {{ usuarioIngresado.firstName }} {{usuarioIngresado.lastName}}\r\n              </h1>\r\n            </div>\r\n            <div class=\"col-2 col-md-1 px-0 contactar\">\r\n              <button class=\"boton-editar vertical-align\">\r\n                <img mat-icon class=\"imagen-contacto\" src=\"../../assets/images/contactar.png\">\r\n              </button>\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <p class=\"subtitulo-profesion mt-2 mb-3\">\r\n                <strong>{{ usuarioIngresado.profesion }}</strong>\r\n              </p>\r\n            </div>\r\n            <div class=\"col 12\">\r\n              <h3>\r\n                <p class=\"mt-3 descrip\">\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\r\n                  nec ornare tortor, et volutpat augue. In tincidunt auctor nisl eget\r\n                  condimentum. Donec id iaculis sapien. Vivamus pharetra facilisis\r\n                  quam et sodales. Quisque congue, ipsum et sollicitudin laoreet,\r\n                  mauris augue condimentum est, in placerat massa odio vel erat.\r\n                  Mauris sit amet efficitur lorem, id volutpat diam.\"\r\n                </p>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #noExiste>\r\n      <div class=\"container text-center alinear-centro mt-3\">\r\n        <h1 class=\"line-height-normal alinear-centro text-center titulo vertical-align\">\r\n          El usuario no existe\r\n        </h1>\r\n      </div>\r\n    </ng-template>\r\n  </mat-card>\r\n</div>\r\n","<app-toolbar></app-toolbar>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-4 mt-3 md-margen\">\r\n        <img class=\"offset-md-2 col-md-8 rounded-circle\" src=\"{{\r\n            user.photoURL ? user.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ user.firstName }}\" />\r\n        <div class=\"offset-md-3 mt-4 sm-alinear-centro\">\r\n          <h3 class=\"texto-datos\">\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3\" src=\"../../../assets/images/sexo.png\"> {{ user.gender }}\r\n            </p>\r\n            <p class=\"texto-dato \">\r\n              <img class=\"img-fluid mr-3 -ml-009\" src=\"../../../assets/images/nacimiento.png\"> {{ fechaDeNacimiento | date:\"dd/MM/yyyy\" }}\r\n            </p>\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3 -ml-033\" src=\"../../../assets/images/egreso.png\"> {{ user.yearDeEgreso }}\r\n            </p>\r\n            <p class=\"texto-dato mt\">\r\n              <img class=\"img-fluid mr-3 -ml-033\" src=\"../../../assets/images/orientacion.png\"> {{ user.orientacion }}\r\n            </p>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <ng-container *ngIf=\"mostrar; then mostrarDatos; else editarDatos\"></ng-container>\r\n      <ng-template #mostrarDatos>\r\n        <div class=\"col-12 col-md-8 px-0 margin-top-content mb-4\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 col-md-11\">\r\n              <h1 class=\"line-height-normal sm-text-left titulo vertical-align\">\r\n                {{ user.firstName }} {{user.lastName}}\r\n              </h1>\r\n            </div>\r\n            <div class=\"col-2 col-md-1 px-0\">\r\n              <button (click)=\"editar()\" class=\"boton-editar vertical-align\">\r\n                <img mat-icon class=\"img-fluid\" src=\"../../assets/images/editar.png\">\r\n              </button>\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <p class=\"subtitulo-profesion mt-2 mb-3\">\r\n                <strong>{{ user.profesion }}</strong>\r\n              </p>\r\n            </div>\r\n            <div class=\"col 12 \">\r\n              <h3 >\r\n                <p class=\"mt-3 descrip\">\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\r\n                  nec ornare tortor, et volutpat augue. In tincidunt auctor nisl eget\r\n                  condimentum. Donec id iaculis sapien. Vivamus pharetra facilisis\r\n                  quam et sodales. Quisque congue, ipsum et sollicitudin laoreet,\r\n                  mauris augue condimentum est, in placerat massa odio vel erat.\r\n                  Mauris sit amet efficitur lorem, id volutpat diam.\"\r\n                </p>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template #editarDatos>\r\n        <div class=\"col-12 col-md-8 px-0 mt-4 mb-4\">\r\n          <form [formGroup]=\"editarForm\" (ngSubmit)=\"onEdit()\" class=\"sm-margen mt-5 mb-3\">\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Nombre</mat-label>\r\n                  <input matInput formControlName=\"firstName\" type=\"text\" [(ngModel)]=\"userAux.firstName\">\r\n                  <mat-error *ngIf=\"firstNamePattern.hasError('required')\">\r\n                    El nombre es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"firstNamePattern.hasError('pattern') ||firstNamePattern.hasError('minlength')\">\r\n                    El nombre solo esta compuesto por\r\n                    <strong>letras</strong> y debe tener minimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12 float-right\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Apellido</mat-label>\r\n                  <input matInput formControlName=\"lastName\" type=\"text\" [(ngModel)]=\"userAux.lastName\">\r\n                  <mat-error *ngIf=\"lastNamePattern.hasError('required')\">\r\n                    El apellido es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"lastNamePattern.hasError('pattern') || lastNamePattern.hasError('minlength')\">\r\n                    El apellido solo esta compuesto por\r\n                    <strong>letras</strong> y debe tener minimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Genero</mat-label>\r\n                  <mat-select [(ngModel)]=\"userAux.gender\" formControlName=\"gender\">\r\n                    <mat-option value=\"Masculino\">Masculino</mat-option>\r\n                    <mat-option value=\"Femenino\">Femenino</mat-option>\r\n                    <mat-option value=\"Prefiero no decirlo\">Prefiero no decrilo</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"genderPattern.hasError('required')\">\r\n                    El genero es <strong>requerido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12 float-right\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Fecha de Nacimiento</mat-label>\r\n                  <input matInput formControlName=\"birthday\" [(ngModel)]=\"fechaDeNacimiento\" [matDatepicker]=\"picker\" [max]=\"maxDate\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker></mat-datepicker>\r\n                  <mat-error *ngIf=\"birthdayPattern.hasError('matDatepickerParse')\">\r\n                    La fecha de nacimiento no es <strong>valida</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      birthdayPattern.hasError('required') &&\r\n                      !birthdayPattern.hasError('matDatepickerParse')\r\n                    \">\r\n                    La fecha es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Telefono</mat-label>\r\n                  <span matPrefix>+45 &nbsp;</span>\r\n                  <input matInput formControlName=\"cellphone\" type=\"number\" [(ngModel)]=\"userAux.cellphone\" />\r\n                  <mat-error *ngIf=\"cellphonePattern.hasError('required')\">\r\n                    El teléfono es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"cellphonePattern.hasError('pattern')\">\r\n                    El teléfono solo esta compuesto por <strong>numeros</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12 float-right\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Profesion</mat-label>\r\n                  <mat-select [(ngModel)]=\"userAux.profesion\" formControlName=\"profesion\">\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">{{ profesion.viewValue }}</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"profesionPattern.hasError('required')\">\r\n                    La profesion es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <label for=\"Cambiar Foto\">Foto de perfil</label>\r\n                <input type=\"file\" accept=\"image/jpeg, image/png, image/jpg\" class=\"form-control-file\"\r\n                  id=\"inputFile\" formControlName=\"photoURL\" (change)=\"cambioArchivo($event)\" />\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 offset-md-1 col-md-5 mt-4 text-center\">\r\n                    <button class=\"btn btn-dark\" type=\"submit\">Guardar</button>\r\n                  </div>\r\n                  <div class=\"col-12 offset-md-1 col-md-5 mt-4 text-center\">\r\n                    <button class=\"btn btn-dark\" (click)=\"editar()\">Cancelar</button>\r\n                  </div>\r\n                  <!-- <div class=\"col-12 offset-md-1 col-md-5\">\r\n\r\n                    <button type=\"submit\" class=\"btn btn-dark mr-1\">Guardar</button>\r\n                  </div>\r\n                  <div class=\"col-12 offset-md-1 col-md-5 p-0\">\r\n                    <button class=\"btn btn-dark ml-1\" (click)=\"editar()\">Cancelar</button>\r\n                  </div> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { User } from 'src/app/shared/interfaces/user';\r\n\r\n@Component({\r\n  selector: 'app-perfil',\r\n  templateUrl: './perfil.component.html',\r\n  styleUrls: ['./perfil.component.scss'],\r\n})\r\nexport class PerfilComponent implements OnInit {\r\n  // Se usa para establecer la fecha maxima, el dia de hoy.\r\n  today = new Date();\r\n  todayYear: number = this.today.getFullYear();\r\n  todayMonth: number = this.today.getMonth();\r\n  todayDay: number = this.today.getDate();\r\n\r\n  maxDate = new Date(this.todayYear, this.todayMonth, this.todayDay);\r\n\r\n  editarForm = new FormGroup({\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    cellphone: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    lastName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    birthday: new FormControl('', [Validators.required]),\r\n    gender: new FormControl('', [Validators.required]),\r\n    profesion: new FormControl('', [Validators.required]),\r\n    photoURL: new FormControl(''),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public firstNamePattern = this.editarForm.get('firstName');\r\n  public lastNamePattern = this.editarForm.get('lastName');\r\n  public birthdayPattern = this.editarForm.get('birthday');\r\n  public genderPattern = this.editarForm.get('gender');\r\n  public cellphonePattern = this.editarForm.get('cellphone');\r\n  public profesionPattern = this.editarForm.get('profesion');\r\n\r\n  // Variable para guardar los datos del usuario\r\n  public user: any;\r\n  public userAux: User;\r\n  public uid;\r\n\r\n  // Variable para saber si se tiene que mostrar el formulario editable\r\n  public mostrar: boolean = true;\r\n\r\n  // Variables para la subida de fotos al Storage\r\n  public nombreArchivo = '';\r\n  public mensajeArchivo = 'No hay archivo seleccionado';\r\n  public datosFormulario = new FormData();\r\n  public URLPublica: string;\r\n  public porcentaje = 0;\r\n  public finalizado = false;\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  public errorMessage: any;\r\n\r\n  // Se usa para almacenar todas las profesiones disponibles\r\n  public profesions;\r\n\r\n  // Se usa para mostrar la fecha de nacimiento en el formato correcto\r\n  public fechaDeNacimiento: Date;\r\n\r\n  constructor(\r\n    public authSvc: AuthService,\r\n    public router: Router,\r\n    public ngZone: NgZone,\r\n    public http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    this.uid = localStorage.getItem('uid');\r\n    console.log(this.user);\r\n    if (this.user && this.uid) {\r\n      if (!userFirebase.emailVerified) {\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        if (this.user.empresa && this.uid) {\r\n          this.router.navigate(['/perfil-empresa']);\r\n        }\r\n      }\r\n    }\r\n    this.userAux = this.user;\r\n\r\n    const timestamp = this.user.birthday.seconds;\r\n    this.fechaDeNacimiento = new Date(timestamp * 1000);\r\n    console.log(this.fechaDeNacimiento);\r\n\r\n    // Almacena la informacion de los json en las variables\r\n    this.profesions = this.http.get('../../../../assets/JSON/profesion.json');\r\n    /* try {\r\n      this.authSvc.afAuth.user.subscribe((u) => {\r\n        if (u) {\r\n          this.authSvc.getUser(u.uid).subscribe((userSnapshot) => {\r\n            this.user = userSnapshot.payload.data();\r\n            console.log(userSnapshot.payload.exists);\r\n            console.log(this.user);\r\n            this.userAux = this.user;\r\n\r\n            const timeStamp = this.userAux.birthday.toString();\r\n            let [, res] = timeStamp.match(/seconds=(\\d+)/);\r\n            this.fechaDeNacimiento = new Date(+res * 1000);\r\n            console.log(this.fechaDeNacimiento);\r\n          });\r\n          // Almacena la informacion de los json en las variables\r\n          this.profesions = this.http.get(\r\n            '../../../../assets/JSON/profesion.json'\r\n          );\r\n        } else {\r\n          console.log('Nadie inicio sesion');\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } */\r\n  }\r\n\r\n  public cambioArchivo(event) {\r\n    console.log('Llegue 0');\r\n    if (event.target.files.length > 0) {\r\n      if (\r\n        event.target.files[0].type == 'image/jpeg' ||\r\n        event.target.files[0].type == 'image/jpg' ||\r\n        event.target.files[0].type == 'image/png'\r\n      ) {\r\n        console.log(event.target.files);\r\n        for (let i = 0; i < event.target.files.length; i++) {\r\n          this.mensajeArchivo = `Archivo preparado: ${event.target.files[i].name}`;\r\n          this.nombreArchivo = event.target.files[i].name;\r\n          this.datosFormulario.delete('archivo');\r\n          this.datosFormulario.append(\r\n            'archivo',\r\n            event.target.files[i],\r\n            event.target.files[i].name\r\n          );\r\n        }\r\n        console.log('Llegue 1');\r\n        console.log(this.datosFormulario.get('archivo'));\r\n      } else {\r\n        this.mensajeArchivo =\r\n          'El formato del archivo no es valido (solo JPG, PNG o JPEG)';\r\n        console.log('Llegue 1,5');\r\n      }\r\n      console.log('Llegue 1');\r\n    } else {\r\n      this.mensajeArchivo = 'No hay un archivo seleccionado';\r\n      console.log('Llegue 1,5');\r\n    }\r\n  }\r\n\r\n  // Se usa para actualizar los datos del usuario propios de firebase\r\n  async updateUserData(firstName, lastName, photoURL) {\r\n    (await this.authSvc.afAuth.currentUser).updateProfile({\r\n      displayName: firstName + ' ' + lastName,\r\n      photoURL: photoURL,\r\n    });\r\n  }\r\n\r\n  public editar() {\r\n    if (this.mostrar) {\r\n      this.mostrar = false;\r\n    } else {\r\n      this.mostrar = true;\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  async onEdit() {\r\n    try {\r\n      // Verifica si el usuario metio un archivo para cambiar\r\n      if (this.datosFormulario.get('archivo') != null) {\r\n        // Se encarga de actualizar los datos del usuario, si entre esos datos hay una foto\r\n        this.updateUserWithPhoto();\r\n      } else {\r\n        // Se encarga de actualizar los datos del usuario, si entre esos NO datos hay una foto\r\n        this.updateUserWithoutPhoto();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // Se encarga de actualizar los datos del usuario, si entre esos datos NO hay una foto\r\n  async updateUserWithoutPhoto() {\r\n    // Si no se ingresa una foto de perfil nueva, se agarra el link de la que ya estaba\r\n    this.URLPublica = (await this.authSvc.afAuth.currentUser).photoURL;\r\n\r\n    console.log('Llegue 10');\r\n    console.log(this.URLPublica);\r\n\r\n    this.editUser();\r\n  }\r\n\r\n  // Se encarga de actualizar los datos del usuario, si entre esos datos hay una foto\r\n  updateUserWithPhoto() {\r\n    console.log('Llegue aca 2');\r\n    let archivo = this.datosFormulario.get('archivo');\r\n    console.log('Llegue aca 3');\r\n    const referencia = this.authSvc.referenciaCloudStorage(this.nombreArchivo);\r\n    const tarea = this.authSvc.tareaCloudStorage(this.nombreArchivo, archivo);\r\n    console.log('Llegue aca 4');\r\n\r\n    tarea.percentageChanges().subscribe((porcentaje) => {\r\n      this.porcentaje = Math.round(porcentaje);\r\n      if (this.porcentaje == 100) {\r\n        this.finalizado = true;\r\n        console.log('LLEGUE ACA 6');\r\n        referencia.getDownloadURL().subscribe((URL) => {\r\n          this.URLPublica = URL;\r\n        });\r\n        console.log(this.URLPublica);\r\n        console.log('LLEGUE ACA 7');\r\n\r\n        this.editUser();\r\n      }\r\n    });\r\n    console.log('Llegue aca 5');\r\n    referencia.getDownloadURL().subscribe((URL) => {\r\n      this.URLPublica = URL;\r\n    });\r\n    console.log(this.URLPublica);\r\n  }\r\n\r\n  async editUser() {\r\n    try {\r\n      const {\r\n        firstName,\r\n        cellphone,\r\n        lastName,\r\n        gender,\r\n        profesion,\r\n        birthday,\r\n      } = this.editarForm.value;\r\n\r\n      if (\r\n        firstName == '' ||\r\n        lastName == '' ||\r\n        cellphone == '' ||\r\n        gender == '' ||\r\n        profesion == '' ||\r\n        birthday == ''\r\n      ) {\r\n        throw new Error('Algunos de los campos estan incompletos');\r\n      }\r\n\r\n      const user = await this.authSvc.editUser(\r\n        this.user,\r\n        this.editarForm.value,\r\n        this.URLPublica\r\n      );\r\n\r\n      // Si el resultado de la operacion no es un string (osea que no devolvio un error)\r\n      if (typeof user !== 'string') {\r\n        //Se agarran los valores firstName y lastName del registerForm\r\n        const { firstName, lastName } = this.editarForm.value;\r\n\r\n        // Se actualiza los datos del usuario (estos son los propios de firebase)\r\n        this.updateUserData(firstName, lastName, this.URLPublica);\r\n\r\n        console.log(user);\r\n\r\n        this.editar();\r\n      } else {\r\n        // Si user es un string, significa que hubo un error, por lo tanto se muestra\r\n        this.errorMessage = user;\r\n        console.log(user);\r\n      }\r\n    } catch (error) {\r\n      this.errorMessage = error;\r\n    }\r\n  }\r\n}\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\" />\r\n  </div>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        Crea tu cuenta\r\n      </h1>\r\n    </mat-card-title>\r\n    <mat-card-subtitle class=\"subtitulo line-height-normal text-center mt-1\">\r\n      Inrgesa tus datos para crear tu perfil de egresado<br />y ser contratado\r\n      por las mejores empresas\r\n    </mat-card-subtitle>\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\" class=\"mt-1 mb-3\">\r\n      <mat-vertical-stepper [linear]=\"true\" #stepper>\r\n        <mat-step [stepControl]=\"firstFormGroup\">\r\n          <form [formGroup]=\"firstFormGroup\">\r\n            <ng-template matStepLabel>Por favor, ingrese sus datos </ng-template>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Nombre</mat-label>\r\n                  <input matInput formControlName=\"firstName\" type=\"text\" />\r\n                  <mat-error *ngIf=\"firstNamePattern.hasError('required')\">\r\n                    El nombre es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      firstNamePattern.hasError('pattern') ||\r\n                      firstNamePattern.hasError('minlength')\r\n                    \">\r\n                    El nombre solo esta compuesto por\r\n                    <strong>letras</strong> y debe tener minimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Telefono</mat-label>\r\n                  <span matPrefix>+45 &nbsp;</span>\r\n                  <input matInput formControlName=\"cellphone\" type=\"number\" />\r\n                  <mat-error *ngIf=\"cellphonePattern.hasError('required')\">\r\n                    El teléfono es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"cellphonePattern.hasError('pattern')\">\r\n                    El teléfono solo esta compuesto por <strong>numeros</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Apellido</mat-label>\r\n                  <input matInput formControlName=\"lastName\" type=\"text\" />\r\n                  <mat-error *ngIf=\"lastNamePattern.hasError('required')\">\r\n                    El apellido es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      lastNamePattern.hasError('pattern') ||\r\n                      lastNamePattern.hasError('minlength')\r\n                    \">\r\n                    El apellido solo esta compuesto por\r\n                    <strong>numeros</strong> y debe tener minimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Sexo</mat-label>\r\n                  <mat-select formControlName=\"gender\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option value=\"Masculino\">Masculino</mat-option>\r\n                    <mat-option value=\"Femenino\">Femenino</mat-option>\r\n                    <mat-option value=\"Prefiero no decirlo\">Prefiero no decrilo</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"genderPattern.hasError('required')\">\r\n                    El Sexo es <strong>requerido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Fecha de Nacimiento</mat-label>\r\n                  <input matInput formControlName=\"birthday\" [matDatepicker]=\"picker\" [max]=\"maxDate\" />\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker></mat-datepicker>\r\n                  <mat-error *ngIf=\"birthdayPattern.hasError('matDatepickerParse')\">\r\n                    La fecha de nacimiento no es <strong>valida</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      birthdayPattern.hasError('required') &&\r\n                      !birthdayPattern.hasError('matDatepickerParse')\r\n                    \">\r\n                    La fecha es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Fecha de Egreso</mat-label>\r\n                  <mat-select formControlName=\"yearDeEgreso\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option *ngFor=\"let year of years | async\" [value]=\"year.value\">\r\n                      {{ year.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"egresoPattern.hasError('required')\">\r\n                    El año de egreso es <strong>requerido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button class=\"btn text-center mt-3\" mat-button matStepperNext>\r\n                Siguiente\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"secondFormGroup\">\r\n          <form [formGroup]=\"secondFormGroup\">\r\n            <ng-template matStepLabel>Complete los datos restantes</ng-template>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>DNI</mat-label>\r\n                  <input matInput formControlName=\"DNI\" type=\"number\" />\r\n                  <mat-error *ngIf=\"DNIPattern.hasError('required')\">\r\n                    El DNI es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      DNIPattern.hasError('pattern') ||\r\n                      DNIPattern.hasError('minlength')\r\n                    \">\r\n                    El DNI solo esta compuesto por <strong>numeros</strong> y\r\n                    debe tener <strong>solo 8 digitos</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Orientacion</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"orientacionPattern.hasError('required')\">\r\n                    La orientacion es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" type=\"email\" />\r\n                  <mat-error *ngIf=\"emailPattern.hasError('required')\">\r\n                    El email es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"emailPattern.hasError('pattern')\">\r\n                    El email no es <strong>valido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Profesion</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"profesionPattern.hasError('required')\">\r\n                    La profesion es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-3\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput type=\"password\" formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" />\r\n                  <mat-icon class=\"material-icons\" matSuffix (click)=\"hide = !hide\">\r\n                    {{ hide ? \"visibility\" : \"visibility_off\" }}\r\n                  </mat-icon>\r\n                  <mat-error *ngIf=\"passwordPattern.hasError('required')\">\r\n                    La contraseña es <strong>requerida</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"passwordPattern.hasError('minlength')\">\r\n                    La contraseña no es <strong>valida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Numero de titulo</mat-label>\r\n                  <input matInput type=\"number\" formControlName=\"tituloEgreso\" />\r\n                  <mat-error *ngIf=\"tituloEgresoPattern.hasError('required')\">\r\n                    El numero del titulo de egreso es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"tituloEgresoPattern.hasError('minlength')\">\r\n                    El numero del titulo de egreso no es <strong>valido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n      </mat-vertical-stepper>\r\n      <div class=\"form-row\" *ngIf=\"errorMessage\">\r\n        <div class=\"offset-2 col-8\">\r\n          <small class=\"form-text alert-danger text-center mt-2 pt-1 pb-1\">\r\n            {{ errorMessage }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"text-center offset-md-7 col-md-5\">\r\n          <p class=\"container\">\r\n            ¿Ya tienes una cuenta?\r\n            <a [routerLink]=\"['/login']\">\r\n              Inicia Sesión\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"text-center offset-md-8 col-md-4\">\r\n          <button type=\"submit\" mat-raised-button class=\"btn\">\r\n            Registrarse\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <div *ngFor=\"let year of years\">\r\n      {{year.value}}\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  /* FormGroupDirective,\r\n  NgForm, */\r\n} from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\n/* import { ErrorStateMatcher } from '@angular/material/core'; */\r\nimport { Router } from '@angular/router';\r\n/* import { Profesion } from 'src/app/shared/interfaces/profesion';\r\nimport { EgresoYear } from 'src/app/shared/interfaces/egresoYear'; */\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/* export class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.touched || isSubmitted)\r\n    );\r\n  }\r\n} */\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n  providers: [AuthService],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  // Se usa para establecer la fecha maxima, el dia de hoy.\r\n  today = new Date();\r\n  todayYear: number = this.today.getFullYear();\r\n  todayMonth: number = this.today.getMonth();\r\n  todayDay: number = this.today.getDate();\r\n\r\n  maxDate = new Date(this.todayYear, this.todayMonth, this.todayDay);\r\n\r\n  // Se usa para saber si se tiene que mostrar la contraseña o no\r\n  hide = true;\r\n\r\n  // Es el formGroup de la primera parte del stepper\r\n  firstFormGroup = new FormGroup({\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    cellphone: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n      Validators.minLength(8),\r\n    ]),\r\n    lastName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    birthday: new FormControl('', [Validators.required]),\r\n    gender: new FormControl('', [Validators.required]),\r\n    yearDeEgreso: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public firstNamePattern = this.firstFormGroup.get('firstName');\r\n  public lastNamePattern = this.firstFormGroup.get('lastName');\r\n  public birthdayPattern = this.firstFormGroup.get('birthday');\r\n  public genderPattern = this.firstFormGroup.get('gender');\r\n  public cellphonePattern = this.firstFormGroup.get('cellphone');\r\n  public egresoPattern = this.firstFormGroup.get('yearDeEgreso');\r\n\r\n  // Es el formGroup de la segunda parte del stepper\r\n  secondFormGroup = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n    ]),\r\n    orientacion: new FormControl('', [Validators.required]),\r\n    profesion: new FormControl('', [Validators.required]),\r\n    DNI: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n      Validators.minLength(8),\r\n      Validators.maxLength(8),\r\n    ]),\r\n    tituloEgreso: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public emailPattern = this.secondFormGroup.get('email');\r\n  public passwordPattern = this.secondFormGroup.get('password');\r\n  public orientacionPattern = this.secondFormGroup.get('orientacion');\r\n  public profesionPattern = this.secondFormGroup.get('profesion');\r\n  public DNIPattern = this.secondFormGroup.get('DNI');\r\n  public tituloEgresoPattern = this.secondFormGroup.get('tituloEgreso');\r\n\r\n  // Es el formGroup que se pasa a la base de datos y ambos formGroup anteriores en uno solo\r\n  registerForm = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n    ]),\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    cellphone: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    lastName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    birthday: new FormControl('', [Validators.required]),\r\n    gender: new FormControl('', [Validators.required]),\r\n    yearDeEgreso: new FormControl('', [Validators.required]),\r\n    orientacion: new FormControl('', [Validators.required]),\r\n    profesion: new FormControl('', [Validators.required]),\r\n    DNI: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n      Validators.minLength(8),\r\n      Validators.maxLength(8),\r\n    ]),\r\n    tituloEgreso: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  public errorMessage: string;\r\n\r\n  // Se usa para almacenar la informacion del titulo del egresado\r\n  public egresado;\r\n\r\n  // Se usa para almacenar todos los años de egreso disponibles\r\n  public years;\r\n\r\n  // Se usa para almacenar todas las profesiones disponibles\r\n  public profesions;\r\n\r\n  constructor(\r\n    private authSvc: AuthService,\r\n    private router: Router,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    console.log(user);\r\n    if(user && uid){\r\n      if(!userFirebase.emailVerified){\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        if(user.empresa && uid){\r\n          this.router.navigate(['/perfil-empresa']);\r\n        } else if(!user.empresa && uid) {\r\n          this.router.navigate(['/perfil']);\r\n        }\r\n      }\r\n    } else {\r\n      // Almacena la informacion de los json en las variables\r\n      this.years = this.http.get('../../../../assets/JSON/egresoYear.json');\r\n      this.profesions = this.http.get('../../../../assets/JSON/profesion.json');\r\n    }\r\n    /* console.log(user.empresa);\r\n    if (user.empresa && uid) {\r\n      this.router.navigate(['/perfil-empresa']);\r\n    } else if (!user.empresa && uid) {\r\n      this.router.navigate(['/perfil']);\r\n    } else {\r\n      // Almacena la informacion de los json en las variables\r\n      this.years = this.http.get('../../../../assets/JSON/egresoYear.json');\r\n      this.profesions = this.http.get('../../../../assets/JSON/profesion.json');\r\n    } */\r\n  }\r\n\r\n  async onRegister() {\r\n    try {\r\n      // Se agarran los datos del primer formGroup\r\n      const {\r\n        firstName,\r\n        cellphone,\r\n        lastName,\r\n        gender,\r\n        yearDeEgreso,\r\n        birthday,\r\n      } = this.firstFormGroup.value;\r\n\r\n      // Se agarran los datos del segundo formGroup\r\n      const {\r\n        email,\r\n        password,\r\n        DNI,\r\n        tituloEgreso,\r\n        orientacion,\r\n        profesion,\r\n      } = this.secondFormGroup.value;\r\n\r\n      // Se verifica que todos los datos sean validos\r\n      if (\r\n        email == '' ||\r\n        password == '' ||\r\n        DNI == '' ||\r\n        tituloEgreso == '' ||\r\n        firstName == '' ||\r\n        cellphone == '' ||\r\n        lastName == '' ||\r\n        birthday == '' ||\r\n        gender == '' ||\r\n        yearDeEgreso == '' ||\r\n        orientacion == '' ||\r\n        profesion == ''\r\n      ) {\r\n        // Si no lo son tira un error\r\n        this.errorMessage = 'Algunos de los campos estan incompletos';\r\n        throw new Error(this.errorMessage);\r\n      }\r\n      // Si son validos, se unifican todos los datos en un solo formGroup\r\n      this.registerForm.patchValue({\r\n        email: email,\r\n        password: password,\r\n        firstName: firstName,\r\n        cellphone: cellphone,\r\n        lastName: lastName,\r\n        birthday: birthday,\r\n        gender: gender,\r\n        yearDeEgreso: yearDeEgreso,\r\n        orientacion: orientacion,\r\n        profesion: profesion,\r\n        DNI: DNI,\r\n        tituloEgreso: tituloEgreso,\r\n      });\r\n      this.createUser();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // Se usa para actualizar los datos del usuario propios de firebase\r\n  async updateUserData(firstName, lastName) {\r\n    (await this.authSvc.afAuth.currentUser).updateProfile({\r\n      displayName: firstName + ' ' + lastName,\r\n    });\r\n  }\r\n\r\n  async createUser() {\r\n    // guarda los valores del email, password, photoURL, firstName y lastName\r\n    const { email, password, DNI, tituloEgreso } = this.registerForm.value;\r\n    // Guarda los datos del usuario registrado o un error\r\n    let user;\r\n    // Se usa para saber si existe el titulo del egresado\r\n    let existeEgresado: boolean;\r\n    // Se usa para verificar el DNI en la DB\r\n    let DNIEnFirestore: number;\r\n\r\n    try {\r\n      // Verifica si el titulo de Egreso que fue proveido existe\r\n      this.authSvc\r\n        .existeElEgresado(tituloEgreso)\r\n        .subscribe(async (userSnapshot) => {\r\n          this.egresado = userSnapshot.payload.data();\r\n          existeEgresado = userSnapshot.payload.exists;\r\n          // Si el titulo existe...\r\n          if (existeEgresado) {\r\n            // Se guarda el DNI en una variable\r\n            DNIEnFirestore = this.egresado.DNI;\r\n          } else {\r\n            // Pero si no, tira un error\r\n            this.errorMessage = 'Ese titulo de egresado no existe';\r\n            throw new Error(this.errorMessage);\r\n          }\r\n\r\n          // Si el DNI y el titulo de Egreso coninciden...\r\n          if (DNIEnFirestore == DNI && existeEgresado) {\r\n            // Intenta hacer el register con los datos del formulario\r\n            user = await this.authSvc.register(\r\n              email,\r\n              password,\r\n              this.registerForm.value\r\n            );\r\n\r\n            // Si el resultado de la operacion no es un string o undefined (osea que no devolvio un error)...\r\n            console.log(user);\r\n            if (typeof user !== 'string' && user != undefined) {\r\n              //Se agarran los valores firstName y lastName del registerForm\r\n              const { firstName, lastName } = this.registerForm.value;\r\n\r\n              // Se actualiza los datos del usuario (estos son los propios de firebase)\r\n              this.updateUserData(firstName, lastName);\r\n              console.log(user);\r\n\r\n              // Redirigir a wait-verification\r\n              this.router.navigate(['/wait-verification']);\r\n            } else {\r\n              // Si user es un undefined, significa que hubo un error, por lo tanto se muestra\r\n              if (user == undefined) {\r\n                console.log('LLegue aca');\r\n                this.errorMessage =\r\n                  'El titulo de egreso o el DNI el incorrecto';\r\n              } else {\r\n                // Si user es un string, significa que hubo un error, por lo tanto se muestra\r\n                this.errorMessage = user;\r\n                console.log(user);\r\n              }\r\n            }\r\n          } else {\r\n            // Si no coinciden se muestra el mensaje en la pantalla.\r\n            this.errorMessage = 'El titulo de egreso o el DNI el incorrecto';\r\n            throw new Error(this.errorMessage);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-eleccion-register',\r\n  templateUrl: './eleccion-register.component.html',\r\n  styleUrls: ['./eleccion-register.component.scss'],\r\n})\r\nexport class EleccionRegisterComponent implements OnInit {\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    console.log(user);\r\n    console.log(uid);\r\n    if (user && uid) {\r\n      if (!userFirebase.emailVerified) {\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        if (user.empresa && uid) {\r\n          this.router.navigate(['/perfil-empresa']);\r\n        } else if (!user.empresa && uid) {\r\n          this.router.navigate(['/perfil']);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  goToEgresadoRegister() {\r\n    this.router.navigate(['/register']);\r\n  }\r\n\r\n  goToEmpresaRegister() {\r\n    this.router.navigate(['/register-empresa']);\r\n  }\r\n}\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        ¿Cómo desea registrarse?\r\n      </h1>\r\n    </mat-card-title>\r\n    <mat-card-actions >\r\n      <div class=\"margen row\">\r\n        <div class=\"col-12 col-md-6 set-pointer\" (click)=\"goToEgresadoRegister()\">\r\n            <img mat-card-image src=\"../../../assets/images/eleccion_egresado.png\" alt=\"Eleccion egresado\"\r\n              class=\"img-fluid set-size-image mb-5\">\r\n            <div class=\"alinear-centro mt-5\">\r\n              <button type=\"submit\" (click)=\"goToEgresadoRegister()\" class=\"btn btn-dark alinear-centro\">Egresado</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"margen-pantalla-chica col-12 col-md-6 set-pointer\" (click)=\"goToEmpresaRegister()\">\r\n          <img mat-card-image src=\"../../../assets/images/eleccion_empresa.png\" alt=\"Eleccion empresa\"\r\n            class=\"img-fluid set-size-image mb-5\">\r\n          <div class=\"alinear-centro mt-5\">\r\n            <button type=\"submit\" (click)=\"goToEmpresaRegister()\" class=\"btn btn-dark\">Empresa</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subject, combineLatest } from 'rxjs';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home-empresa',\r\n  templateUrl: './home-empresa.component.html',\r\n  styleUrls: ['./home-empresa.component.scss'],\r\n})\r\nexport class HomeEmpresaComponent implements OnInit {\r\n  public profesions;\r\n\r\n  startAt = new Subject();\r\n  endAt = new Subject();\r\n  startObservable = this.startAt.asObservable();\r\n  endObservable = this.endAt.asObservable();\r\n  public resultadosDeBusqueda = null;\r\n  valorDeEvent;\r\n\r\n  firstNameFormGroup = new FormGroup({\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n  });\r\n\r\n  optionsFormGroup = new FormGroup({\r\n    profesion: new FormControl('', [Validators.required]),\r\n    minAge: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    maxAge: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    orientacion: new FormControl('', [Validators.required]),\r\n  });\r\n  public user: any;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authSvc: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    console.log(this.user);\r\n    console.log(uid);\r\n    if (!uid) {\r\n      this.router.navigate(['/home']);\r\n    } else if (this.user && uid) {\r\n      if (!userFirebase.emailVerified) {\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        if (!this.user.empresa && uid) {\r\n          this.router.navigate(['/home-egresado']);\r\n        } else if (this.user.empresa && uid) {\r\n          this.profesions = this.http.get(\r\n            '../../../../assets/JSON/profesion.json'\r\n          );\r\n          this.getResultsWithFirstName();\r\n          /* this.getResultsWithOptions(); */\r\n        }\r\n      }\r\n    }\r\n    /* if (user && uid) {\r\n      if (user.empresa && uid) {\r\n        this.router.navigate(['/perfil-empresa']);\r\n      } else if (!user.empresa && uid) {\r\n        this.router.navigate(['/perfil']);\r\n      }\r\n    }\r\n    const uid = localStorage.getItem('uid');\r\n    console.log(uid);\r\n    if (!uid) {\r\n      this.router.navigate(['/home']);\r\n    } else {\r\n      this.profesions = this.http.get('../../../../assets/JSON/profesion.json');\r\n      this.getResultsWithFirstName();\r\n      /* this.getResultsWithOptions();\r\n    } */\r\n    /* console.log(this.resultadosDeBusqueda);\r\n    this.authSvc.afAuth.user.subscribe((u) => {\r\n      console.log(u);\r\n      if (!u) {\r\n        this.router.navigate(['/home']);\r\n      } else {\r\n        this.profesions = this.http.get(\r\n          '../../../../assets/JSON/profesion.json'\r\n        );\r\n        this.getResultsWithFirstName();\r\n        /* this.getResultsWithOptions();\r\n      }\r\n    }); */\r\n  }\r\n\r\n  // Es para conseguir la informacion para el parametro de busqueda\r\n  getSearchData($event) {\r\n    this.valorDeEvent = $event.target.value;\r\n  }\r\n\r\n  searchWithFirstName() {\r\n    this.startAt.next(this.valorDeEvent);\r\n    this.endAt.next(this.valorDeEvent + '\\uf8ff');\r\n  }\r\n\r\n  // Llama al metodo que se encuentra en el service\r\n  makeQueryWithFirstName(start, end) {\r\n    console.log(start);\r\n    return this.authSvc.searchwithFirstName(start, end);\r\n  }\r\n\r\n  /*\r\n   * Se subscribe a un observable que va trayendo la informacion de la busqueda.\r\n   * Por razones de seguiridad y para evitar un consumo de la red, se desuscribe despues de 30 segundos\r\n   */\r\n  getResultsWithFirstName() {\r\n    let subscription = combineLatest(\r\n      this.startObservable,\r\n      this.endObservable\r\n    ).subscribe((value) => {\r\n      if (value[0] != null || value[0] != undefined) {\r\n        this.makeQueryWithFirstName(value[0], value[1]).subscribe(\r\n          (resultado) => {\r\n            this.resultadosDeBusqueda = resultado;\r\n            console.log(this.resultadosDeBusqueda);\r\n            setTimeout(() => {\r\n              subscription.unsubscribe;\r\n              console.log('DESUSCRITO');\r\n            }, 30000);\r\n          }\r\n        );\r\n      } else {\r\n        console.log('No ingreso nada');\r\n      }\r\n    });\r\n  }\r\n\r\n  makeQueryWithOptions(profesion, minAge, maxAge, orientacion) {\r\n    return this.authSvc.searchWithOption(\r\n      profesion,\r\n      minAge,\r\n      maxAge,\r\n      orientacion\r\n    );\r\n  }\r\n\r\n  getResultsWithOptions() {\r\n    const {\r\n      profesion,\r\n      minAge,\r\n      maxAge,\r\n      orientacion,\r\n    } = this.optionsFormGroup.value;\r\n    if (profesion == '' || minAge == '' || maxAge == '' || orientacion == '') {\r\n      console.log('No lleno todos los campos');\r\n    } else {\r\n      this.makeQueryWithOptions(\r\n        profesion,\r\n        minAge,\r\n        maxAge,\r\n        orientacion\r\n      ).subscribe((resultado) => {\r\n        this.resultadosDeBusqueda = resultado;\r\n        console.log(this.resultadosDeBusqueda);\r\n      });\r\n    }\r\n  }\r\n\r\n  getEdad(fecha): number {\r\n    const timeStamp = fecha.toString();\r\n    let [, res] = timeStamp.match(/seconds=(\\d+)/);\r\n    let fechaDeNacimiento = new Date(+res * 1000);\r\n\r\n    let today: Date = new Date();\r\n\r\n    let edad: number = today.getFullYear() - fechaDeNacimiento.getFullYear();\r\n    return edad;\r\n  }\r\n}\r\n","<app-toolbar></app-toolbar>\r\n<div class=\"margen container-fluid\">\r\n  <!-- <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div> -->\r\n  <!-- <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-3 \">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-3 mt-3 md-margen\">\r\n        <img class=\"offset-md-2 col-md-9 foto rounded-circle\" src=\"{{\r\n            user.photoURL ? user.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ user.firstName }}\" />\r\n      </div>\r\n      <div class=\"col-12 col-md-8 px-0 margin-top-content mb-4\">\r\n        <div class=\"row\">\r\n          <div class=\"col-10 col-md-11 mt-4\">\r\n            <h1 class=\"line-height-normal sm-text-left bienvenido vertical-align\">\r\n              Bienvenido {{ user.empresaName}}\r\n            </h1>\r\n          </div>\r\n\r\n          <div class=\"col-12\">\r\n            <p class=\"subtitulo-bienvenido mt-3 mb-3\">\r\n              <strong>En esta página podrás encontrar a los egresados indicados y contactarlos para que formen parte de tu equipo.</strong>\r\n            </p>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card> -->\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-3 \">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-3 alinear-centro sm-text-center\">\r\n        <img class=\"col-12 alinear-centro sm-text-center col-md-9 foto rounded-circle\" src=\"{{\r\n            user.photoURL ? user.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ user.empresaName }}\" />\r\n      </div>\r\n      <div class=\"col-12 col-md-8 px-0 margin-top-content margin-bottom-content \">\r\n        <div class=\"row\">\r\n          <div class=\"col-10 col-md-11\">\r\n            <h1 class=\"line-height-normal sm-text-left bienvenido vertical-align\">\r\n              Bienvenido, {{ user.empresaName }}\r\n            </h1>\r\n          </div>\r\n          <div class=\"col-12 d-none d-sm-block\">\r\n            <p class=\"subtitulo-bienvenido line-height-normal mt-2 mb-3\">\r\n              <strong>En esta página podrás encontrar a los egresados indicados y contactarlos para que formen parte de tu equipo.</strong>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-3\">\r\n    <ng-container *ngIf=\"resultadosDeBusqueda != null || resultadosDeBusqueda != undefined; then mostrarResultados; else barraDeBusqueda\"></ng-container>\r\n    <ng-template #barraDeBusqueda>\r\n      <form [formGroup]=\"firstNameFormGroup\" (ngSubmit)=\"searchWithFirstName()\" class=\"mt-2 mb-3\">\r\n        <mat-card-header class=\"text-center alinear-centro\">\r\n          <mat-card-title class=\"text-center alinear-centro mt-2 mb-4\">\r\n            <h1 class=\"text-center alinear-centro line-height-normal titulo\">\r\n              Encuentra a los mejores egresados\r\n            </h1>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <div class=\"form-row margen-divider\">\r\n          <div class=\"offset-md-1 col-md-8\">\r\n            <mat-form-field class=\"full-width-height\">\r\n              <mat-label>Nombre de Egresado</mat-label>\r\n              <span matPrefix>\r\n                <mat-icon>search</mat-icon>&nbsp;\r\n              </span>\r\n              <input type=\"text\" matInput placeholder=\"Juan Perez\" (change)=\"getSearchData($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"sm-text-center col-md-2\">\r\n            <button type=\"submit\" mat-raised-button class=\"btn\">\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form [formGroup]=\"optionsFormGroup\" (ngSubmit)=\"getResultsWithOptions()\" class=\"mt-2 mb-3\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <mat-card-title class=\"text-center alinear-centro mt-4 mb-1\">\r\n          <h1 class=\"text-center alinear-centro line-height-normal titulo-opciones\">\r\n            ¿Problemas encontrando al egresado indicado?\r\n          </h1>\r\n        </mat-card-title>\r\n        <mat-card-subtitle class=\"text-center alinear-centro subtitulo mb-5\">No pasa nada, busca a los egresados segun las\r\n          preferencias que quieras</mat-card-subtitle>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2\">\r\n            <img src=\"../../../../assets/images/gorrolupa.png\" class=\" img-fluid ml-5 d-none d-md-block\" alt=\"\">\r\n          </div>\r\n          <div class=\"col-md-10\">\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Profesion</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Orientacion</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Minima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"minAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Maxima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"maxAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"sm-text-center offset-md-9 col-md-2\">\r\n          <button type=\"submit\" mat-raiser-button class=\"btn\">\r\n            Buscar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </ng-template>\r\n    <ng-template #mostrarResultados>\r\n      <form [formGroup]=\"firstNameFormGroup\" (ngSubmit)=\"searchWithFirstName()\" class=\"mt-2 mb-3\">\r\n        <div class=\"form-row margen-divider\">\r\n          <div class=\"offset-md-1 col-md-8\">\r\n            <mat-form-field class=\"full-width-height\">\r\n              <mat-label>Nombre de Egresado</mat-label>\r\n              <span matPrefix>\r\n                <mat-icon>search</mat-icon>&nbsp;\r\n              </span>\r\n              <input type=\"text\" matInput placeholder=\"Juan Perez\" (change)=\"getSearchData($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"sm-text-center col-md-2\">\r\n            <button type=\"submit\" mat-raised-button class=\"btn\">\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form [formGroup]=\"optionsFormGroup\" (ngSubmit)=\"getResultsWithOptions()\" class=\"mt-2 mb-3\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <div class=\"row mt-4\">\r\n          <div class=\"col-12\">\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Profesion</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Orientacion</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Minima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"minAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Maxima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"maxAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"sm-text-center col-md-2\">\r\n                <button type=\"submit\" mat-raised-button class=\"btn\">\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"form-row\">\r\n          <div class=\"offset-md-1 col-md-10\">\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Profesion</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Minima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"minAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Maxima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"maxAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-row mb-2\">\r\n          <div class=\"offset-md-1 col-md-10\">\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Orientacion</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"sm-text-center offset-md-5 col-md-3\">\r\n                <button type=\"submit\" mat-raised-button class=\"btn\">\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n      </form>\r\n      <div *ngIf=\"resultadosDeBusqueda != null\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <div *ngFor=\"let resultado of resultadosDeBusqueda\" class=\"row pt-4\">\r\n          <div class=\"col-12 col-md-6\">\r\n            <div class=\"row set-pointer\" [routerLink]=\"['/perfil-de-servicio-egresado', resultado.uid]\">\r\n              <div class=\"col-md-6 set-pointer\">\r\n                <img class=\"img-fluid foto col-md-12 rounded-circle d-none d-md-block\" src=\"{{\r\n                    resultado.photoURL\r\n                      ? resultado.photoURL\r\n                      : '../../../assets/images/user8.png'\r\n                  }}\" alt=\"{{ resultado.firstName }}\" />\r\n              </div>\r\n              <div class=\"col-md-6 set-pointer\">\r\n                <h1 class=\"nombre\">{{ resultado.firstName }} {{ resultado.lastName }}</h1>\r\n                <h2 class=\"profesion\">{{ resultado.profesion }}</h2>\r\n                <h3 class=\"orientacion\">{{ resultado.orientacion }}, {{ resultado.yearDeEgreso }}</h3>\r\n                <!-- <h3 class=\"yearDeEgreso\">{{ resultado.yearDeEgreso }}</h3> -->\r\n                <h3 class=\"edad\">{{ getEdad(resultado.birthday) }} años</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-perfil-de-servicio-empresa',\r\n  templateUrl: './perfil-de-servicio-empresa.component.html',\r\n  styleUrls: ['./perfil-de-servicio-empresa.component.scss'],\r\n})\r\nexport class PerfilDeServicioEmpresaComponent implements OnInit {\r\n  public uid;\r\n  public empresaIngresada;\r\n  public uidDelUsuarioLogeado;\r\n\r\n  constructor(\r\n    private authSvc: AuthService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    console.log(user);\r\n    console.log(uid);\r\n    if (!uid) {\r\n      this.router.navigate(['/home']);\r\n    } else if (user && uid) {\r\n      if (!userFirebase.emailVerified) {\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        this.uidDelUsuarioLogeado = localStorage.getItem('uid');\r\n        this.route.paramMap.subscribe((params) => {\r\n          this.uid = params.get('uid');\r\n          console.log(this.uid);\r\n          console.log(this.uidDelUsuarioLogeado);\r\n          // Si el usuario seleccionado es el propio, se navega al propio perfil\r\n          if (this.uid == this.uidDelUsuarioLogeado) {\r\n            this.router.navigate(['/perfil-empresa']);\r\n          } else {\r\n            // Sino muestra los datos correspondientes\r\n            this.authSvc.getUser(this.uid).subscribe((userSnapshot) => {\r\n              this.empresaIngresada = userSnapshot.payload.data();\r\n              console.log(userSnapshot.payload.exists);\r\n              console.log(this.empresaIngresada);\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    /* this.route.paramMap.subscribe((params) => {\r\n      this.uid = params.get('uid');\r\n      console.log(this.uid);\r\n      this.authSvc.getUser(this.uid).subscribe((userSnapshot) => {\r\n        this.empresaIngresada = userSnapshot.payload.data();\r\n        console.log(userSnapshot.payload.exists);\r\n        console.log(this.empresaIngresada);\r\n      });\r\n    }); */\r\n  }\r\n}\r\n","<app-toolbar></app-toolbar>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-4 mt-3 md-margen\">\r\n        <img class=\"offset-md-2 col-md-8 rounded-circle\" src=\"{{\r\n            empresaIngresada.photoURL ? empresaIngresada.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ empresaIngresada.empresaName }}\" />\r\n        <div class=\"offset-md-3 mt-4 sm-alinear-centro\">\r\n          <h3 class=\"texto-datos\">\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3\" src=\"../../../../assets/images/correo.png\"> {{ empresaIngresada.email }}\r\n            </p>\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3\" src=\"../../../../assets/images/cuitcuil.png\"> {{ empresaIngresada.CUIT }}\r\n            </p>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n        <div class=\"col-12 col-md-8 px-0 margin-top-content mb-4\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 col-md-11\">\r\n              <h1 class=\"line-height-normal sm-text-left titulo vertical-align\">\r\n                {{ empresaIngresada.empresaName }}\r\n              </h1>\r\n            </div>\r\n            <!-- <div class=\"col-12\">\r\n              <p class=\"subtitulo-profesion mt-2 mb-3\">\r\n                <strong>Descripcion de la empresa o lema</strong>\r\n              </p>\r\n            </div> -->\r\n            <div class=\"col 12 \">\r\n              <h3 >\r\n                <p class=\"mt-3 descrip\">\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\r\n                  nec ornare tortor, et volutpat augue. In tincidunt auctor nisl eget\r\n                  condimentum. Donec id iaculis sapien. Vivamus pharetra facilisis\r\n                  quam et sodales. Quisque congue, ipsum et sollicitudin laoreet,\r\n                  mauris augue condimentum est, in placerat massa odio vel erat.\r\n                  Mauris sit amet efficitur lorem, id volutpat diam.\"\r\n                </p>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","<app-toolbar></app-toolbar>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-4 mt-3 md-margen\">\r\n        <img class=\"offset-md-2 col-md-8 rounded-circle\" src=\"{{\r\n            user.photoURL ? user.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ user.empresaName }}\" />\r\n        <div class=\"offset-md-3 mt-4 sm-alinear-centro\">\r\n          <h3 class=\"texto-datos\">\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3\" src=\"../../../../assets/images/correo.png\"> {{ user.email }}\r\n            </p>\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3\" src=\"../../../../assets/images/cuitcuil.png\"> {{ user.CUIT }}\r\n            </p>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <ng-container *ngIf=\"mostrar; then mostrarDatos; else editarDatos\"></ng-container>\r\n      <ng-template #mostrarDatos>\r\n        <div class=\"col-12 col-md-8 px-0 margin-top-content mb-4\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 col-md-11\">\r\n              <h1 class=\"line-height-normal sm-text-left titulo vertical-align\">\r\n                {{ user.empresaName }}\r\n              </h1>\r\n            </div>\r\n            <div class=\"col-2 col-md-1 px-0\">\r\n              <button (click)=\"editar()\" class=\"boton-editar vertical-align\">\r\n                <img mat-icon class=\"img-fluid\" src=\"../../assets/images/editar.png\">\r\n              </button>\r\n            </div>\r\n            <!-- <div class=\"col-12\">\r\n              <p class=\"subtitulo-profesion mt-2 mb-3\">\r\n                <strong>Descripcion de la empresa o lema</strong>\r\n              </p>\r\n            </div> -->\r\n            <div class=\"col 12 \">\r\n              <h3 >\r\n                <p class=\"mt-3 descrip\">\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\r\n                  nec ornare tortor, et volutpat augue. In tincidunt auctor nisl eget\r\n                  condimentum. Donec id iaculis sapien. Vivamus pharetra facilisis\r\n                  quam et sodales. Quisque congue, ipsum et sollicitudin laoreet,\r\n                  mauris augue condimentum est, in placerat massa odio vel erat.\r\n                  Mauris sit amet efficitur lorem, id volutpat diam.\"\r\n                </p>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template #editarDatos>\r\n        <div class=\"col-12 col-md-8 px-0 mt-4 mb-4\">\r\n          <form [formGroup]=\"editarForm\" (ngSubmit)=\"onEdit()\" class=\"sm-margen mt-5 mb-3\">\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Nombre de la empresa</mat-label>\r\n                  <input matInput formControlName=\"empresaName\" type=\"text\" [(ngModel)]=\"user.empresaName\">\r\n                  <mat-error *ngIf=\"empresaNamePattern.hasError('required')\">\r\n                    El nombre es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"empresaNamePattern.hasError('pattern') || empresaNamePattern.hasError('minlength')\">\r\n                    El nombre solo esta compuesto por\r\n                    <strong>letras</strong> y debe tener minimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <!-- <div class=\"col-md-5 col-12 float-right\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Apellido</mat-label>\r\n                  <input matInput formControlName=\"lastName\" type=\"text\" [(ngModel)]=\"userAux.lastName\">\r\n                  <mat-error *ngIf=\"lastNamePattern.hasError('required')\">\r\n                    El apellido es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"lastNamePattern.hasError('pattern') || lastNamePattern.hasError('minlength')\">\r\n                    El apellido solo esta compuesto por\r\n                    <strong>letras</strong> y debe tener minimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div> -->\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <label for=\"Cambiar Foto\">Foto de perfil</label>\r\n                <input type=\"file\" accept=\"image/jpeg, image/png, image/jpg\" class=\"form-control-file\"\r\n                  id=\"inputFile\" formControlName=\"photoURL\" (change)=\"cambioArchivo($event)\" />\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 offset-md-1 col-md-5 mt-4 text-center\">\r\n                    <button class=\"btn btn-dark\" type=\"submit\">Guardar</button>\r\n                  </div>\r\n                  <div class=\"col-12 offset-md-1 col-md-5 mt-4 text-center\">\r\n                    <button class=\"btn btn-dark\" (click)=\"editar()\">Cancelar</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-perfil-empresa',\r\n  templateUrl: './perfil-empresa.component.html',\r\n  styleUrls: ['./perfil-empresa.component.scss'],\r\n})\r\nexport class PerfilEmpresaComponent implements OnInit {\r\n  editarForm = new FormGroup({\r\n    empresaName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z .]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public empresaNamePattern = this.editarForm.get('empresaName');\r\n\r\n  // Variable para guardar los datos del usuario\r\n  public user: any;\r\n  public uid;\r\n\r\n  // Variable para saber si se tiene que mostrar el formulario editable\r\n  public mostrar: boolean = true;\r\n\r\n  // Variables para la subida de fotos al Storage\r\n  public nombreArchivo = '';\r\n  public mensajeArchivo = 'No hay archivo seleccionado';\r\n  public datosFormulario = new FormData();\r\n  public URLPublica: string;\r\n  public porcentaje = 0;\r\n  public finalizado = false;\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  public errorMessage: any;\r\n\r\n  // Se usa para saber si el usuario ofrece servicios o no.\r\n  public ofreceServicio: boolean;\r\n\r\n  constructor(\r\n    public authSvc: AuthService,\r\n    public router: Router,\r\n    public ngZone: NgZone\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n    this.uid = localStorage.getItem('uid');\r\n    console.log(this.user);\r\n    if (this.user && this.uid) {\r\n      if (!userFirebase.emailVerified) {\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        if (!this.user.empresa && this.uid) {\r\n          this.router.navigate(['/perfil']);\r\n        }\r\n      }\r\n    }\r\n    /* try {\r\n      this.authSvc.afAuth.user.subscribe((u) => {\r\n        if (u) {\r\n          this.authSvc.getUser(u.uid).subscribe((userSnapshot) => {\r\n            this.user = userSnapshot.payload.data();\r\n            console.log(userSnapshot.payload.exists);\r\n            console.log(this.user);\r\n          });\r\n        } else {\r\n          console.log('Nadie inicio sesion');\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } */\r\n  }\r\n\r\n  public cambioArchivo(event) {\r\n    console.log('Llegue 0');\r\n    if (event.target.files.length > 0) {\r\n      if (\r\n        event.target.files[0].type == 'image/jpeg' ||\r\n        event.target.files[0].type == 'image/jpg' ||\r\n        event.target.files[0].type == 'image/png'\r\n      ) {\r\n        console.log(event.target.files);\r\n        for (let i = 0; i < event.target.files.length; i++) {\r\n          this.mensajeArchivo = `Archivo preparado: ${event.target.files[i].name}`;\r\n          this.nombreArchivo = event.target.files[i].name;\r\n          this.datosFormulario.delete('archivo');\r\n          this.datosFormulario.append(\r\n            'archivo',\r\n            event.target.files[i],\r\n            event.target.files[i].name\r\n          );\r\n        }\r\n        console.log('Llegue 1');\r\n        console.log(this.datosFormulario.get('archivo'));\r\n      } else {\r\n        this.mensajeArchivo =\r\n          'El formato del archivo no es valido (solo JPG, PNG o JPEG)';\r\n        console.log('Llegue 1,5');\r\n      }\r\n      console.log('Llegue 1');\r\n    } else {\r\n      this.mensajeArchivo = 'No hay un archivo seleccionado';\r\n      console.log('Llegue 1,5');\r\n    }\r\n  }\r\n\r\n  // Se usa para actualizar los datos del usuario propios de firebase\r\n  async updateUserData(empresaName, photoURL) {\r\n    (await this.authSvc.afAuth.currentUser).updateProfile({\r\n      displayName: empresaName,\r\n      photoURL: photoURL,\r\n    });\r\n  }\r\n\r\n  public editar() {\r\n    if (this.mostrar) {\r\n      this.mostrar = false;\r\n    } else {\r\n      this.mostrar = true;\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  async onEdit() {\r\n    try {\r\n      // Verifica si el usuario metio un archivo para cambiar\r\n      if (this.datosFormulario.get('archivo') != null) {\r\n        // Se encarga de actualizar los datos del usuario, si entre esos datos hay una foto\r\n        this.updateUserWithPhoto();\r\n      } else {\r\n        // Se encarga de actualizar los datos del usuario, si entre esos NO datos hay una foto\r\n        this.updateUserWithoutPhoto();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // Se encarga de actualizar los datos del usuario, si entre esos datos NO hay una foto\r\n  async updateUserWithoutPhoto() {\r\n    // Si no se ingresa una foto de perfil nueva, se agarra el link de la que ya estaba\r\n    this.URLPublica = (await this.authSvc.afAuth.currentUser).photoURL;\r\n\r\n    console.log('Llegue 10');\r\n    console.log(this.URLPublica);\r\n\r\n    this.editEmpresa();\r\n  }\r\n\r\n  // Se encarga de actualizar los datos del usuario, si entre esos datos hay una foto\r\n  updateUserWithPhoto() {\r\n    console.log('Llegue aca 2');\r\n    let archivo = this.datosFormulario.get('archivo');\r\n    console.log('Llegue aca 3');\r\n    const referencia = this.authSvc.referenciaCloudStorage(this.nombreArchivo);\r\n    const tarea = this.authSvc.tareaCloudStorage(this.nombreArchivo, archivo);\r\n    console.log('Llegue aca 4');\r\n\r\n    tarea.percentageChanges().subscribe((porcentaje) => {\r\n      this.porcentaje = Math.round(porcentaje);\r\n      if (this.porcentaje == 100) {\r\n        this.finalizado = true;\r\n        console.log('LLEGUE ACA 6');\r\n        referencia.getDownloadURL().subscribe((URL) => {\r\n          this.URLPublica = URL;\r\n        });\r\n        console.log(this.URLPublica);\r\n        console.log('LLEGUE ACA 7');\r\n\r\n        this.editEmpresa();\r\n      }\r\n    });\r\n    console.log('Llegue aca 5');\r\n    referencia.getDownloadURL().subscribe((URL) => {\r\n      this.URLPublica = URL;\r\n    });\r\n    console.log(this.URLPublica);\r\n  }\r\n\r\n  async editEmpresa() {\r\n    const user = await this.authSvc.editEmpresa(\r\n      this.user,\r\n      this.editarForm.value,\r\n      this.URLPublica\r\n    );\r\n\r\n    // Si el resultado de la operacion no es un string (osea que no devolvio un error)\r\n    if (typeof user !== 'string') {\r\n      //Se agarran los valores firstName y lastName del registerForm\r\n      const { empresaName } = this.editarForm.value;\r\n\r\n      // Se actualiza los datos del usuario (estos son los propios de firebase)\r\n      this.updateUserData(empresaName, this.URLPublica);\r\n\r\n      console.log(user);\r\n\r\n      this.editar();\r\n    } else {\r\n      // Si user es un string, significa que hubo un error, por lo tanto se muestra\r\n      this.errorMessage = user;\r\n      console.log(user);\r\n    }\r\n  }\r\n}\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        Crea tu cuenta\r\n      </h1>\r\n    </mat-card-title>\r\n    <mat-card-subtitle class=\"subtitulo line-height-normal text-center mt-5\">\r\n      Ingresa tus datos para crear tu perfil de empresa <br> y contratar los mejores egresados\r\n    </mat-card-subtitle>\r\n    <form [formGroup]=\"registerEmpresaForm\" (ngSubmit)=\"onRegister()\" class=\"sm-margen mt-5 mb-3\">\r\n      <div class=\"form-row mb-2\">\r\n        <div class=\"offset-md-2 col-md-4 col-12\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input matInput formControlName=\"empresaName\" type=\"text\">\r\n            <mat-error *ngIf=\"empresaNamePattern.hasError('required')\">\r\n              El nombre de la empresa es <strong>requerido</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"empresaNamePattern.hasError('pattern') ||empresaNamePattern.hasError('minlength')\">\r\n              El nombre solo esta compuesto por\r\n              <strong>letras</strong> y debe tener minimo 2\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-4 col-12\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>CUIT/CUIL</mat-label>\r\n            <input matInput formControlName=\"CUIT\" type=\"number\">\r\n            <mat-error *ngIf=\"cuitPattern.hasError('required')\">\r\n              El CUIT/CUIL es <strong>requerido</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"cuitPattern.hasError('pattern') || cuitPattern.hasError('minlength')\">\r\n              El CUIT/CUIL solo esta compuesto por <strong>numeros</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row mb-3\">\r\n        <div class=\"offset-md-2 col-md-4 col-12\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput type=\"email\" formControlName=\"email\">\r\n            <mat-error *ngIf=\"emailPattern.hasError('required')\">\r\n              El email es <strong>requerido</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"emailPattern.hasError('pattern')\">\r\n              El email no es <strong>valido</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-4 col-12\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Password</mat-label>\r\n            <input matInput type=\"password\" formControlName=\"password\" [type]=\"hide ? 'password':'text' \">\r\n            <mat-icon class=\"material-icons\" matSuffix (click)=\"hide = !hide\">\r\n              {{ hide ? \"visibility\" : \"visibility_off\" }}\r\n            </mat-icon>\r\n            <mat-error *ngIf=\"passwordPattern.hasError('required')\">\r\n              La contraseña es <strong>requerida</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"passwordPattern.hasError('minlength')\">\r\n              La contraseña no es <strong>valida</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\" *ngIf=\"errorMessage\">\r\n        <div class=\"offset-2 col-8\">\r\n          <small class=\"form-text alert-danger text-center mt-2 pt-1 pb-1\"> {{ errorMessage }} </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"text-center offset-md-7 col-md-5\">\r\n          <p class=\"container\">\r\n            ¿Ya tienes una cuenta?\r\n            <a [routerLink]=\"['/login']\">\r\n              Inicia Sesión\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"text-center offset-md-8 col-md-4\">\r\n          <button type=\"submit\" mat-raised-button class=\"btn\">\r\n            Registrarse\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n\r\n<!-- ACLARACIONES -->\r\n<!-- El FormControlName esta asociado al nombre de las variables\r\n  FormControl del register.component.ts -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register-empresa',\r\n  templateUrl: './register-empresa.component.html',\r\n  styleUrls: ['./register-empresa.component.scss'],\r\n})\r\nexport class RegisterEmpresaComponent implements OnInit {\r\n  registerEmpresaForm = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n    ]),\r\n    empresaName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z. ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    CUIT: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public emailPattern = this.registerEmpresaForm.get('email');\r\n  public passwordPattern = this.registerEmpresaForm.get('password');\r\n  public empresaNamePattern = this.registerEmpresaForm.get('empresaName');\r\n  public cuitPattern = this.registerEmpresaForm.get('CUIT');\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  public errorMessage: string;\r\n\r\n  // Variable para saber si la contraseña es visible o no\r\n  public hide = true;\r\n\r\n  constructor(private authSvc: AuthService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    if (user && uid) {\r\n      if (!userFirebase.emailVerified) {\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        if (user.empresa && uid) {\r\n          this.router.navigate(['/perfil-empresa']);\r\n        } else if (!user.empresa && uid) {\r\n          this.router.navigate(['/perfil']);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRegister() {\r\n    try {\r\n      this.createUser();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async updateUserData(empresaName) {\r\n    (await this.authSvc.afAuth.currentUser).updateProfile({\r\n      displayName: empresaName,\r\n    });\r\n  }\r\n\r\n  async createUser() {\r\n    // guarda los valores del email, password\r\n    const { email, password } = this.registerEmpresaForm.value;\r\n    try {\r\n      console.log(this.registerEmpresaForm.value);\r\n      // Intenta hacer el register con los datos del formulario\r\n      const user = await this.authSvc.registerEmpresa(\r\n        email,\r\n        password,\r\n        this.registerEmpresaForm.value\r\n      );\r\n\r\n      // Si el resultado de la operacion no es un string (osea que no devolvio un error)\r\n      if (typeof user !== 'string') {\r\n        //Se agarran los valores firstName y lastName del registerForm\r\n        const { empresaName } = this.registerEmpresaForm.value;\r\n\r\n        // Se actualiza los datos del usuario (estos son los propios de firebase)\r\n        this.updateUserData(empresaName);\r\n        console.log(user);\r\n\r\n        // Redirigir a wait-verification\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        // Si user es un string, significa que hubo un error, por lo tanto se muestra\r\n        this.errorMessage = user;\r\n        console.log(user);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { FormControl, EmailValidator, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n  providers: [AuthService]\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  passwordForm = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]),\r\n\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  emailPattern = this.passwordForm.get('email');\r\n\r\n  constructor(private authSvc: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    const uid = localStorage.getItem('uid');\r\n    if(uid != null) {\r\n      this.router.navigate(['/home']);\r\n    }\r\n    /* this.authSvc.afAuth.user.subscribe((u) => {\r\n      if (!u) {\r\n        this.router.navigate(['/home']);\r\n      }\r\n    }); */\r\n  }\r\n\r\n  onReset() {\r\n    try{\r\n\r\n      // Se agarra el valor de userEmail\r\n      const { email } = this.passwordForm.value;\r\n\r\n      // Verifica si esta vacio o no\r\n      if (email !== ''){\r\n\r\n        //Llama al metodo resetear contraseña\r\n        this.authSvc.resetPassword(email);\r\n\r\n        // Se hace un aviso que el mail fue enviado\r\n        window.alert('Email sent, check your inbox!');\r\n\r\n        // Se redirige al login\r\n        this.router.navigate(['/login']);\r\n\r\n      } else {\r\n\r\n        // Se hace un aviso que pide un email\r\n        window.alert('Please, enter an email');\r\n      }\r\n    } catch (error) {\r\n\r\n      // Si hubo algun error hace un aviso\r\n      window.alert('There was an error, please try again');\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n","<!-- <div class=\"card mt-5\">\r\n  <div class=\"card-body\">\r\n    <h3 class=\"card-title text-center\">Please enter your email</h3>\r\n    <div class=\"form-group mt-4\">\r\n      <input type=\"email\" class=\"form-control offset-md-2 col-md-8\" [formControl]=\"userEmail\" required>\r\n    </div>\r\n    <div class=\"form-group text-center mt-4\">\r\n      <button class=\"btn btn-primary btn-block btn-dark offset-md-2 col-md-8\" (click)=\"onReset()\">\r\n        Request a password Reset\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        Cambio de contraseña\r\n      </h1>\r\n    </mat-card-title>\r\n    <mat-card-subtitle class=\"subtitulo line-height-normal text-center mt-1\">\r\n      Inrgesa su email para recibir un correo<br />para cambiar la contraseña\r\n    </mat-card-subtitle>\r\n    <form [formGroup]=\"passwordForm\" (ngSubmit)=\"onReset()\" class=\"mt-1 mb-3\">\r\n      <div class=\"form-row mb-2\">\r\n        <div class=\"offset-3 col-6\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput type=\"email\" formControlName=\"email\">\r\n            <mat-error *ngIf=\"emailPattern.invalid && !emailPattern.touched\">\r\n              Por favor, ingrese un email válido.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"emailPattern.touched\" >\r\n              El email es <strong>requerido</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"form-row mt-4 mb-4\" *ngIf=\"errorMessage\">\r\n        <div class=\"offset-2 col-8\">\r\n          <small class=\"form-text alert-danger text-center mt-2 pt-1 pb-1\"> {{ errorMessage }} </small>\r\n        </div>\r\n      </div> -->\r\n      <mat-card-actions class=\"mb-5\">\r\n        <div class=\"offset-3 col-6\">\r\n          <div class=\"alinear-centro mt-4\">\r\n            <button type=\"submit\" class=\"btn btn-dark btn-block alinear-centro\">Solicitar cambio</button>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"col-12 mt-4\">\r\n          <div class=\"alinear-centro mt-4\">\r\n            <p class=\"sm-text-center float-left mb-0\">\r\n              ¿No tienes una cuenta?\r\n              <a [routerLink]=\"['/register']\">\r\n                Regístrate\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div> -->\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n\r\n<!-- ACLARACIONES -->\r\n<!-- El FormControlName esta asociado al nombre de las variables\r\n     FormControl del login.component.ts\r\n-->\r\n","import { Injectable, NgZone, ErrorHandler } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreDocument,\r\n} from '@angular/fire/firestore';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { User } from 'src/app/shared/interfaces/user';\r\nimport { Empresa } from 'src/app/shared/interfaces/empresa';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  userData: any;\r\n\r\n  constructor(\r\n    public afAuth: AngularFireAuth,\r\n    private angularFirestore: AngularFirestore,\r\n    public angularFirestorage: AngularFireStorage,\r\n    public router: Router,\r\n    public ngZone: NgZone\r\n  ) {}\r\n\r\n  /*\r\n  ┌─────────────────────────────────────────────┐\r\n  │                    LOGIN                    │\r\n  └─────────────────────────────────────────────┘\r\n  */\r\n\r\n  //Login con email y password\r\n  async login(email: string, password: string) {\r\n    try {\r\n      //Hace un signIn con email y password\r\n      const result = await this.afAuth.signInWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      localStorage.setItem('uid', result.user.uid);\r\n      localStorage.setItem('userFirebase', JSON.stringify(result.user));\r\n      this.getUser(result.user.uid).subscribe((userSnapshot) => {\r\n        localStorage.setItem(\r\n          'user',\r\n          JSON.stringify(userSnapshot.payload.data())\r\n        );\r\n      });\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  /*\r\n  ┌─────────────────────────────────────────────┐\r\n  │                   SIGN UP                   │\r\n  └─────────────────────────────────────────────┘\r\n  */\r\n\r\n  async register(email: string, password: string, values) {\r\n    try {\r\n      console.log('Llegue a register');\r\n      // Crea un usuario usando email y password y lo mete en el firebase\r\n      const result = await this.afAuth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n\r\n      // Manda un mail para verificar su email\r\n      this.sendVerificationEmail();\r\n\r\n      /*\r\n       * Se llama al metodo SetUserDataLogUp para meter los datos\r\n       * del usuario en firestore\r\n       */\r\n      this.setUserDataLogUp(result.user, values);\r\n\r\n      localStorage.setItem('uid', result.user.uid);\r\n\r\n      localStorage.setItem('userFirebase', JSON.stringify(result.user));\r\n\r\n      this.getUser(result.user.uid).subscribe((userSnapshot) => {\r\n        localStorage.setItem(\r\n          'user',\r\n          JSON.stringify(userSnapshot.payload.data())\r\n        );\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  async registerEmpresa(email: string, password: string, values) {\r\n    try {\r\n      console.log('Llegue a register');\r\n      // Crea un usuario usando email y password y lo mete en el firebase\r\n      const result = await this.afAuth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n\r\n      console.log(result);\r\n\r\n      // Manda un mail para verificar su email\r\n      this.sendVerificationEmail();\r\n\r\n      /*\r\n       * Se llama al metodo SetUserDataLogUp para meter los datos\r\n       * del usuario en firestore\r\n       */\r\n      this.setEmpresaDataLogUp(result.user, values);\r\n\r\n      localStorage.setItem('uid', result.user.uid);\r\n      this.getUser(result.user.uid).subscribe((userSnapshot) => {\r\n        localStorage.setItem(\r\n          'user',\r\n          JSON.stringify(userSnapshot.payload.data())\r\n        );\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  /*\r\n  ┌──────────────────────────────────────────────┐\r\n  │            SECURITY VERIFICATIONS            │\r\n  └──────────────────────────────────────────────┘\r\n  */\r\n\r\n  //Se usa para que el usuario resetee su password\r\n  async resetPassword(email: string): Promise<void> {\r\n    try {\r\n      // Se envia un mail al usuario para resetear la contraseña\r\n      return this.afAuth.sendPasswordResetEmail(email);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // Se envia un mail al usuario para que verifique su email\r\n  async sendVerificationEmail(): Promise<void> {\r\n    return (await this.afAuth.currentUser).sendEmailVerification();\r\n  }\r\n\r\n  /*\r\n  ┌─────────────────────────────────────────────┐\r\n  │                   LOG OUT                   │\r\n  └─────────────────────────────────────────────┘\r\n  */\r\n\r\n  // Se usa para deslogear al usuario\r\n  async logout() {\r\n    try {\r\n      await this.afAuth.signOut();\r\n\r\n      // Elimina al user del local storage\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('userFirebase');\r\n      localStorage.removeItem('uid');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  /*\r\n  ┌─────────────────────────────────────────────┐\r\n  │                  FIRESTORE                  │\r\n  └─────────────────────────────────────────────┘\r\n  */\r\n\r\n  // Se usa para escribir los datos del usuario en Firestore\r\n  setUserDataLogUp(user, values, photoURL?) {\r\n    // Se hace una referencia al documento del usuario teniendo en cuenta su uid\r\n    const userRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `users/${user.uid}`\r\n    );\r\n\r\n    if (typeof photoURL === 'undefined') {\r\n      photoURL = '';\r\n    }\r\n\r\n    /*\r\n     * Se guarda en la variable userData toda la informacion del usuario\r\n     * usando la interfaz User\r\n     */\r\n    const userData: User = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      gender: values.gender,\r\n      photoURL: photoURL,\r\n      birthday: values.birthday,\r\n      yearDeEgreso: values.yearDeEgreso,\r\n      orientacion: values.orientacion,\r\n      profesion: values.profesion,\r\n      DNI: values.DNI,\r\n      tituloEgreso: values.tituloEgreso,\r\n      cellphone: values.cellphone,\r\n      empresa: false,\r\n    };\r\n\r\n    /*\r\n     * Se guarda la informacion que esta dentro de userData en el\r\n     * Firestore usando la referencia creada antes\r\n     */\r\n    return userRef.set(userData, {\r\n      merge: true,\r\n    });\r\n  }\r\n\r\n  // Se usa para escribir los datos del usuario en Firestore\r\n  setEmpresaDataLogUp(user, values, photoURL?) {\r\n    // Se hace una referencia al documento del usuario teniendo en cuenta su uid\r\n    const userRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `users/${user.uid}`\r\n    );\r\n\r\n    if (typeof photoURL === 'undefined') {\r\n      photoURL = '';\r\n    }\r\n\r\n    let verificada = values.verificada;\r\n\r\n    if (typeof verificada === 'undefined') {\r\n      verificada = '';\r\n    }\r\n\r\n    let CUIT = values.CUIT.toString();\r\n    console.log(CUIT);\r\n\r\n    /*\r\n     * Se guarda en la variable userData toda la informacion del usuario\r\n     * usando la interfaz User\r\n     */\r\n    const empresaData: Empresa = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      empresaName: values.empresaName,\r\n      CUIT: CUIT,\r\n      verificada: verificada,\r\n      photoURL: photoURL,\r\n      empresa: true,\r\n    };\r\n\r\n    /*\r\n     * Se guarda la informacion que esta dentro de userData en el\r\n     * Firestore usando la referencia creada antes\r\n     */\r\n    return userRef.set(empresaData, {\r\n      merge: true,\r\n    });\r\n  }\r\n\r\n  // Se usa para editar un usuario que ya se encuentre en Firestore\r\n  editUser(user: any, data: any, url: any) {\r\n    try {\r\n      if (\r\n        data.firstName == '' ||\r\n        data.lastName == '' ||\r\n        data.gender == '' ||\r\n        data.birthday == '' ||\r\n        data.cellphone == ''\r\n      ) {\r\n        return 'Por favor llene todos los campos obligatorios';\r\n      }\r\n\r\n      // Se actualizan todos los datos del documento del usuario\r\n      const result = this.angularFirestore\r\n        .collection('users')\r\n        .doc(user.uid)\r\n        .set({\r\n          uid: user.uid,\r\n          email: user.email,\r\n          firstName: data.firstName,\r\n          lastName: data.lastName,\r\n          gender: data.gender,\r\n          photoURL: url,\r\n          birthday: data.birthday,\r\n          yearDeEgreso: user.yearDeEgreso,\r\n          orientacion: user.orientacion,\r\n          profesion: data.profesion,\r\n          DNI: user.DNI,\r\n          tituloEgreso: user.tituloEgreso,\r\n          cellphone: data.cellphone,\r\n          empresa: false,\r\n        });\r\n\r\n      this.getUser(user.uid).subscribe((userSnapshot) => {\r\n        localStorage.setItem(\r\n          'user',\r\n          JSON.stringify(userSnapshot.payload.data())\r\n        );\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  // Se usa para editar la empresa\r\n  editEmpresa(user: any, data: any, url: any) {\r\n    try {\r\n      if (data.empresaName == '') {\r\n        return 'Por favor llene todos los campos obligatorios';\r\n      }\r\n\r\n      // Se actualizan todos los datos del documento del usuario\r\n      const result = this.angularFirestore\r\n        .collection('users')\r\n        .doc(user.uid)\r\n        .set({\r\n          uid: user.uid,\r\n          email: user.email,\r\n          empresaName: data.empresaName,\r\n          CUIT: user.CUIT,\r\n          verificada: user.verificada,\r\n          photoURL: url,\r\n          empresa: true,\r\n        });\r\n\r\n      this.getUser(user.uid).subscribe((userSnapshot) => {\r\n        localStorage.setItem(\r\n          'user',\r\n          JSON.stringify(userSnapshot.payload.data())\r\n        );\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  // Se usa para traer a un usuario especifico\r\n  public getUser(id: string) {\r\n    //Trae de la collection 'users', el documento con el id que se pasa como argumento\r\n    return this.angularFirestore.collection('users').doc(id).snapshotChanges();\r\n  }\r\n\r\n  // Se usa para traer un titulo\r\n  public existeElEgresado(tituloEgreso) {\r\n    tituloEgreso = tituloEgreso.toString();\r\n    return this.angularFirestore\r\n      .collection('titulos')\r\n      .doc(tituloEgreso)\r\n      .snapshotChanges();\r\n  }\r\n\r\n  searchWithOption(profesion, minAge, maxAge, orientacion) {\r\n    let today = new Date();\r\n    let todayYear: number = today.getFullYear();\r\n    let todayMonth: number = today.getMonth();\r\n    let todayDay: number = today.getDate();\r\n\r\n    minAge = parseInt(minAge);\r\n    maxAge = parseInt(maxAge);\r\n\r\n    let minAgeDate = new Date(todayYear - minAge, todayMonth, todayDay);\r\n    let maxAgeDate = new Date(todayYear - maxAge, todayMonth, todayDay);\r\n\r\n    return this.angularFirestore\r\n      .collection('users', (ref) =>\r\n        ref\r\n          .where('profesion', '==', profesion)\r\n          .where('birthday', '<=', minAgeDate)\r\n          .where('birthday', '>=', maxAgeDate)\r\n          .where('orientacion', '==', orientacion)\r\n      )\r\n      .valueChanges();\r\n  }\r\n\r\n  searchwithFirstName(start, end) {\r\n    console.log(start);\r\n    console.log(end);\r\n    return this.angularFirestore\r\n      .collection('users', (ref) =>\r\n        ref.limit(25).orderBy('firstName').startAt(start).endAt(end)\r\n      )\r\n      .valueChanges();\r\n  }\r\n\r\n  // Se usa para traer de la DB los usuarios que coincidan con el filtro y el parametro de busqueda\r\n  search(start, end, filter) {\r\n    console.log(filter);\r\n    console.log(start);\r\n    console.log(end);\r\n    return this.angularFirestore\r\n      .collection('users', (ref) =>\r\n        ref.limit(5).orderBy(filter).startAt(start).endAt(end)\r\n      )\r\n      .valueChanges();\r\n  }\r\n\r\n  /*\r\n  ┌─────────────────────────────────────────────┐\r\n  │                   STORAGE                   │\r\n  └─────────────────────────────────────────────┘\r\n  */\r\n\r\n  // Se usa para subir un archivo a Storage\r\n  public tareaCloudStorage(nombreArchivo: string, datos: any) {\r\n    return this.angularFirestorage.upload(nombreArchivo, datos);\r\n  }\r\n\r\n  // Se usa para obtener una referencia de un archivo en Storage\r\n  public referenciaCloudStorage(nombreArchivo: string) {\r\n    return this.angularFirestorage.ref(nombreArchivo);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-wait-verification',\r\n  templateUrl: './wait-verification.component.html',\r\n  styleUrls: ['./wait-verification.component.scss']\r\n})\r\nexport class WaitVerificationComponent implements OnInit {\r\n\r\n  public user$: Observable<any> = this.authSvc.afAuth.user;\r\n  public isVerified: boolean;\r\n\r\n  constructor(private authSvc: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    const uid = localStorage.getItem('uid');\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    console.log(user);\r\n    if(!uid) {\r\n      this.router.navigate(['/home']);\r\n    }\r\n\r\n    if(userFirebase.emailVerified) {\r\n      if(!user.empresa) {\r\n        this.router.navigate(['/home-egresado']);\r\n      } else {\r\n        this.router.navigate(['/home-empresa']);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  onSendEmail(){\r\n    this.authSvc.sendVerificationEmail();\r\n  }\r\n\r\n}\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div>\r\n  <div *ngIf=\"user$ | async as user ; else loading\">\r\n    <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n      <mat-card-title class=\"text-center mt-4 mb-4\">\r\n        <h1 class=\"line-height-normal titulo\">\r\n          ¡Gracias por registrarse!\r\n        </h1>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <p class=\"text-center mt-5 line-height-normal roboto-light\">\r\n          Hemos recibido sus datos\r\n        </p>\r\n        <p class=\"text-center mt-3 line-height-normal roboto-light\">\r\n          Pronto enviaremos un mail de verificacion a\r\n        </p>\r\n        <p class=\"text-center line-height-normal roboto-light\">\r\n          <strong>{{ user?.email }}</strong>\r\n        </p>\r\n      </mat-card-content>\r\n      <mat-card-actions class=\"mb-5\">\r\n        <div class=\"col-12 set-pointer\">\r\n          <div class=\"alinear-centro mt-4\">\r\n            <button (click)=\"onSendEmail()\" class=\"btn btn-dark alinear-centro\">Reenviar verificacion</button>\r\n          </div>\r\n        </div>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <div class=\"text-center mt-5\">\r\n    <div class=\"spinner-border\" role=\"status\">\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n    <h3 class=\"mt-3\">\r\n      <a [routerLink]=\"['/login']\">\r\n        Try to login again!\r\n      </a>\r\n    </h3>\r\n    <h3>\r\n      <a [routerLink]=\"['/register']\">\r\n        Try to sign up again!\r\n      </a>\r\n    </h3>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public user;\r\n\r\n  constructor(private authSvc: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    if(this.user && uid){\r\n      if (!userFirebase.emailVerified) {\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        if(this.user.empresa && uid){\r\n          this.router.navigate(['/home-empresa']);\r\n        } else if(!this.user.empresa && uid) {\r\n          this.router.navigate(['/home-egresado']);\r\n        }\r\n      }\r\n    }\r\n    /* this.authSvc.afAuth.user.subscribe((u) => {\r\n      if (u) {\r\n        this.authSvc.getUser(u.uid).subscribe((userSnapshot) => {\r\n          this.user = userSnapshot.payload.data();\r\n          console.log(userSnapshot.payload.exists);\r\n\r\n          if(this.user.empresa){\r\n            this.router.navigate(['/home-empresa']);\r\n          } else {\r\n            this.router.navigate(['/home-egresado']);\r\n          }\r\n\r\n        });\r\n      } else {\r\n        console.log('Nadie inicio sesion');\r\n      }\r\n    }); */\r\n  }\r\n\r\n  goToLogin(){\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<!-- Vista para pantallas pequeñas para abajo -->\r\n<div class=\"d-md-none\">\r\n  <div class=\"container-fluid\">\r\n    <div id=\"navbar\" class=\"row fondo-blanco\">\r\n      <div class=\"col-12 mt-4 text-center\">\r\n        <img src=\"../../assets/images/titulo.png\" routerLink=\"/\" alt=\"Fondo\" class=\"pointer\">\r\n      </div>\r\n      <div class=\"col-12 text-center\">\r\n        <a href=\"#\" class=\"palabras-navbar posicion-palabras-navbar col-12 \">About</a>\r\n        <a routerLink=\"/eleccion-register\" class=\"palabras-navbar posicion-palabras-navbar col-12\">Registrarse</a>\r\n      </div>\r\n    </div>\r\n    <div id=\"contenido\" class=\"row\">\r\n      <div class=\"col-12 pb-5 fondo-blanco p-0\">\r\n        <img src=\"../../assets/images/maletin_gorro.png\" alt=\"maletin_gorro\" class=\"img-fluid float-right\">\r\n      </div>\r\n      <div class=\"col-12 fondo-blanco\">\r\n        <div class=\"mb-4 pb-5 text-center\">\r\n          <button type=\"submit\" (click)=\"goToLogin()\" class=\"btn btn-dark\">Iniciar sesion</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 fondo-negro\">\r\n        <div class=\"text-center\">\r\n          <p class=\"palabra-principal margen-palabra-principal line-height-normal\">No pierdas el contacto</p>\r\n        </div>\r\n        <div class=\"mt-5 mb-4 pb-5 text-center\">\r\n          <p class=\"palabra-secundaria line-height-normal\">Con nuestra nueva red de Egresados, participá en proyectos y aparece en el radar de las mejores empresas del mercado</p>\r\n        </div>\r\n        <!-- <div class=\"mt-5 mb-5 pb-5 text-center\">\r\n          <button type=\"submit\" (click)=\"goToLogin()\" class=\"btn btn-dark\">Iniciar sesion</button>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Vista para pantallas medianas para arriba -->\r\n<div class=\"d-none d-md-block\">\r\n  <div class=\"container-fluid fondo\">\r\n    <div class=\"row fondo-blanco\">\r\n      <div class=\"offset-md-1 col-md-1 mt-4\">\r\n        <img src=\"../../assets/images/titulo.png\" routerLink=\"/\" alt=\"Fondo\" class=\"pointer -margen-left-15\">\r\n      </div>\r\n      <div class=\"offset-md-5 col-md-4 mt-4\">\r\n        <a href=\"#\" class=\"palabras-navbar posicion-palabras-navbar offset-md-3 col-md-3\">About</a>\r\n        <a routerLink=\"/eleccion-register\" class=\"palabras-navbar posicion-palabras-navbar offset-md-2 col-md-3\">Registrarse</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"text-center\">\r\n          <p class=\"palabra-principal margen-palabra-principal line-height-normal\">No pierdas<br>el contacto</p>\r\n        </div>\r\n        <div class=\"offset-md-2 mt-5 text-left\">\r\n          <p class=\"palabra-secundaria line-height-normal\">Con nuestra nueva red de Egresados, participá en proyectos y aparece en el radar de las mejores empresas del mercado</p>\r\n          <!-- <p class=\"palabra-secundaria\">Con nuestra nueva red de Egresados, participá en proyectos</p>\r\n          <p class=\"palabra-secundaria margen-palabra-secundaria\">y aparece en el radar de las mejores empresas del mercado</p> -->\r\n        </div>\r\n        <div class=\"mt-5 mb-5 pb-5 text-center\">\r\n          <button type=\"submit\" (click)=\"goToLogin()\" class=\"btn btn-dark palabra-boton\">Iniciar sesion</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" href=\"\\\">CincoPe</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <div class=\"mr-auto\"></div>\r\n    <ul class=\"navbar-nav\" *ngIf=\"user$ | async as user; else login\">\r\n      <li class=\"nav-item\">\r\n        <div *ngIf=\"loggedUser != ''\">\r\n          <ng-container *ngIf=\"loggedUser.empresa == true; then mostrarEmpresa; else mostrarUsuario\"></ng-container>\r\n          <ng-template #mostrarEmpresa>\r\n            <a class=\"nav-link\" routerLink=\"/perfil-empresa\"> {{loggedUser.empresaName}} </a>\r\n          </ng-template>\r\n          <ng-template #mostrarUsuario>\r\n            <a class=\"nav-link\" routerLink=\"/perfil\"> {{ loggedUser.firstName }} {{ loggedUser.lastName }} </a>\r\n          </ng-template>\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"user\">\r\n        <a href=\"\" class=\"nav-link\" (click)=\"onLogout()\">Log Out</a>\r\n      </li>\r\n    </ul>\r\n    <ng-template #login>\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/login\">Login</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/eleccion-register\">Sign Up</a>\r\n        </li>\r\n      </ul>\r\n    </ng-template>\r\n    <!-- <form class=\"form-inline my-2 my-lg-0\">\r\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n    </form> -->\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/auth/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss'],\r\n  providers: [AuthService]\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  public user$: Observable<any> = this.authSvc.afAuth.user;\r\n  public userData;\r\n  public loggedUser: any = '';\r\n\r\n  constructor(private authSvc: AuthService, private router: Router) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.userData = this.verificarSiAlguienInicio();\r\n  }\r\n\r\n  verificarSiAlguienInicio() {\r\n    try {\r\n      this.authSvc.afAuth.user.subscribe((u) => {\r\n        if (u) {\r\n\r\n          this.authSvc.getUser(u.uid).subscribe((userSnapshot) => {\r\n\r\n            this.loggedUser = userSnapshot.payload.data();\r\n            console.log(userSnapshot.payload.exists);\r\n            console.log(this.loggedUser.firstName + \" \" + this.loggedUser.lastName + \" inició sesion\");\r\n            console.log(this.loggedUser.empresa);\r\n          })\r\n          return u;\r\n        } else {\r\n          console.log(\"Nadie inicio sesion\");\r\n        }\r\n\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async onLogout() {\r\n    try {\r\n      await this.authSvc.logout();\r\n      this.router.navigate(['/login']);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Subject, combineLatest } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-searchbar',\r\n  templateUrl: './searchbar.component.html',\r\n  styleUrls: ['./searchbar.component.scss'],\r\n  providers: [AuthService]\r\n})\r\nexport class SearchbarComponent implements OnInit {\r\n\r\n  /* searchForm = new FormGroup({\r\n    searchFilter: new FormControl(''),\r\n  }); */\r\n\r\n\r\n  startAt = new Subject();\r\n  endAt = new Subject();\r\n  startObservable = this.startAt.asObservable();\r\n  endObservable = this.endAt.asObservable();\r\n  resultadosDeBusqueda;\r\n  valorDeEvent;\r\n  searchFilter: string = \"firstName\";\r\n\r\n\r\n  constructor(private authSvc: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getResults();\r\n  }\r\n\r\n  // Es para conseguir la informacion para el parametro de busqueda\r\n  getSearchData($event) {\r\n    this.valorDeEvent = $event.target.value;\r\n  }\r\n\r\n  onSearch() {\r\n    this.startAt.next(this.valorDeEvent);\r\n    this.endAt.next(this.valorDeEvent + \"\\uf8ff\");\r\n  }\r\n\r\n  // Llama al metodo que se encuentra en el service\r\n  makeQuery(start, end, filter) {\r\n    return this.authSvc.search(start, end, filter);\r\n  }\r\n\r\n  // Es para setear el filtro para la busqueda\r\n  setFilter(value){\r\n    this.searchFilter = value;\r\n  }\r\n\r\n  // Es para conseguir el filtro para la busqueda\r\n  /* getFilter() {\r\n    let { searchFilter } = this.searchForm.value;\r\n    return searchFilter;\r\n  } */\r\n\r\n  /*\r\n   * Se subscribe a un observable que va trayendo la informacion de la busqueda.\r\n   * Por razones de seguiridad y para evitar un consumo de la red, se desuscribe despues de 30 segundos\r\n   */\r\n  getResults() {\r\n    let subscription = combineLatest(this.startObservable, this.endObservable).subscribe((value) => {\r\n      this.makeQuery(value[0], value[1], this.searchFilter).subscribe((resultado) => {\r\n        this.resultadosDeBusqueda = resultado;\r\n        console.log(this.resultadosDeBusqueda);\r\n        setTimeout(() => {\r\n          subscription.unsubscribe\r\n          console.log(\"DESUSCRITO\");\r\n        }, 30000)\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"container mt-5\">\r\n  <div class=\"container justify-content-center\">\r\n    <div class=\"col-sm-auto col-md-10 offset-md-1 col-xl-8 offset-xl-2\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-text p-0 search-panel\">\r\n          <button type=\"button\" class=\"btn btn-dark dropdown-toggle\" data-toggle=\"dropdown\">\r\n            <span id=\"search_concept\">Filtrar por</span> <span class=\"caret\"></span>\r\n          </button>\r\n          <ul class=\"dropdown-menu\" role=\"menu\">\r\n            <li><a class=\"dropdown-item\" href=\"#categoria1\">Categoria 1</a></li>\r\n            <li><a class=\"dropdown-item\" href=\"#categoria2\">Categoria 2</a></li>\r\n            <li><a class=\"dropdown-item\" href=\"#categoria3\">Categoria 3</a></li>\r\n            <li><a class=\"dropdown-item\" href=\"#categoria4\">Categoria 4</a></li>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <li><a class=\"dropdown-item\" href=\"#all\">Cualquier cosa</a></li>\r\n          </ul>\r\n        </div>\r\n        <input type=\"hidden\" name=\"search_param\" value=\"all\" id=\"search_param\">\r\n        <input type=\"text\" class=\"form-control\" name=\"x\" placeholder=\"Busque un servicio...\">\r\n        <button class=\"btn btn-dark \"><span><svg class=\"bi bi-search\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\r\n              fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path fill-rule=\"evenodd\"\r\n                d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n              <path fill-rule=\"evenodd\"\r\n                d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n            </svg></span></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<!-- <div class=\"container mt-5\">\r\n  <div class=\"container justify-content-center\">\r\n    <div class=\"col-sm-auto col-md-10 offset-md-1 col-xl-8 offset-xl-2\">\r\n      <form  class=\"mb-3\">\r\n        [formGroup]=\"searchForm\" (ngSubmit)=\"onSearch()\"\r\n        <div class=\"form-row mb-2\">\r\n          <div class=\"form-group mb-2 col-md-3 p-0\">\r\n            <div class=\"btn p-0\">\r\n              <select id=\"exampleInputSearchFilter1\" class=\"form-control\" aria-describedby=\"searchHelp\"\r\n                formControlName=\"searchFilter\">\r\n                <option>firstName</option>\r\n                <option>nickName</option>\r\n                <option>city</option>\r\n                <option selected=\"selected\">serviceDescription</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-8 p-0\">\r\n            <input type=\"text\" class=\"form-control\" id=\"exampleInputSearch1\" formControlName=\"search\" placeholder=\"Busque lo que necesite\"/>\r\n          </div>\r\n          <div class=\"col-md-1 p-0\">\r\n            <button type=\"submit\" class=\"btn btn-dark\"><span><svg class=\"bi bi-search\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\r\n                  fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\"\r\n                    d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n                  <path fill-rule=\"evenodd\"\r\n                    d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n                </svg></span></button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div>\r\n        Mostrar Datos de la busqueda\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"container mt-5\">\r\n  <div class=\"container justify-content-center\">\r\n    <div class=\"col-sm-auto col-md-10 offset-md-1 col-xl-8 offset-xl-2\">\r\n      <!-- <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearch()\" class=\"mb-3\"> -->\r\n      <form (ngSubmit)=\"onSearch()\" class=\"mb-3\">\r\n        <div class=\"form-row mb-2 justify-content-center\">\r\n          <div class=\"form-group mb-2 col-xs-6 p-0\">\r\n            <div class=\"btn p-0\">\r\n              <!-- <select id=\"exampleInputSearchFilter2\" class=\"form-control\" aria-describedby=\"searchHelp\"\r\n                formControlName=\"searchFilter\" #prueba (change)=\"setFilter(prueba.value)\"> -->\r\n              <select id=\"exampleInputSearchFilter2\" class=\"form-control\" aria-describedby=\"searchHelp\" #prueba\r\n                (change)=\"setFilter(prueba.value)\">\r\n                <option selected=\"selected\" [value]=\"'firstName'\">Nombre</option>\r\n                <option [value]=\"'empresaName'\">Empresa</option>\r\n                <option [value]=\"'lastName'\">Apellido</option>\r\n                <option [value]=\"'CUIT'\">CUIT</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-8 p-0\">\r\n            <input type=\"text\" class=\"form-control\" id=\"exampleInputSearch1\" (change)=\"getSearchData($event)\"\r\n              autocomplete=\"off\" placeholder=\"Busque lo que necesite\" />\r\n          </div>\r\n          <div class=\"col-sm-1 p-0 d-none d-sm-block\">\r\n            <button type=\"submit\" class=\"btn btn-dark\"><span><svg class=\"bi bi-search\" width=\"1em\" height=\"1em\"\r\n                  viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\"\r\n                    d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n                  <path fill-rule=\"evenodd\"\r\n                    d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n                </svg></span></button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div>\r\n        <ng-container\r\n          *ngIf=\"searchFilter == 'CUIT' || searchFilter == 'empresaName'; then mostrarResultadosEmpresa ; else mostrarResultadosEgresado \">\r\n        </ng-container>\r\n        <ng-template #mostrarResultadosEmpresa>\r\n          <ul *ngFor=\"let resultado of resultadosDeBusqueda\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\" [routerLink]=\"['/perfil-de-servicio-empresa', resultado.uid]\">\r\n                <li>{{resultado.empresaName}}</li>\r\n                <li>{{resultado.email}}</li>\r\n                <li>{{resultado.CUIT}}</li>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n        </ng-template>\r\n        <ng-template #mostrarResultadosEgresado>\r\n          <ul *ngFor=\"let resultado of resultadosDeBusqueda\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\" [routerLink]=\"['/perfil-de-servicio-egresado', resultado.uid]\">\r\n                <li>{{resultado.firstName}} {{resultado.lastName}}</li>\r\n                <li>{{resultado.email}}</li>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<mat-toolbar>\r\n  <div class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6\">\r\n    <div class=\"float-left\">\r\n      <img src=\"../../assets/images/logo-mini.png\" class=\"img-fluid\">\r\n    </div>\r\n    <div class=\"float-right\">\r\n      <mat-icon svgIcon=\"logout\" routerLink=\"/login\" (click)=\"onLogout()\" class=\"img-fluid mr-4 set-pointer\"></mat-icon>\r\n      <ng-container *ngIf=\"esEmpresa; then linkAEmpresa ; else linkAEgresado\"></ng-container>\r\n      <ng-template #linkAEmpresa>\r\n        <mat-icon svgIcon=\"home\" routerLink=\"/home-empresa\" class=\"img-fluid mr-4 set-pointer\"></mat-icon>\r\n        <mat-icon svgIcon=\"user\" routerLink=\"/perfil-empresa\" class=\"img-fluid set-pointer\"></mat-icon>\r\n      </ng-template>\r\n      <ng-template #linkAEgresado>\r\n        <mat-icon svgIcon=\"home\" routerLink=\"/home-egresado\" class=\"img-fluid mr-4 set-pointer\"></mat-icon>\r\n        <mat-icon svgIcon=\"user\" routerLink=\"/perfil\" class=\"img-fluid set-pointer\"></mat-icon>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  public user$: Observable<any> = this.authSvc.afAuth.user;\r\n  public userData;\r\n  public loggedUser: any = '';\r\n  public esEmpresa: boolean = null\r\n\r\n  ngOnInit(): void {\r\n    this.loggedUser = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    console.log(this.loggedUser.empresa);\r\n    if (this.loggedUser.empresa && uid) {\r\n      this.esEmpresa = true;\r\n    } else if (!this.loggedUser.empresa && uid) {\r\n      this.esEmpresa = false;\r\n    }\r\n    /* this.userData = this.verificarSiAlguienInicio(); */\r\n  }\r\n\r\n  constructor(\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer,\r\n    private authSvc: AuthService, private router: Router\r\n  ) {\r\n    this.matIconRegistry.addSvgIcon(\r\n      `home`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\"../../../assets/images/home.svg\")\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `user`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\"../../../assets/images/user.svg\")\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `logout`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\"../../../assets/images/logout.svg\")\r\n    );\r\n  }\r\n\r\n  verificarSiAlguienInicio() {\r\n    this.loggedUser = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    console.log(this.loggedUser.empresa);\r\n    if(this.loggedUser && uid){\r\n      if (this.loggedUser.empresa && uid) {\r\n        this.esEmpresa = true;\r\n      } else if (!this.loggedUser.empresa && uid) {\r\n        this.esEmpresa = false;\r\n      }\r\n    }\r\n    /* try {\r\n      this.authSvc.afAuth.user.subscribe((u) => {\r\n        if (u) {\r\n\r\n          this.authSvc.getUser(u.uid).subscribe((userSnapshot) => {\r\n\r\n            this.loggedUser = userSnapshot.payload.data();\r\n            console.log(userSnapshot.payload.exists);\r\n            if(this.loggedUser.empresa){\r\n              this.esEmpresa = true;\r\n            } else {\r\n              this.esEmpresa = false;\r\n            }\r\n          })\r\n          return u;\r\n        } else {\r\n          console.log(\"Nadie inicio sesion\");\r\n        }\r\n\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    } */\r\n  }\r\n\r\n  async onLogout() {\r\n    try {\r\n      await this.authSvc.logout();\r\n      this.router.navigate(['/login']);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyB7qv8Xf5ZbfZSqJ6yvkoSUZjJEa51nyvY\",\r\n  authDomain: \"red-egresados-online.firebaseapp.com\",\r\n  databaseURL: \"https://red-egresados-online.firebaseio.com\",\r\n  projectId: \"red-egresados-online\",\r\n  storageBucket: \"red-egresados-online.appspot.com\",\r\n  messagingSenderId: \"886046332432\",\r\n  appId: \"1:886046332432:web:7d931a7ffd26c29ba81c95\",\r\n  measurementId: \"G-KF7NXTSYPF\"\r\n  },\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}