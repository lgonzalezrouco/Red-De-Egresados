{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///config.ts","webpack:///src/app/admin/agregar-admin/agregar-admin.component.html","webpack:///src/app/admin/agregar-admin/agregar-admin.component.ts","webpack:///src/app/admin/agregar-titulo/agregar-titulo.component.html","webpack:///src/app/admin/agregar-titulo/agregar-titulo.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/egresado/egresado-register/egresado-register.component.html","webpack:///src/app/auth/egresado/egresado-register/egresado-register.component.ts","webpack:///src/app/auth/eleccion-register/eleccion-register.component.ts","webpack:///src/app/auth/eleccion-register/eleccion-register.component.html","webpack:///src/app/auth/empresa/empresa-register/empresa-register.component.html","webpack:///src/app/auth/empresa/empresa-register/empresa-register.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/home/home-egresado/home-egresado.component.html","webpack:///src/app/home/home-egresado/home-egresado.component.ts","webpack:///src/app/home/home-empresa/home-empresa.component.html","webpack:///src/app/home/home-empresa/home-empresa.component.ts","webpack:///src/app/home/landing-page/landing-page.component.ts","webpack:///src/app/home/landing-page/landing-page.component.html","webpack:///src/app/perfil/egresado/agregar-experiencias/agregar-experiencias.component.html","webpack:///src/app/perfil/egresado/agregar-experiencias/agregar-experiencias.component.ts","webpack:///src/app/perfil/egresado/email-contact/email-contact.component.html","webpack:///src/app/perfil/egresado/email-contact/email-contact.component.ts","webpack:///src/app/perfil/egresado/perfil-egresado/perfil-egresado.component.html","webpack:///src/app/perfil/egresado/perfil-egresado/perfil-egresado.component.ts","webpack:///src/app/perfil/egresado/perfil-servicio-egresado/perfil-servicio-egresado.component.html","webpack:///src/app/perfil/egresado/perfil-servicio-egresado/perfil-servicio-egresado.component.ts","webpack:///src/app/perfil/egresado/redes-form/redes-form.component.html","webpack:///src/app/perfil/egresado/redes-form/redes-form.component.ts","webpack:///src/app/perfil/empresa/perfil-empresa/perfil-empresa.component.html","webpack:///src/app/perfil/empresa/perfil-empresa/perfil-empresa.component.ts","webpack:///src/app/perfil/empresa/perfil-servicio-empresa/perfil-servicio-empresa.component.ts","webpack:///src/app/perfil/empresa/perfil-servicio-empresa/perfil-servicio-empresa.component.html","webpack:///src/app/shared/security/forgot-password/forgot-password.component.html","webpack:///src/app/shared/security/forgot-password/forgot-password.component.ts","webpack:///src/app/shared/security/wait-verification/wait-verification.component.html","webpack:///src/app/shared/security/wait-verification/wait-verification.component.ts","webpack:///src/app/shared/services/apis.service.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/firestorage.service.ts","webpack:///src/app/shared/services/firestore.service.ts","webpack:///src/app/shared/services/misc.service.ts","webpack:///src/app/shared/toolbar/toolbar.component.html","webpack:///src/app/shared/toolbar/toolbar.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","keysForHostedRed","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","keysForLocalRed","serviceID","templateID","userID","AgregarAdminComponent","firestoreSvc","data","dialogRef","loginForm","email","required","pattern","emailPattern","get","value","agregarAdmin","close","console","log","message","selector","templateUrl","styleUrls","AgregarTituloComponent","http","tituloForm","DNI","nombre","minLength","apellido","yearDeEgreso","nroDeAlumno","idPattern","DNIPattern","nombrePattern","apellidoPattern","egresoPattern","nroDeAlumnoPattern","yearsDeEgreso","agregarTitulo","mensaje","DashboardComponent","miscSvc","dialog","displayedColumns","editar","titulosASubir","user","JSON","parse","localStorage","getItem","getAdmin","admin","getTitulos","titulos","dataSource","checkIfUserIsLogged","hayUnUsuario","notAllowed","paginator","sort","event","filterValue","target","filter","trim","toLowerCase","firstPage","csv","fileReaded","files","reader","FileReader","readAsText","onload","result","toString","allTextLines","split","headers","containsNumber","i","length","match","object","push","forEach","titulo","uploadTitulos","respuesta","mensajeDeCargaABD","idParaEditar","undefined","editarTitulo","eliminarTitulo","indice","splice","open","afterClosed","subscribe","abrirFormularioDeTitulo","applyFilter","convertFile","subirArchivo","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","AppModule","provide","useValue","initializeApp","firebaseConfig","enablePersistence","declarations","providers","bootstrap","EgresadoRegisterComponent","authSvc","router","today","Date","todayYear","getFullYear","todayMonth","getMonth","todayDay","getDate","maxDate","hide","firstFormGroup","firstName","cellphone","lastName","birthday","gender","firstNamePattern","lastNamePattern","birthdayPattern","genderPattern","cellphonePattern","secondFormGroup","password","orientacion","profesion","maxLength","tituloEgreso","passwordPattern","orientacionPattern","profesionPattern","tituloEgresoPattern","registerForm","years","profesions","errorMessage","patchValue","createUser","existeElEgresado","userSnapshot","egresado","payload","existeEgresado","exists","DNIEnFirestore","register","updateUserData","navigate","error","afAuth","currentUser","updateProfile","displayName","onRegister","EleccionRegisterComponent","goToEgresadoRegister","goToEmpresaRegister","EmpresaRegisterComponent","registerEmpresaForm","empresaName","CUIT","empresaNamePattern","cuitPattern","registerEmpresa","LoginComponent","login","emailVerified","onLogin","HomeEgresadoComponent","startAt","endAt","startObservable","asObservable","endObservable","resultadosDeBusqueda","firstNameFormGroup","optionsFormGroup","minAge","maxAge","userFirebase","uid","getResultsWithFirstName","$event","valorDeEvent","next","start","end","searchwithFirstName","subscription","makeQueryWithFirstName","resultado","setTimeout","unsubscribe","searchWithOption","makeQueryWithOptions","fecha","timeStamp","res","fechaDeNacimiento","edad","HomeEmpresaComponent","timestamp","seconds","LandingPageComponent","goToLogin","AgregarExperienciasComponent","relacionDeCapacitacion","relacionDeCapacitacionPattern","capacitacion","yearDeInicio","yearDeFinal","areaRelacionada","lugarDeCapacitacion","capacitacionPattern","yearDeInicioPattern","yearDeFinalPattern","areaRelacionadaPattern","lugarDeCapacitacionPattern","capacitacionForm","backgroundColorEgresado","backgroundColorEmpresa","srcImgEgresado","srcImgEmpresa","yearsInicio","yearsFinal","setCapacitacionesDeUser","onAddCapacitation","setFirstFormGroupEgresado","setFirstFormGroupEmpresa","EmailContactComponent","nombreAContactar","name","emailAContactar","preventDefault","sendForm","text","sendEmail","PerfilEgresadoComponent","apiSvc","firestorageSvc","editarForm","photoURL","githubForm","githubUsername","mostrar","mostrarEdicionCapacitaciones","mostrarEdicionRedes","nombreArchivo","mensajeArchivo","datosFormulario","FormData","porcentaje","finalizado","capacitaciones","getSocialOfLoggedUser","social","getCapacitaciones","getGithubUser","githubUser","getGithubRepos","githubRepos","slice","userAux","type","append","updateUserWithPhoto","updateUserWithoutPhoto","URLPublica","editUser","archivo","referencia","referenciaCloudStorage","tarea","tareaCloudStorage","percentageChanges","Math","round","getDownloadURL","URL","capacitacionesLength","deleteCapacitacion","editarCapacitaciones","red","editarRedes","url","repos_url","toPromise","abrirFormularioDeBehance","abrirFormularioDeFacebook","abrirFormularioDeInstagram","abrirFormularioDeFlickr","abrirFormularioDeGithub","PerfilServicioEgresadoComponent","route","uidDelUsuarioLogeado","paramMap","params","getUser","usuarioIngresado","getUserSocial","nombreDelUsuario","RedesFormComponent","redesForm","username","usernamePattern","agregarGithub","onAddUsername","PerfilEmpresaComponent","editEmpresa","PerfilServicioEmpresaComponent","empresaIngresada","ForgotPasswordComponent","passwordForm","resetPassword","window","alert","onReset","WaitVerificationComponent","user$","sendVerificationEmail","ApisService","angularFirestore","checkGithubUser","collection","doc","set","saveUserSocial","mensajeDeError","providedIn","AuthService","signInWithEmailAndPassword","setItem","stringify","saveUser","values","createUserWithEmailAndPassword","setUserDataLogUp","setEmpresaDataLogUp","sendPasswordResetEmail","sendEmailVerification","signOut","removeItem","FirestorageService","angularFirestorage","datos","upload","ref","FirestoreService","userRef","capacitacionesRef","socialRef","userData","empresa","capacitacionData","socialData","merge","verificada","empresaData","parseInt","minAgeDate","maxAgeDate","where","valueChanges","limit","orderBy","arregloCapacitaciones","capacitacionesExistentes","update","titulosRef","tituloData","query","documentos","startApellido","startAfter","DNIString","campo","admins","docs","createId","adminRef","adminData","MiscService","snapshotChanges","dataUser","dataAdmin","getUserFirebase","getUserAndUID","tipoDeUsuario","ToolbarComponent","matIconRegistry","domSanitizer","loggedUser","esEmpresa","addSvgIcon","bypassSecurityTrustResourceUrl","logout","onLogout","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export const keys = {\r\n  keysForHostedRed: {\r\n    apiKey: 'AIzaSyB7qv8Xf5ZbfZSqJ6yvkoSUZjJEa51nyvY',\r\n    authDomain: 'red-egresados-online.firebaseapp.com',\r\n    databaseURL: 'https://red-egresados-online.firebaseio.com',\r\n    projectId: 'red-egresados-online',\r\n    storageBucket: 'red-egresados-online.appspot.com',\r\n    messagingSenderId: '886046332432',\r\n    appId: '1:886046332432:web:7d931a7ffd26c29ba81c95',\r\n    measurementId: 'G-KF7NXTSYPF',\r\n  },\r\n  keysForLocalRed: {\r\n    apiKey: 'AIzaSyBCJdErLttb6rqGgxYUCuM78MhozVLX8U0',\r\n    authDomain: 'red-de-egresados.firebaseapp.com',\r\n    databaseURL: 'https://red-de-egresados.firebaseio.com',\r\n    projectId: 'red-de-egresados',\r\n    storageBucket: 'red-de-egresados.appspot.com',\r\n    messagingSenderId: '721095525508',\r\n    appId: '1:721095525508:web:a6972b3a6c4a4daa5f6ed1',\r\n    measurementId: 'G-VFQB7BY87G',\r\n  },\r\n  serviceID: 'service_Red_De_Egresados',\r\n  templateID: 'template_u9u10q7',\r\n  userID: 'user_OFf0cr3nYd4ETarAexhwk',\r\n};\r\n","<div class=\"pb-4 pt-3 px-5\">\r\n  <h1 mat-dialog-title class=\"titulo text-center mt-3 pb-3\">Agregue un administrador</h1>\r\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"agregarAdmin()\" class=\"mt-5 mb-3\">\r\n    <div class=\"row\">\r\n        <mat-form-field class=\"full-width-height\">\r\n          <mat-label>email</mat-label>\r\n          <input matInput type=\"email\" formControlName=\"email\">\r\n          <mat-error *ngIf=\"emailPattern.invalid && !emailPattern.touched\">\r\n            Por favor, ingrese un email válido.\r\n          </mat-error>\r\n          <mat-error *ngIf=\"emailPattern.touched\" >\r\n            El email es <strong>requerido</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n    </div>\r\n    <mat-card-actions class=\"mb-5\">\r\n      <div class=\"row\">\r\n        <div class=\"alinear-centro mt-4 text-center center\">\r\n          <button type=\"submit\" class=\"text-center center\">Agregar</button>\r\n        </div>\r\n      </div>\r\n    </mat-card-actions>\r\n  </form>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\nimport { AgregarTituloComponent } from '../agregar-titulo/agregar-titulo.component';\r\n\r\n@Component({\r\n  selector: 'app-agregar-admin',\r\n  templateUrl: './agregar-admin.component.html',\r\n  styleUrls: ['./agregar-admin.component.scss'],\r\n})\r\nexport class AgregarAdminComponent implements OnInit {\r\n  loginForm = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\r\n    ])\r\n  });\r\n\r\n  emailPattern = this.loginForm.get('email');\r\n\r\n  constructor(\r\n    private firestoreSvc: FirestoreService,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<AgregarTituloComponent>\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  async agregarAdmin() {\r\n    try {\r\n      const { email } = this.loginForm.value;\r\n      if (email == '') {\r\n        throw new Error('El email no fue completados');\r\n      }\r\n      await this.firestoreSvc.agregarAdmin(email);\r\n      this.dialogRef.close();\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n}\r\n","<div class=\"pb-4 pt-3 px-5\">\r\n  <h1 mat-dialog-title class=\"titulo text-center mt-3 pb-3\">Agregue un titulo</h1>\r\n  <form [formGroup]=\"tituloForm\" (ngSubmit)=\"agregarTitulo()\" class=\"mt-5 mb-3\">\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <mat-form-field class=\"full-width-height\">\r\n          <mat-label>ID</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"id\">\r\n          <mat-error *ngIf=\"idPattern.invalid && !idPattern.touched\">\r\n            Por favor, ingrese un ID válido.\r\n          </mat-error>\r\n          <mat-error *ngIf=\"idPattern.touched\" >\r\n            El ID es <strong>requerido</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <mat-form-field class=\"full-width-height\">\r\n          <mat-label>DNI</mat-label>\r\n          <input matInput type=\"number\" formControlName=\"DNI\">\r\n          <mat-error *ngIf=\"DNIPattern.invalid && !DNIPattern.touched\">\r\n            Por favor, ingrese un DNI válido.\r\n          </mat-error>\r\n          <mat-error *ngIf=\"DNIPattern.touched\" >\r\n            El DNI es <strong>requerido</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <mat-form-field class=\"full-width-height\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"nombre\">\r\n          <mat-error *ngIf=\"nombrePattern.invalid && !nombrePattern.touched\">\r\n            Por favor, ingrese un nombre válido.\r\n          </mat-error>\r\n          <mat-error *ngIf=\"nombrePattern.touched\" >\r\n            El nombre es <strong>requerido</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <mat-form-field class=\"full-width-height\">\r\n          <mat-label>Apellido</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"apellido\">\r\n          <mat-error *ngIf=\"apellidoPattern.invalid && !apellidoPattern.touched\">\r\n            Por favor, ingrese un apellido válido.\r\n          </mat-error>\r\n          <mat-error *ngIf=\"apellidoPattern.touched\" >\r\n            El apellido es <strong>requerido</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <mat-form-field class=\"full-width-height\">\r\n          <mat-label>Año de Egreso</mat-label>\r\n          <mat-select formControlName=\"yearDeEgreso\">\r\n            <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n            <mat-option *ngFor=\"let year of yearsDeEgreso | async\" [value]=\"year.value\">\r\n              {{ year.viewValue }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"egresoPattern.hasError('required')\">\r\n            El año de egreso es <strong>requerido</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <mat-form-field class=\"full-width-height\">\r\n          <mat-label>Número de Alumno</mat-label>\r\n          <input matInput type=\"number\" formControlName=\"nroDeAlumno\">\r\n          <mat-error *ngIf=\"nroDeAlumnoPattern.invalid && !nroDeAlumnoPattern.touched\">\r\n            Por favor, ingrese un número válido.\r\n          </mat-error>\r\n          <mat-error *ngIf=\"nroDeAlumnoPattern.touched\" >\r\n            El número de alumno es <strong>requerido</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <mat-card-actions class=\"mb-3\">\r\n      <div class=\"row\">\r\n        <div class=\"alinear-centro mt-4 center\">\r\n          <button type=\"submit\" class=\"center btn\">Agregar</button>\r\n        </div>\r\n      </div>\r\n    </mat-card-actions>\r\n  </form>\r\n  {{mensaje}}\r\n</div>\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\n\r\n@Component({\r\n  selector: 'app-agregar-titulo',\r\n  templateUrl: './agregar-titulo.component.html',\r\n  styleUrls: ['./agregar-titulo.component.scss'],\r\n})\r\nexport class AgregarTituloComponent implements OnInit {\r\n  tituloForm = new FormGroup({\r\n    id: new FormControl('', [Validators.required]),\r\n    DNI: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    nombre: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    apellido: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    yearDeEgreso: new FormControl('', [Validators.required]),\r\n    nroDeAlumno: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n  });\r\n\r\n  idPattern = this.tituloForm.get('id');\r\n  DNIPattern = this.tituloForm.get('DNI');\r\n  nombrePattern = this.tituloForm.get('nombre');\r\n  apellidoPattern = this.tituloForm.get('apellido');\r\n  egresoPattern = this.tituloForm.get('yearDeEgreso');\r\n  nroDeAlumnoPattern = this.tituloForm.get('nroDeAlumno');\r\n\r\n  yearsDeEgreso;\r\n\r\n  mensaje: string;\r\n\r\n  constructor(\r\n    private firestoreSvc: FirestoreService,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<AgregarTituloComponent>,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.yearsDeEgreso = this.http.get('../../../assets/JSON/egresoYear.json');\r\n  }\r\n\r\n  async agregarTitulo() {\r\n    try {\r\n      const {\r\n        id,\r\n        DNI,\r\n        nombre,\r\n        apellido,\r\n        nroDeAlumno,\r\n        yearDeEgreso,\r\n      } = this.tituloForm.value;\r\n      if (\r\n        id == '' ||\r\n        DNI == '' ||\r\n        nombre == '' ||\r\n        apellido == '' ||\r\n        nroDeAlumno == '' ||\r\n        yearDeEgreso == ''\r\n      ) {\r\n        throw new Error('Algunos de los campos no fueron completados');\r\n      }\r\n      this.mensaje = await this.firestoreSvc.agregarTitulo(\r\n        id,\r\n        DNI,\r\n        nombre,\r\n        apellido,\r\n        nroDeAlumno,\r\n        yearDeEgreso\r\n      );\r\n      if(this.mensaje = \"OK\") {\r\n        this.dialogRef.close();\r\n      }\r\n    } catch (error) {\r\n      this.mensaje = error.message;\r\n    }\r\n  }\r\n}\r\n","<!-- <app-toolbar></app-toolbar>\r\n<div class=\"margen container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 offset-md-2 col-md-8 mb-4 mt-3\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 col-md-6 sm-text-center\">\r\n          <h1 class=\"ml-4 titulo vertical-align\">Administrar Títulos</h1>\r\n        </div>\r\n        <div class=\"col-6 offset-md-4 col-md-auto sm-text-center vertical-align float-right\">\r\n          <span (click)=\"abrirFormularioDeTitulo()\" class=\"agregar-datos set-pointer float-right\">+ Agregar\r\n            Título</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <mat-card class=\"col-12 mt-4 pb-2\">\r\n          <form [formGroup]=\"searchFormGroup\" (ngSubmit)=\"search()\" class=\"\">\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-1 col-2\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Campo</mat-label>\r\n                  <mat-select formControlName=\"campo\">\r\n                    <mat-option selected=\"selected\" value=\"nombre\">Nombre</mat-option>\r\n                    <mat-option value=\"apellido\">Apellido</mat-option>\r\n                    <mat-option value=\"yearDeEgreso\">Año de Egreso</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-7\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Ingrese un valor con el que buscar</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon>search</mat-icon>&nbsp;\r\n                  </span>\r\n                  <input type=\"text\" matInput formControlName=\"value\" (change)=\"getSearchData($event)\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"sm-text-center col-2\">\r\n                <button type=\"submit\" mat-raised-button class=\"btn\">\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n    <mat-card class=\"col-12 offset-md-2 col-md-8 mb-4\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-12 my-3\">\r\n          <div class=\"row\">\r\n            <div class=\"col-2 text-center nombres-titulo\">Título</div>\r\n            <div class=\"col-1 text-center nombres-titulo\">DNI</div>\r\n            <div class=\"col-2 text-center nombres-titulo\">Nombre</div>\r\n            <div class=\"col-1 text-center nombres-titulo\">Apellido</div>\r\n            <div class=\"col-3 text-center nombres-titulo\">Año De Egreso</div>\r\n          </div>\r\n        </div>\r\n        <mat-divider class=\"divider mb-3\" [inset]=\"true\"></mat-divider>\r\n        <div class=\"col-12\">\r\n          <div class=\"row mb-3\" *ngFor=\"let titulo of titulos; index as i\">\r\n            <div class=\"col-2 text-center datos-titulo\">\r\n              {{ titulo.id }}\r\n            </div>\r\n            <div class=\"col-1 text-center\">\r\n              <ng-container *ngIf=\"\r\n                  editar == true && idParaEditar == titulo.id;\r\n                  then editarDNI;\r\n                  else mostrarDNI\r\n                \">\r\n              </ng-container>\r\n              <ng-template #editarDNI>\r\n                <input matInput type=\"number\" class=\"datos-titulo\" [(ngModel)]=\"titulo.DNI\" />\r\n              </ng-template>\r\n              <ng-template #mostrarDNI>\r\n                <span class=\"datos-titulo\">{{ titulo.DNI }}</span>\r\n              </ng-template>\r\n            </div>\r\n            <div class=\"col-2 text-center datos-titulo\">\r\n              {{ titulo.nombre }}\r\n            </div>\r\n            <div class=\"col-1 text-center datos-titulo\">\r\n              {{ titulo.apellido }}\r\n            </div>\r\n            <div class=\"col-3 text-center datos-titulo\">\r\n              {{ titulo.yearDeEgreso }}\r\n            </div>\r\n            <div class=\"col-3\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6 text-right\">\r\n                  <ng-container *ngIf=\"\r\n                      editar == true && idParaEditar == titulo.id;\r\n                      then botonGuardar;\r\n                      else botonEditar\r\n                    \">\r\n                  </ng-container>\r\n                  <ng-template #botonGuardar>\r\n                    <img src=\"../../../assets/images/editar.png\" alt=\"aceptar\"\r\n                      class=\"text-center img-fluid set-pointer mr-2\"\r\n                      (click)=\"editarTitulo(titulo.id, titulo.DNI, titulo.nombre, titulo.apellido, titulo.nroDeAlumno, titulo.yearDeEgreso)\" />\r\n                    <img src=\"../../../assets/images/cruz.png\" alt=\"cancelar\"\r\n                      class=\"ml-2 text-center img-fluid set-pointer\" (click)=\"cancelarEdicion()\" />\r\n                  </ng-template>\r\n                  <ng-template #botonEditar>\r\n                    <img src=\"../../../assets/images/editar.png\" alt=\"editar\" class=\"text-center img-fluid set-pointer\"\r\n                      (click)=\"editarTitulo(titulo.id, titulo.DNI, titulo.nombre, titulo.apellido, titulo.nroDeAlumno, titulo.yearDeEgreso)\" />\r\n                  </ng-template>\r\n                </div>\r\n                <div class=\"col-6 text-left\">\r\n                  <img src=\"../../../assets/images/eliminar.png\" alt=\"eliminar\"\r\n                    class=\"ml-2 text-center img-fluid set-pointer\" (click)=\"eliminarTitulo(titulo.id, i)\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n    <div class=\"col-12 offset-md-2 col-md-8 mb-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <h1 class=\"line-height-normal titulo ml-4\">\r\n            Cargar a la Base de Datos\r\n          </h1>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <div class=\"row\">\r\n            <div class=\"col-auto ml-4\">\r\n              <input type=\"file\" class=\"form-control-file\" id=\"inputFile\" (change)=\"convertFile($event)\" />\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <button (click)=\"subirArchivo()\" class=\"\">Subir</button>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <a [href]=\"'../../../assets/titulos.csv'\">\r\n                Descargue una plantilla para los títulos\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n<app-toolbar></app-toolbar>\r\n<div class=\"margen container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 offset-md-2 col-md-8 mb-4 mt-3\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 col-md-6 sm-text-center\">\r\n          <h1 class=\"ml-4 titulo vertical-align\">Administrar Títulos</h1>\r\n        </div>\r\n        <div class=\"col-6 offset-md-4 col-md-auto sm-text-center vertical-align float-right\">\r\n          <span (click)=\"abrirFormularioDeTitulo()\" class=\"agregar-datos set-pointer float-right\">+ Agregar\r\n            Título</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <mat-card class=\"col-12 offset-md-2 col-md-8 mb-4\">\r\n      <div class=\"container\">\r\n        <mat-form-field>\r\n          <mat-label>Filtro</mat-label>\r\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"mat-elevation-z8\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"Apellido\" matSortDisableClear\r\n          matSortDirection=\"desc\">\r\n\r\n          <!-- ID Column -->\r\n          <ng-container matColumnDef=\"Título\">\r\n            <th mat-header-cell *matHeaderCellDef><span class=\"nombres-titulo\">Título</span></th>\r\n            <td mat-cell *matCellDef=\"let titulo\" class=\"datos-titulo\"> {{titulo.titulo}} </td>\r\n          </ng-container>\r\n\r\n          <!-- Progress Column -->\r\n          <ng-container matColumnDef=\"DNI\">\r\n            <th mat-header-cell *matHeaderCellDef><span class=\"nombres-titulo\">DNI</span></th>\r\n            <!-- <td mat-cell *matCellDef=\"let titulo\"> {{titulo.DNI}} </td> -->\r\n            <td mat-cell *matCellDef=\"let titulo\">\r\n              <ng-container *ngIf=\"\r\n                  editar == true && idParaEditar == titulo.titulo;\r\n                  then editarDNI;\r\n                  else mostrarDNI\r\n                \">\r\n              </ng-container>\r\n              <ng-template #editarDNI>\r\n                <input type=\"number\" class=\"datos-titulo\" [(ngModel)]=\"titulo.DNI\" />\r\n              </ng-template>\r\n              <ng-template #mostrarDNI>\r\n                <span class=\"datos-titulo\">{{ titulo.DNI }}</span>\r\n              </ng-template>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Name Column -->\r\n          <ng-container matColumnDef=\"Nombre\">\r\n            <th mat-header-cell *matHeaderCellDef><span class=\"nombres-titulo\">Nombre</span></th>\r\n            <td mat-cell *matCellDef=\"let titulo\" class=\"datos-titulo\"> {{titulo.nombre}} </td>\r\n          </ng-container>\r\n\r\n          <!-- Last Name Column -->\r\n          <ng-container matColumnDef=\"Apellido\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear><span\r\n                class=\"nombres-titulo\">Apellido</span></th>\r\n            <td mat-cell *matCellDef=\"let titulo\" class=\"datos-titulo\"> {{titulo.apellido}} </td>\r\n          </ng-container>\r\n\r\n          <!-- Año de Egreso Column -->\r\n          <ng-container matColumnDef=\"Año de Egreso\">\r\n            <th mat-header-cell *matHeaderCellDef><span class=\"nombres-titulo\">Año de Egreso</span></th>\r\n            <td mat-cell *matCellDef=\"let titulo\" class=\"datos-titulo\"> {{titulo.yearDeEgreso}} </td>\r\n          </ng-container>\r\n\r\n          <!-- Año de Egreso Column -->\r\n          <ng-container matColumnDef=\"editar\">\r\n            <th mat-header-cell *matHeaderCellDef></th>\r\n            <td mat-cell *matCellDef=\"let titulo\" class=\"datos-titulo\">\r\n              <ng-container *ngIf=\"\r\n                      editar == true && idParaEditar == titulo.titulo;\r\n                      then botonGuardar;\r\n                      else botonEditar\r\n                    \">\r\n              </ng-container>\r\n              <ng-template #botonGuardar>\r\n                <img src=\"../../../assets/images/editar.png\" alt=\"aceptar\"\r\n                  class=\"text-center img-fluid set-pointer mr-2\"\r\n                  (click)=\"editarTitulo(titulo.titulo, titulo.DNI, titulo.nombre, titulo.apellido, titulo.nroDeAlumno, titulo.yearDeEgreso)\" />\r\n                <img src=\"../../../assets/images/cruz.png\" alt=\"cancelar\" class=\"ml-2 text-center img-fluid set-pointer\"\r\n                  (click)=\"cancelarEdicion()\" />\r\n              </ng-template>\r\n              <ng-template #botonEditar>\r\n                <img src=\"../../../assets/images/editar.png\" alt=\"editar\" class=\"text-center img-fluid set-pointer\"\r\n                  (click)=\"editarTitulo(titulo.titulo, titulo.DNI, titulo.nombre, titulo.apellido, titulo.nroDeAlumno, titulo.yearDeEgreso)\" />\r\n              </ng-template>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Año de Egreso Column -->\r\n          <ng-container matColumnDef=\"eliminar\">\r\n            <th mat-header-cell *matHeaderCellDef></th>\r\n            <td mat-cell *matCellDef=\"let titulo\">\r\n              <img src=\"../../assets/images/eliminar.png\" alt=\"\" class=\"ml-2 text-center img-fluid set-pointer\"\r\n                (click)=\"eliminarTitulo(titulo.titulo)\">\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let titulo; columns: displayedColumns;\"></tr>\r\n\r\n          <!-- Row shown when there is no matching data. -->\r\n          <tr class=\"mat-row\" *matNoDataRow>\r\n            <td class=\"mat-cell\" colspan=\"4\">Nada coincide con \"{{input.value}}\"</td>\r\n          </tr>\r\n        </table>\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" [length]=\"titulos.length\"></mat-paginator>\r\n      </div>\r\n    </mat-card>\r\n    <div class=\"col-12 offset-md-2 col-md-8 mb-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <h1 class=\"line-height-normal titulo ml-4\">\r\n            Cargar a la Base de Datos\r\n          </h1>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <div class=\"row\">\r\n            <div class=\"col-auto ml-4\">\r\n              <input type=\"file\" class=\"form-control-file vertical-align\" id=\"inputFile\" (change)=\"convertFile($event)\" />\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <button (click)=\"subirArchivo()\" class=\"btn vertical-align\">Subir</button>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <a [href]=\"'../../../assets/titulos.csv'\" class=\"vertical-align\">\r\n                Descargue una plantilla para los títulos\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Subject, combineLatest } from 'rxjs';\r\nimport { Titulos } from 'src/app/shared/interfaces/titulos';\r\nimport { User } from 'src/app/shared/interfaces/user';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\nimport { AgregarAdminComponent } from '../agregar-admin/agregar-admin.component';\r\nimport { AgregarTituloComponent } from '../agregar-titulo/agregar-titulo.component';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class DashboardComponent implements OnInit, AfterViewInit {\r\n  displayedColumns: string[] = [\r\n    'Título',\r\n    'DNI',\r\n    'Nombre',\r\n    'Apellido',\r\n    'Año de Egreso',\r\n    'editar',\r\n    'eliminar',\r\n  ];\r\n  dataSource: MatTableDataSource<Titulos>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  fileReaded;\r\n  editar: boolean = false;\r\n  idParaEditar;\r\n  mensajeDeCargaABD: string;\r\n  titulosASubir = [];\r\n  titulos: Titulos[];\r\n\r\n  constructor(\r\n    private miscSvc: MiscService,\r\n    private firestoreSvc: FirestoreService,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    let admin: boolean = await this.miscSvc.getAdmin(user.email);\r\n    if (admin) {\r\n      this.titulos = await this.firestoreSvc.getTitulos();\r\n      this.dataSource = new MatTableDataSource(this.titulos);\r\n    } else {\r\n      let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n      await this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  convertFile(csv) {\r\n    this.fileReaded = csv.target.files[0];\r\n\r\n    let reader: FileReader = new FileReader();\r\n    reader.readAsText(this.fileReaded);\r\n\r\n    reader.onload = async (e) => {\r\n      let csv: string = reader.result.toString();\r\n      let allTextLines = csv.split(/\\r|\\n|\\r/);\r\n      let headers = allTextLines[0].split(';');\r\n      let titulos = [];\r\n      let containsNumber: boolean = false;\r\n      for (let i = 0; i < headers.length; i++) {\r\n        if (headers[i].match(/^[0-9]+$/)) {\r\n          containsNumber = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!containsNumber) {\r\n        for (let i = 1; i < allTextLines.length; i++) {\r\n          const object = allTextLines[i].split(';');\r\n          if (object.length === headers.length) {\r\n            titulos.push(object);\r\n          }\r\n        }\r\n\r\n        titulos.forEach((titulo) => {\r\n          this.titulosASubir.push({\r\n            id: titulo[0],\r\n            DNI: titulo[1],\r\n            nroDeAlumno: titulo[2],\r\n            apellido: titulo[3],\r\n            nombre: titulo[4],\r\n            yearDeEgreso: titulo[5],\r\n          });\r\n        });\r\n      } else {\r\n        for (let i = 0; i < allTextLines.length; i++) {\r\n          const object = allTextLines[i].split(';');\r\n          if (object.length === headers.length) {\r\n            titulos.push(object);\r\n          }\r\n        }\r\n\r\n        titulos.forEach((titulo) => {\r\n          this.titulosASubir.push({\r\n            id: titulo[0],\r\n            DNI: titulo[1],\r\n            nroDeAlumno: titulo[2],\r\n            apellido: titulo[3],\r\n            nombre: titulo[4],\r\n            yearDeEgreso: titulo[5],\r\n          });\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  async subirArchivo() {\r\n    try {\r\n      if (this.titulosASubir == []) {\r\n        throw new Error('No hay nada para subir');\r\n      } else {\r\n        let respuesta = await this.firestoreSvc.uploadTitulos(\r\n          this.titulosASubir\r\n        );\r\n        if (typeof respuesta !== 'string') {\r\n          this.mensajeDeCargaABD = 'Se cargaron los titulos correctamente';\r\n          this.titulos = await this.firestoreSvc.getTitulos();\r\n          this.dataSource = new MatTableDataSource(this.titulos);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.mensajeDeCargaABD = 'Hubo un problema al cargar los titulos';\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.mensajeDeCargaABD = error.message;\r\n    }\r\n  }\r\n\r\n  editarTitulo(id, DNI, nombre, apellido, nroDeAlumno, yearDeEgreso) {\r\n    if (!this.editar) {\r\n      this.editar = true;\r\n      this.idParaEditar = id;\r\n    } else {\r\n      this.editar = false;\r\n      this.idParaEditar = undefined;\r\n      this.firestoreSvc.editarTitulo(\r\n        id,\r\n        DNI,\r\n        nombre,\r\n        apellido,\r\n        nroDeAlumno,\r\n        yearDeEgreso\r\n      );\r\n    }\r\n  }\r\n\r\n  async cancelarEdicion() {\r\n    this.editar = false;\r\n    this.idParaEditar = undefined;\r\n    this.titulos = await this.firestoreSvc.getTitulos();\r\n    this.dataSource = new MatTableDataSource(this.titulos);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  async eliminarTitulo(titulo) {\r\n    await this.firestoreSvc.eliminarTitulo(titulo);\r\n    let indice: number;\r\n    for (let i = 0; i < this.titulos.length; i++) {\r\n      if (this.titulos[i].titulo == titulo) {\r\n        indice = i;\r\n        break;\r\n      }\r\n    }\r\n    console.log(titulo, indice);\r\n    if (indice > -1) {\r\n      this.titulos.splice(indice, 1);\r\n    }\r\n    this.dataSource = new MatTableDataSource(this.titulos);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  /* ordenarTitulos() {\r\n    for (let i = 0; i < this.titulos.length; i++) {\r\n      for (let j = 0; j < this.titulos.length - 1; j++) {\r\n        let tempDigitsI: string = this.titulos[j].id;\r\n        let digitsI: number;\r\n        tempDigitsI = tempDigitsI.slice(5);\r\n        digitsI = Number(tempDigitsI);\r\n\r\n        let tempDigitsJ: string = this.titulos[j + 1].id;\r\n        let digitsJ: number;\r\n        tempDigitsJ = tempDigitsJ.slice(5);\r\n        digitsJ = Number(tempDigitsJ);\r\n\r\n        if (digitsI > digitsJ) {\r\n          let tmp = this.titulos[j];\r\n          this.titulos[j] = this.titulos[j + 1];\r\n          this.titulos[j + 1] = tmp;\r\n        }\r\n      }\r\n    }\r\n  } */\r\n\r\n  abrirFormularioDeTitulo() {\r\n    let dialogRef = this.dialog.open(AgregarTituloComponent);\r\n    dialogRef.afterClosed().subscribe(async () => {\r\n      this.titulos = await this.firestoreSvc.getTitulos();\r\n      this.dataSource = new MatTableDataSource(this.titulos);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\r\nimport { EgresadoRegisterComponent } from './auth/egresado/egresado-register/egresado-register.component';\r\nimport { EleccionRegisterComponent } from './auth/eleccion-register/eleccion-register.component';\r\nimport { EmpresaRegisterComponent } from './auth/empresa/empresa-register/empresa-register.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { HomeEgresadoComponent } from './home/home-egresado/home-egresado.component';\r\nimport { HomeEmpresaComponent } from './home/home-empresa/home-empresa.component';\r\nimport { LandingPageComponent } from './home/landing-page/landing-page.component';\r\nimport { AgregarExperienciasComponent } from './perfil/egresado/agregar-experiencias/agregar-experiencias.component';\r\nimport { PerfilEgresadoComponent } from './perfil/egresado/perfil-egresado/perfil-egresado.component';\r\nimport { PerfilServicioEgresadoComponent } from './perfil/egresado/perfil-servicio-egresado/perfil-servicio-egresado.component';\r\nimport { PerfilEmpresaComponent } from './perfil/empresa/perfil-empresa/perfil-empresa.component';\r\nimport { PerfilServicioEmpresaComponent } from './perfil/empresa/perfil-servicio-empresa/perfil-servicio-empresa.component';\r\nimport { ForgotPasswordComponent } from './shared/security/forgot-password/forgot-password.component';\r\nimport { WaitVerificationComponent } from './shared/security/wait-verification/wait-verification.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  {\r\n    path: 'home',\r\n    component: LandingPageComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: EgresadoRegisterComponent,\r\n  },\r\n  {\r\n    path: 'register-empresa',\r\n    component: EmpresaRegisterComponent,\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: 'perfil',\r\n    component: PerfilEgresadoComponent,\r\n  },\r\n  {\r\n    path: 'perfil-empresa',\r\n    component: PerfilEmpresaComponent,\r\n  },\r\n  {\r\n    path: 'eleccion-register',\r\n    component: EleccionRegisterComponent,\r\n  },\r\n  {\r\n    path: 'wait-verification',\r\n    component: WaitVerificationComponent,\r\n  },\r\n  {\r\n    path: 'perfil-de-servicio-egresado/:uid',\r\n    component: PerfilServicioEgresadoComponent,\r\n  },\r\n  {\r\n    path: 'perfil-de-servicio-empresa/:uid',\r\n    component: PerfilServicioEmpresaComponent,\r\n  },\r\n  {\r\n    path: 'home-egresado',\r\n    component: HomeEgresadoComponent,\r\n  },\r\n  {\r\n    path: 'home-empresa',\r\n    component: HomeEmpresaComponent,\r\n  },\r\n  {\r\n    path: 'agregar-experiencias',\r\n    component: AgregarExperienciasComponent,\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true})],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Red-De-Egresados-Online';\r\n}\r\n","<div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\n\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { EmpresaRegisterComponent } from './auth/empresa/empresa-register/empresa-register.component';\r\nimport { EgresadoRegisterComponent } from './auth/egresado/egresado-register/egresado-register.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { EleccionRegisterComponent } from './auth/eleccion-register/eleccion-register.component';\r\nimport { PerfilEmpresaComponent } from './perfil/empresa/perfil-empresa/perfil-empresa.component';\r\nimport { PerfilServicioEmpresaComponent } from './perfil/empresa/perfil-servicio-empresa/perfil-servicio-empresa.component';\r\nimport { PerfilEgresadoComponent } from './perfil/egresado/perfil-egresado/perfil-egresado.component';\r\nimport { PerfilServicioEgresadoComponent } from './perfil/egresado/perfil-servicio-egresado/perfil-servicio-egresado.component';\r\nimport { ForgotPasswordComponent } from './shared/security/forgot-password/forgot-password.component';\r\nimport { WaitVerificationComponent } from './shared/security/wait-verification/wait-verification.component';\r\nimport { HomeEgresadoComponent } from './home/home-egresado/home-egresado.component';\r\nimport { HomeEmpresaComponent } from './home/home-empresa/home-empresa.component';\r\nimport { LandingPageComponent } from './home/landing-page/landing-page.component';\r\nimport { AgregarExperienciasComponent } from './perfil/egresado/agregar-experiencias/agregar-experiencias.component';\r\nimport { EmailContactComponent } from './perfil/egresado/email-contact/email-contact.component';\r\nimport { RedesFormComponent } from './perfil/egresado/redes-form/redes-form.component';\r\nimport { ToolbarComponent } from './shared/toolbar/toolbar.component';\r\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\r\nimport { AgregarTituloComponent } from './admin/agregar-titulo/agregar-titulo.component';\r\nimport { AgregarAdminComponent } from './admin/agregar-admin/agregar-admin.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmpresaRegisterComponent,\r\n    EgresadoRegisterComponent,\r\n    LoginComponent,\r\n    EleccionRegisterComponent,\r\n    PerfilEmpresaComponent,\r\n    PerfilServicioEmpresaComponent,\r\n    PerfilEgresadoComponent,\r\n    PerfilServicioEgresadoComponent,\r\n    ForgotPasswordComponent,\r\n    WaitVerificationComponent,\r\n    HomeEgresadoComponent,\r\n    HomeEmpresaComponent,\r\n    LandingPageComponent,\r\n    AgregarExperienciasComponent,\r\n    EmailContactComponent,\r\n    RedesFormComponent,\r\n    ToolbarComponent,\r\n    DashboardComponent,\r\n    AgregarTituloComponent,\r\n    AgregarAdminComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAuthModule,\r\n    AngularFirestoreModule.enablePersistence(),\r\n    FormsModule,\r\n    AngularFireStorageModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatToolbarModule,\r\n    HttpClientModule,\r\n    MatDividerModule,\r\n    MatDialogModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n  ],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\" />\r\n  </div>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        Creá tu cuenta\r\n      </h1>\r\n    </mat-card-title>\r\n    <mat-card-subtitle class=\"subtitulo line-height-normal text-center mt-1\">\r\n      Inrgesá tus datos para crear tu perfil de egresado<br />y ser contratado\r\n      por las mejores empresas\r\n    </mat-card-subtitle>\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\" class=\"mt-1 mb-3\">\r\n      <mat-vertical-stepper [linear]=\"true\" #stepper>\r\n        <mat-step [stepControl]=\"firstFormGroup\">\r\n          <form [formGroup]=\"firstFormGroup\">\r\n            <ng-template matStepLabel>Por favor, ingrese sus datos </ng-template>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Nombre</mat-label>\r\n                  <input matInput formControlName=\"firstName\" type=\"text\" />\r\n                  <mat-error *ngIf=\"firstNamePattern.hasError('required')\">\r\n                    El nombre es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      firstNamePattern.hasError('pattern') ||\r\n                      firstNamePattern.hasError('minlength')\r\n                    \">\r\n                    El nombre solo esta compuesto por\r\n                    <strong>letras</strong> y debe tener mínimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Telefono</mat-label>\r\n                  <span matPrefix>+45 &nbsp;</span>\r\n                  <input matInput formControlName=\"cellphone\" type=\"number\" />\r\n                  <mat-error *ngIf=\"cellphonePattern.hasError('required')\">\r\n                    El teléfono es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"cellphonePattern.hasError('pattern')\">\r\n                    El teléfono solo esta compuesto por <strong>números</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Apellido</mat-label>\r\n                  <input matInput formControlName=\"lastName\" type=\"text\" />\r\n                  <mat-error *ngIf=\"lastNamePattern.hasError('required')\">\r\n                    El apellido es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      lastNamePattern.hasError('pattern') ||\r\n                      lastNamePattern.hasError('minlength')\r\n                    \">\r\n                    El apellido solo esta compuesto por\r\n                    <strong>números</strong> y debe tener mínimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Sexo</mat-label>\r\n                  <mat-select formControlName=\"gender\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option value=\"Masculino\">Masculino</mat-option>\r\n                    <mat-option value=\"Femenino\">Femenino</mat-option>\r\n                    <mat-option value=\"Prefiero no decirlo\">Prefiero no decirlo</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"genderPattern.hasError('required')\">\r\n                    El Sexo es <strong>requerido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Fecha de Nacimiento</mat-label>\r\n                  <input matInput formControlName=\"birthday\" [matDatepicker]=\"picker\" [max]=\"maxDate\" />\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker></mat-datepicker>\r\n                  <mat-error *ngIf=\"birthdayPattern.hasError('matDatepickerParse')\">\r\n                    La fecha de nacimiento no es <strong>válida</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      birthdayPattern.hasError('required') &&\r\n                      !birthdayPattern.hasError('matDatepickerParse')\r\n                    \">\r\n                    La fecha es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Fecha de Egreso</mat-label>\r\n                  <mat-select formControlName=\"yearDeEgreso\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option *ngFor=\"let year of years | async\" [value]=\"year.value\">\r\n                      {{ year.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"egresoPattern.hasError('required')\">\r\n                    El año de egreso es <strong>requerido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button class=\"btn text-center mt-3\" mat-button matStepperNext>\r\n                Siguiente\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"secondFormGroup\">\r\n          <form [formGroup]=\"secondFormGroup\">\r\n            <ng-template matStepLabel>Complete los datos restantes</ng-template>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>DNI</mat-label>\r\n                  <input matInput formControlName=\"DNI\" type=\"number\" />\r\n                  <mat-error *ngIf=\"DNIPattern.hasError('required')\">\r\n                    El DNI es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      DNIPattern.hasError('pattern') ||\r\n                      DNIPattern.hasError('minlength')\r\n                    \">\r\n                    El DNI solo esta compuesto por <strong>números</strong> y\r\n                    debe tener <strong>solo 8 dígitos</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Orientación</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"orientacionPattern.hasError('required')\">\r\n                    La orientación es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" type=\"email\" />\r\n                  <mat-error *ngIf=\"emailPattern.hasError('required')\">\r\n                    El email es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"emailPattern.hasError('pattern')\">\r\n                    El email no es <strong>válido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Profesión</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"profesionPattern.hasError('required')\">\r\n                    La profesión es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-3\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Contraseña</mat-label>\r\n                  <input matInput type=\"password\" formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" />\r\n                  <mat-icon class=\"material-icons\" matSuffix (click)=\"hide = !hide\">\r\n                    {{ hide ? \"visibility\" : \"visibility_off\" }}\r\n                  </mat-icon>\r\n                  <mat-error *ngIf=\"passwordPattern.hasError('required')\">\r\n                    La contraseña es <strong>requerida</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"passwordPattern.hasError('minlength')\">\r\n                    La contraseña no es <strong>válida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Código del Título de Egreso</mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"tituloEgreso\" />\r\n                  <mat-error *ngIf=\"tituloEgresoPattern.hasError('required')\">\r\n                    El código del título de egreso es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"tituloEgresoPattern.hasError('minlength')\">\r\n                    El código del título de egreso no es <strong>válido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n      </mat-vertical-stepper>\r\n      <div class=\"form-row\" *ngIf=\"errorMessage\">\r\n        <div class=\"offset-2 col-8\">\r\n          <small class=\"form-text alert-danger text-center mt-2 pt-1 pb-1\">\r\n            {{ errorMessage }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"text-center offset-md-7 col-md-5\">\r\n          <p class=\"container\">\r\n            ¿Ya tienes una cuenta?\r\n            <a [routerLink]=\"['/login']\">\r\n              Inicia Sesión\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"text-center offset-md-8 col-md-4\">\r\n          <button type=\"submit\" mat-raised-button class=\"btn\">\r\n            Registrarse\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-egresado-register',\r\n  templateUrl: './egresado-register.component.html',\r\n  styleUrls: ['./egresado-register.component.scss'],\r\n})\r\nexport class EgresadoRegisterComponent implements OnInit {\r\n  // Se usa para establecer la fecha maxima, el dia de hoy.\r\n  today = new Date();\r\n  todayYear: number = this.today.getFullYear();\r\n  todayMonth: number = this.today.getMonth();\r\n  todayDay: number = this.today.getDate();\r\n\r\n  maxDate = new Date(this.todayYear, this.todayMonth, this.todayDay);\r\n\r\n  // Se usa para saber si se tiene que mostrar la contraseña o no\r\n  hide = true;\r\n\r\n  // Es el formGroup de la primera parte del stepper\r\n  firstFormGroup = new FormGroup({\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    cellphone: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n      Validators.minLength(8),\r\n    ]),\r\n    lastName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    birthday: new FormControl('', [Validators.required]),\r\n    gender: new FormControl('', [Validators.required]),\r\n    yearDeEgreso: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public firstNamePattern = this.firstFormGroup.get('firstName');\r\n  public lastNamePattern = this.firstFormGroup.get('lastName');\r\n  public birthdayPattern = this.firstFormGroup.get('birthday');\r\n  public genderPattern = this.firstFormGroup.get('gender');\r\n  public cellphonePattern = this.firstFormGroup.get('cellphone');\r\n  public egresoPattern = this.firstFormGroup.get('yearDeEgreso');\r\n\r\n  // Es el formGroup de la segunda parte del stepper\r\n  secondFormGroup = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n    ]),\r\n    orientacion: new FormControl('', [Validators.required]),\r\n    profesion: new FormControl('', [Validators.required]),\r\n    DNI: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n      Validators.minLength(8),\r\n      Validators.maxLength(8),\r\n    ]),\r\n    tituloEgreso: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public emailPattern = this.secondFormGroup.get('email');\r\n  public passwordPattern = this.secondFormGroup.get('password');\r\n  public orientacionPattern = this.secondFormGroup.get('orientacion');\r\n  public profesionPattern = this.secondFormGroup.get('profesion');\r\n  public DNIPattern = this.secondFormGroup.get('DNI');\r\n  public tituloEgresoPattern = this.secondFormGroup.get('tituloEgreso');\r\n\r\n  // Es el formGroup que se pasa a la base de datos y ambos formGroup anteriores en uno solo\r\n  registerForm = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n    ]),\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    cellphone: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    lastName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    birthday: new FormControl('', [Validators.required]),\r\n    gender: new FormControl('', [Validators.required]),\r\n    yearDeEgreso: new FormControl('', [Validators.required]),\r\n    orientacion: new FormControl('', [Validators.required]),\r\n    profesion: new FormControl('', [Validators.required]),\r\n    DNI: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n      Validators.minLength(8),\r\n      Validators.maxLength(8),\r\n    ]),\r\n    tituloEgreso: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  public errorMessage: string;\r\n\r\n  // Se usa para almacenar la informacion del titulo del egresado\r\n  public egresado;\r\n\r\n  // Se usa para almacenar todos los años de egreso disponibles\r\n  public years;\r\n\r\n  // Se usa para almacenar todas las profesiones disponibles\r\n  public profesions;\r\n\r\n  constructor(\r\n    private authSvc: AuthService,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private miscSvc: MiscService\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario == 'nadie') {\r\n      // Almacena la informacion de los json en las variables\r\n      this.years = this.http.get('../../../../assets/JSON/egresoYear.json');\r\n      this.profesions = this.http.get('../../../../assets/JSON/profesion.json');\r\n    } else {\r\n      await this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  async onRegister() {\r\n    try {\r\n      // Se agarran los datos del primer formGroup\r\n      const {\r\n        firstName,\r\n        cellphone,\r\n        lastName,\r\n        gender,\r\n        yearDeEgreso,\r\n        birthday,\r\n      } = this.firstFormGroup.value;\r\n\r\n      // Se agarran los datos del segundo formGroup\r\n      const {\r\n        email,\r\n        password,\r\n        DNI,\r\n        tituloEgreso,\r\n        orientacion,\r\n        profesion,\r\n      } = this.secondFormGroup.value;\r\n\r\n      // Se verifica que todos los datos sean validos\r\n      if (\r\n        email == '' ||\r\n        password == '' ||\r\n        DNI == '' ||\r\n        tituloEgreso == '' ||\r\n        firstName == '' ||\r\n        cellphone == '' ||\r\n        lastName == '' ||\r\n        birthday == '' ||\r\n        gender == '' ||\r\n        yearDeEgreso == '' ||\r\n        orientacion == '' ||\r\n        profesion == ''\r\n      ) {\r\n        // Si no lo son tira un error\r\n        this.errorMessage = 'Algunos de los campos estan incompletos';\r\n        throw new Error(this.errorMessage);\r\n      }\r\n      // Si son validos, se unifican todos los datos en un solo formGroup\r\n      this.registerForm.patchValue({\r\n        email: email,\r\n        password: password,\r\n        firstName: firstName,\r\n        cellphone: cellphone,\r\n        lastName: lastName,\r\n        birthday: birthday,\r\n        gender: gender,\r\n        yearDeEgreso: yearDeEgreso,\r\n        orientacion: orientacion,\r\n        profesion: profesion,\r\n        DNI: DNI,\r\n        tituloEgreso: tituloEgreso,\r\n      });\r\n      this.createUser();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async createUser() {\r\n    // guarda los valores del email, password, photoURL, firstName y lastName\r\n    const { email, password, DNI, tituloEgreso } = this.registerForm.value;\r\n    // Guarda los datos del usuario registrado o un error\r\n    let user;\r\n    // Se usa para saber si existe el titulo del egresado\r\n    let existeEgresado: boolean;\r\n    // Se usa para verificar el DNI en la DB\r\n    let DNIEnFirestore: number;\r\n\r\n    try {\r\n      // Verifica si el titulo de Egreso que fue proveido existe\r\n      this.miscSvc\r\n        .existeElEgresado(tituloEgreso)\r\n        .subscribe(async (userSnapshot) => {\r\n          this.egresado = userSnapshot.payload.data();\r\n          existeEgresado = userSnapshot.payload.exists;\r\n          // Si el titulo existe...\r\n          if (existeEgresado) {\r\n            // Se guarda el DNI en una variable\r\n            DNIEnFirestore = this.egresado.DNI;\r\n          } else {\r\n            // Pero si no, tira un error\r\n            this.errorMessage = 'Ese titulo de egresado no existe';\r\n            throw new Error(this.errorMessage);\r\n          }\r\n\r\n          // Si el DNI y el titulo de Egreso coninciden...\r\n          if (DNIEnFirestore == DNI && existeEgresado) {\r\n            // Intenta hacer el register con los datos del formulario\r\n            user = await this.authSvc.register(\r\n              email,\r\n              password,\r\n              this.registerForm.value\r\n            );\r\n\r\n            // Si el resultado de la operacion no es un string o undefined (osea que no devolvio un error)...\r\n            console.log(user);\r\n            if (typeof user !== 'string' && user != undefined) {\r\n              //Se agarran los valores firstName y lastName del registerForm\r\n              const { firstName, lastName } = this.registerForm.value;\r\n\r\n              // Se actualiza los datos del usuario (estos son los propios de firebase)\r\n              this.updateUserData(firstName, lastName);\r\n              console.log(user);\r\n\r\n              // Redirigir a wait-verification\r\n              this.router.navigate(['/wait-verification']);\r\n            } else {\r\n              // Si user es un undefined, significa que hubo un error, por lo tanto se muestra\r\n              if (user == undefined) {\r\n                console.log('LLegue aca');\r\n                this.errorMessage =\r\n                  'El titulo de egreso o el DNI el incorrecto';\r\n              } else {\r\n                // Si user es un string, significa que hubo un error, por lo tanto se muestra\r\n                this.errorMessage = user;\r\n                console.log(user);\r\n              }\r\n            }\r\n          } else {\r\n            // Si no coinciden se muestra el mensaje en la pantalla.\r\n            this.errorMessage = 'El titulo de egreso o el DNI el incorrecto';\r\n            throw new Error(this.errorMessage);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // Se usa para actualizar los datos del usuario propios de firebase\r\n  async updateUserData(firstName, lastName) {\r\n    (await this.authSvc.afAuth.currentUser).updateProfile({\r\n      displayName: firstName + ' ' + lastName,\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-eleccion-register',\r\n  templateUrl: './eleccion-register.component.html',\r\n  styleUrls: ['./eleccion-register.component.scss'],\r\n})\r\nexport class EleccionRegisterComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private miscSvc: MiscService\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario != 'nadie') {\r\n      await this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  goToEgresadoRegister() {\r\n    this.router.navigate(['/register']);\r\n  }\r\n\r\n  goToEmpresaRegister() {\r\n    this.router.navigate(['/register-empresa']);\r\n  }\r\n}\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        ¿Cómo desea registrarse?\r\n      </h1>\r\n    </mat-card-title>\r\n    <mat-card-actions >\r\n      <div class=\"margen row\">\r\n        <div class=\"col-12 col-md-6 set-pointer\" (click)=\"goToEgresadoRegister()\">\r\n            <img mat-card-image src=\"../../../assets/images/eleccion_egresado.png\" alt=\"Eleccion egresado\"\r\n              class=\"img-fluid set-size-image mb-5\">\r\n            <div class=\"alinear-centro mt-5\">\r\n              <button type=\"submit\" (click)=\"goToEgresadoRegister()\" class=\"btn btn-dark alinear-centro\">Egresado</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"margen-pantalla-chica col-12 col-md-6 set-pointer\" (click)=\"goToEmpresaRegister()\">\r\n          <img mat-card-image src=\"../../../assets/images/eleccion_empresa.png\" alt=\"Eleccion empresa\"\r\n            class=\"img-fluid set-size-image mb-5\">\r\n          <div class=\"alinear-centro mt-5\">\r\n            <button type=\"submit\" (click)=\"goToEmpresaRegister()\" class=\"btn btn-dark\">Empresa</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        Creá tu cuenta\r\n      </h1>\r\n    </mat-card-title>\r\n    <mat-card-subtitle class=\"subtitulo line-height-normal text-center mt-5\">\r\n      Ingresá tus datos para crear tu perfil de empresa <br> y contratar a los mejores egresados\r\n    </mat-card-subtitle>\r\n    <form [formGroup]=\"registerEmpresaForm\" (ngSubmit)=\"onRegister()\" class=\"sm-margen mt-5 mb-3\">\r\n      <div class=\"form-row mb-2\">\r\n        <div class=\"offset-md-2 col-md-4 col-12\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input matInput formControlName=\"empresaName\" type=\"text\">\r\n            <mat-error *ngIf=\"empresaNamePattern.hasError('required')\">\r\n              El nombre de la empresa es <strong>requerido</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"empresaNamePattern.hasError('pattern') ||empresaNamePattern.hasError('minlength')\">\r\n              El nombre solo esta compuesto por\r\n              <strong>letras</strong> y debe tener mínimo 2\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-4 col-12\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>CUIT/CUIL</mat-label>\r\n            <input matInput formControlName=\"CUIT\" type=\"number\">\r\n            <mat-error *ngIf=\"cuitPattern.hasError('required')\">\r\n              El CUIT/CUIL es <strong>requerido</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"cuitPattern.hasError('pattern') || cuitPattern.hasError('minlength')\">\r\n              El CUIT/CUIL solo esta compuesto por <strong>números</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row mb-3\">\r\n        <div class=\"offset-md-2 col-md-4 col-12\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput type=\"email\" formControlName=\"email\">\r\n            <mat-error *ngIf=\"emailPattern.hasError('required')\">\r\n              El email es <strong>requerido</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"emailPattern.hasError('pattern')\">\r\n              El email no es <strong>válido</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-4 col-12\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Contraseña</mat-label>\r\n            <input matInput type=\"password\" formControlName=\"password\" [type]=\"hide ? 'password':'text' \">\r\n            <mat-icon class=\"material-icons\" matSuffix (click)=\"hide = !hide\">\r\n              {{ hide ? \"visibility\" : \"visibility_off\" }}\r\n            </mat-icon>\r\n            <mat-error *ngIf=\"passwordPattern.hasError('required')\">\r\n              La contraseña es <strong>requerida</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"passwordPattern.hasError('minlength')\">\r\n              La contraseña no es <strong>válida</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\" *ngIf=\"errorMessage\">\r\n        <div class=\"offset-2 col-8\">\r\n          <small class=\"form-text alert-danger text-center mt-2 pt-1 pb-1\"> {{ errorMessage }} </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"text-center offset-md-7 col-md-5\">\r\n          <p class=\"container\">\r\n            ¿Ya tienes una cuenta?\r\n            <a [routerLink]=\"['/login']\">\r\n              Inicia Sesión\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"text-center offset-md-8 col-md-4\">\r\n          <button type=\"submit\" mat-raised-button class=\"btn\">\r\n            Registrarse\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-empresa-register',\r\n  templateUrl: './empresa-register.component.html',\r\n  styleUrls: ['./empresa-register.component.scss'],\r\n})\r\nexport class EmpresaRegisterComponent implements OnInit {\r\n  registerEmpresaForm = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n    ]),\r\n    empresaName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z. ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    CUIT: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public emailPattern = this.registerEmpresaForm.get('email');\r\n  public passwordPattern = this.registerEmpresaForm.get('password');\r\n  public empresaNamePattern = this.registerEmpresaForm.get('empresaName');\r\n  public cuitPattern = this.registerEmpresaForm.get('CUIT');\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  public errorMessage: string;\r\n\r\n  // Variable para saber si la contraseña es visible o no\r\n  public hide = true;\r\n\r\n  constructor(\r\n    private authSvc: AuthService,\r\n    private router: Router,\r\n    private miscSvc: MiscService\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario != 'nadie') {\r\n      await this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  onRegister() {\r\n    try {\r\n      this.createUser();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async createUser() {\r\n    // guarda los valores del email, password\r\n    const { email, password } = this.registerEmpresaForm.value;\r\n    try {\r\n      console.log(this.registerEmpresaForm.value);\r\n      // Intenta hacer el register con los datos del formulario\r\n      const user = await this.authSvc.registerEmpresa(\r\n        email,\r\n        password,\r\n        this.registerEmpresaForm.value\r\n      );\r\n\r\n      // Si el resultado de la operacion no es un string (osea que no devolvio un error)\r\n      if (typeof user !== 'string') {\r\n        //Se agarran los valores firstName y lastName del registerForm\r\n        const { empresaName } = this.registerEmpresaForm.value;\r\n\r\n        // Se actualiza los datos del usuario (estos son los propios de firebase)\r\n        this.updateUserData(empresaName);\r\n        console.log(user);\r\n\r\n        // Redirigir a wait-verification\r\n        this.router.navigate(['/wait-verification']);\r\n      } else {\r\n        // Si user es un string, significa que hubo un error, por lo tanto se muestra\r\n        this.errorMessage = user;\r\n        console.log(user);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async updateUserData(empresaName) {\r\n    (await this.authSvc.afAuth.currentUser).updateProfile({\r\n      displayName: empresaName,\r\n    });\r\n  }\r\n}\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        Bienvenido de nuevo\r\n      </h1>\r\n    </mat-card-title>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\" class=\"mt-5 mb-3\">\r\n      <div class=\"form-row mb-2\">\r\n        <div class=\"offset-3 col-6\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput type=\"email\" formControlName=\"email\">\r\n            <mat-error *ngIf=\"emailPattern.invalid && !emailPattern.touched\">\r\n              Por favor, ingrese un email <strong>válido</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"emailPattern.touched\" >\r\n              El email es <strong>requerido</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row mb-1\">\r\n        <div class=\"offset-3 col-6\">\r\n\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Contraseña</mat-label>\r\n            <input matInput type=\"password\" formControlName=\"password\" [type]=\"hide ? 'password':'text' \">\r\n            <mat-icon class=\"material-icons\" matSuffix (click)=\"hide = !hide\">\r\n              {{hide ? 'visibility':'visibility_off'}}\r\n            </mat-icon>\r\n            <mat-error *ngIf=\"passwordPattern.hasError('minLength')\">\r\n              La contraseña debe contener mínimo 8 caracteres.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"passwordPattern.hasError('required')\">\r\n              La contraseña es <strong>requerida</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <p class=\"sm-text-center float-right margen2\">\r\n            <a [routerLink]=\"['/forgot-password']\">\r\n              ¿Olvidaste tu contraseña?\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"form-row mt-4 mb-4\" *ngIf=\"errorMessage\">\r\n        <div class=\"offset-2 col-8\">\r\n          <small class=\"form-text alert-danger text-center mt-2 pt-1 pb-1\"> {{ errorMessage }} </small>\r\n        </div>\r\n      </div> -->\r\n      <mat-card-actions class=\"mb-5\">\r\n        <div class=\"offset-3 col-6\">\r\n          <div class=\"alinear-centro mt-4\">\r\n            <button type=\"submit\" class=\"btn btn-dark btn-block alinear-centro\">Iniciar Sesión</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12 mt-4\">\r\n          <div class=\"alinear-centro mt-4\">\r\n            <p class=\"sm-text-center float-left mb-0\">\r\n              ¿No tienes una cuenta?\r\n              <a [routerLink]=\"['/eleccion-register']\">\r\n                Regístrate\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n    ]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  emailPattern = this.loginForm.get('email');\r\n  passwordPattern = this.loginForm.get('password');\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  errorMessage: string;\r\n\r\n  // Variable para saber si la contraseña es visible o no\r\n  public hide = true;\r\n\r\n  constructor(\r\n    private authSvc: AuthService,\r\n    private router: Router,\r\n    private miscSvc: MiscService\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    console.log(hayUnUsuario);\r\n    if (hayUnUsuario != 'nadie') {\r\n      await this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  async onLogin() {\r\n    const { email, password } = this.loginForm.value;\r\n    try {\r\n      const user = await this.authSvc.login(email, password);\r\n\r\n      if (typeof user !== 'string') {\r\n        if (user && user.user.emailVerified == true) {\r\n          console.log(user);\r\n          this.router.navigate(['/home']);\r\n        } else if (user && user.user.emailVerified == false) {\r\n          console.log(user);\r\n          this.router.navigate(['/wait-verification']);\r\n        } else {\r\n          this.router.navigate(['/register']);\r\n        }\r\n      } else {\r\n        this.errorMessage = user;\r\n        console.log(user);\r\n      }\r\n    } catch (error) {\r\n      this.errorMessage = error;\r\n    }\r\n  }\r\n}\r\n","<app-toolbar></app-toolbar>\r\n<div class=\"margen container-fluid\">\r\n  <!-- <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div> -->\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-3 \">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-3 alinear-centro sm-text-center\">\r\n        <img class=\"col-12 alinear-centro sm-text-center col-md-9 foto rounded-circle\" src=\"{{\r\n            user.photoURL ? user.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ user.firstName }}\" />\r\n      </div>\r\n      <div class=\"col-12 col-md-8 px-0 margin-top-content margin-bottom-content \">\r\n        <div class=\"row\">\r\n          <div class=\"col-10 col-md-11\">\r\n            <h1 class=\"line-height-normal sm-text-left bienvenido vertical-align\">\r\n              Bienvenido, {{ user.firstName }} {{user.lastName}}\r\n            </h1>\r\n          </div>\r\n          <div class=\"col-12 d-none d-sm-block\">\r\n            <p class=\"subtitulo-bienvenido line-height-normal mt-2 mb-3\">\r\n              <strong>En esta página podrás encontrar a tus ex egresados y a los demás egresados del Instituto\r\n                Politécnico Modelo</strong>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-3\">\r\n    <ng-container\r\n      *ngIf=\"resultadosDeBusqueda != null || resultadosDeBusqueda != undefined; then mostrarResultados; else barraDeBusqueda\">\r\n    </ng-container>\r\n    <ng-template #barraDeBusqueda>\r\n      <form [formGroup]=\"firstNameFormGroup\" (ngSubmit)=\"searchWithFirstName()\" class=\"mt-2 mb-3\">\r\n        <mat-card-header class=\"text-center alinear-centro\">\r\n          <mat-card-title class=\"text-center alinear-centro mt-2 mb-4\">\r\n            <h1 class=\"text-center alinear-centro line-height-normal titulo\">\r\n              Encuentra a los mejores egresados\r\n            </h1>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <div class=\"form-row margen-divider\">\r\n          <div class=\"offset-md-1 col-md-8\">\r\n            <mat-form-field class=\"full-width-height\">\r\n              <mat-label>Nombre de Egresado</mat-label>\r\n              <span matPrefix>\r\n                <mat-icon>search</mat-icon>&nbsp;\r\n              </span>\r\n              <input type=\"text\" matInput (change)=\"getSearchData($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"sm-text-center col-md-2\">\r\n            <button type=\"submit\" mat-raised-button class=\"btn\">\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form [formGroup]=\"optionsFormGroup\" (ngSubmit)=\"getResultsWithOptions()\" class=\"mt-2 mb-3\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <mat-card-title class=\"text-center alinear-centro mt-4 mb-1\">\r\n          <h1 class=\"text-center alinear-centro line-height-normal titulo-opciones\">\r\n            ¿Problemas encontrando al egresado indicado?\r\n          </h1>\r\n        </mat-card-title>\r\n        <mat-card-subtitle class=\"text-center alinear-centro subtitulo mb-5\">No pasa nada, busca a los egresados según\r\n          las preferencias que quieras</mat-card-subtitle>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2\">\r\n            <img src=\"../../../../assets/images/gorrolupa.png\" class=\" img-fluid ml-5 d-none d-md-block\" alt=\"\">\r\n          </div>\r\n          <div class=\"col-md-10\">\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Profesión</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Orientación</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Mínima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"minAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Máxima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"maxAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"sm-text-center offset-md-9 col-md-2\">\r\n          <button type=\"submit\" mat-raiser-button class=\"btn\">\r\n            Buscar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </ng-template>\r\n    <ng-template #mostrarResultados>\r\n      <form [formGroup]=\"firstNameFormGroup\" (ngSubmit)=\"searchWithFirstName()\" class=\"mt-2 mb-3\">\r\n        <div class=\"form-row margen-divider\">\r\n          <div class=\"offset-md-1 col-md-8\">\r\n            <mat-form-field class=\"full-width-height\">\r\n              <mat-label>Nombre de Egresado</mat-label>\r\n              <span matPrefix>\r\n                <mat-icon>search</mat-icon>&nbsp;\r\n              </span>\r\n              <input type=\"text\" matInput (change)=\"getSearchData($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"sm-text-center col-md-2\">\r\n            <button type=\"submit\" mat-raised-button class=\"btn\">\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form [formGroup]=\"optionsFormGroup\" (ngSubmit)=\"getResultsWithOptions()\" class=\"mt-2 mb-3\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <div class=\"row mt-4\">\r\n          <div class=\"col-12\">\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Profesión</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Orientación</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Mínima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"minAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Máxima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"maxAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"sm-text-center col-md-2\">\r\n                <button type=\"submit\" mat-raised-button class=\"btn\">\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n      <div *ngIf=\"resultadosDeBusqueda != null\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <div *ngFor=\"let resultado of resultadosDeBusqueda\" class=\"row pt-4\">\r\n          <div class=\"col-12 col-md-6\">\r\n            <div class=\"row set-pointer\" [routerLink]=\"['/perfil-de-servicio-egresado', resultado.uid]\">\r\n              <div class=\"col-md-6 set-pointer\">\r\n                <img class=\"img-fluid foto col-md-12 rounded-circle d-none d-md-block\" src=\"{{\r\n                    resultado.photoURL\r\n                      ? resultado.photoURL\r\n                      : '../../../assets/images/user8.png'\r\n                  }}\" alt=\"{{ resultado.firstName }}\" />\r\n              </div>\r\n              <div class=\"col-md-6 set-pointer\">\r\n                <h1 class=\"nombre\">{{ resultado.firstName }} {{ resultado.lastName }}</h1>\r\n                <h2 class=\"profesion\">{{ resultado.profesion }}</h2>\r\n                <h3 class=\"orientacion\">{{ resultado.orientacion }}, {{ resultado.yearDeEgreso }}</h3>\r\n                <!-- <h3 class=\"yearDeEgreso\">{{ resultado.yearDeEgreso }}</h3> -->\r\n                <h3 class=\"edad\">{{ getEdad(resultado.birthday) }} años</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </mat-card>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subject, combineLatest } from 'rxjs';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-home-egresado',\r\n  templateUrl: './home-egresado.component.html',\r\n  styleUrls: ['./home-egresado.component.scss'],\r\n})\r\nexport class HomeEgresadoComponent implements OnInit {\r\n  public profesions;\r\n\r\n  startAt = new Subject();\r\n  endAt = new Subject();\r\n  startObservable = this.startAt.asObservable();\r\n  endObservable = this.endAt.asObservable();\r\n  public resultadosDeBusqueda = null;\r\n  valorDeEvent;\r\n\r\n  firstNameFormGroup = new FormGroup({\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n  });\r\n\r\n  optionsFormGroup = new FormGroup({\r\n    profesion: new FormControl('', [Validators.required]),\r\n    minAge: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    maxAge: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    orientacion: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  public user: any;\r\n  public userFirebase: any;\r\n  public uid: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private miscSvc: MiscService,\r\n    private firestoreSvc: FirestoreService\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario == 'egresado') {\r\n      this.user = JSON.parse(localStorage.getItem('user'));\r\n      this.userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n      this.uid = localStorage.getItem('uid');\r\n      this.profesions = this.http.get('../../../../assets/JSON/profesion.json');\r\n      this.getResultsWithFirstName();\r\n    } else {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  // Es para conseguir la informacion para el parametro de busqueda\r\n  getSearchData($event) {\r\n    this.valorDeEvent = $event.target.value;\r\n  }\r\n\r\n  searchWithFirstName() {\r\n    this.startAt.next(this.valorDeEvent);\r\n    this.endAt.next(this.valorDeEvent + '\\uf8ff');\r\n  }\r\n\r\n  // Llama al metodo que se encuentra en el service\r\n  makeQueryWithFirstName(start, end) {\r\n    return this.firestoreSvc.searchwithFirstName(start, end);\r\n  }\r\n\r\n  /*\r\n   * Se subscribe a un observable que va trayendo la informacion de la busqueda.\r\n   * Por razones de seguiridad y para evitar un consumo de la red, se desuscribe despues de 30 segundos\r\n   */\r\n  getResultsWithFirstName() {\r\n    let subscription = combineLatest(\r\n      this.startObservable,\r\n      this.endObservable\r\n    ).subscribe((value) => {\r\n      this.makeQueryWithFirstName(value[0], value[1]).subscribe((resultado) => {\r\n        this.resultadosDeBusqueda = resultado;\r\n        console.log(this.resultadosDeBusqueda);\r\n        setTimeout(() => {\r\n          subscription.unsubscribe;\r\n          console.log('DESUSCRITO');\r\n        }, 30000);\r\n      });\r\n    });\r\n  }\r\n\r\n  makeQueryWithOptions(profesion, minAge, maxAge, orientacion) {\r\n    return this.firestoreSvc.searchWithOption(\r\n      profesion,\r\n      minAge,\r\n      maxAge,\r\n      orientacion\r\n    );\r\n  }\r\n\r\n  getResultsWithOptions() {\r\n    const {\r\n      profesion,\r\n      minAge,\r\n      maxAge,\r\n      orientacion,\r\n    } = this.optionsFormGroup.value;\r\n    this.makeQueryWithOptions(profesion, minAge, maxAge, orientacion).subscribe(\r\n      (resultado) => {\r\n        this.resultadosDeBusqueda = resultado;\r\n        console.log(this.resultadosDeBusqueda);\r\n      }\r\n    );\r\n  }\r\n\r\n  getEdad(fecha): number {\r\n    const timeStamp = fecha.toString();\r\n    let [, res] = timeStamp.match(/seconds=(\\d+)/);\r\n    let fechaDeNacimiento = new Date(+res * 1000);\r\n\r\n    let today: Date = new Date();\r\n\r\n    let edad: number = today.getFullYear() - fechaDeNacimiento.getFullYear();\r\n    return edad;\r\n  }\r\n}\r\n","<app-toolbar></app-toolbar>\r\n<div class=\"margen container-fluid\">\r\n  <!-- <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div> -->\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-3 \">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-3 alinear-centro sm-text-center\">\r\n        <img class=\"col-12 alinear-centro sm-text-center col-md-9 foto rounded-circle\" src=\"{{\r\n            user.photoURL ? user.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ user.empresaName }}\" />\r\n      </div>\r\n      <div class=\"col-12 col-md-8 px-0 margin-top-content margin-bottom-content \">\r\n        <div class=\"row\">\r\n          <div class=\"col-10 col-md-11\">\r\n            <h1 class=\"line-height-normal sm-text-left bienvenido vertical-align\">\r\n              Bienvenido, {{ user.empresaName }}\r\n            </h1>\r\n          </div>\r\n          <div class=\"col-12 d-none d-sm-block\">\r\n            <p class=\"subtitulo-bienvenido line-height-normal mt-2 mb-3\">\r\n              <strong>En esta página podrás encontrar a los egresados indicados y contactarlos para que formen parte de tu equipo.</strong>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-3\">\r\n    <ng-container *ngIf=\"resultadosDeBusqueda != null || resultadosDeBusqueda != undefined; then mostrarResultados; else barraDeBusqueda\"></ng-container>\r\n    <ng-template #barraDeBusqueda>\r\n      <form [formGroup]=\"firstNameFormGroup\" (ngSubmit)=\"searchWithFirstName()\" class=\"mt-2 mb-3\">\r\n        <mat-card-header class=\"text-center alinear-centro\">\r\n          <mat-card-title class=\"text-center alinear-centro mt-2 mb-4\">\r\n            <h1 class=\"text-center alinear-centro line-height-normal titulo\">\r\n              Encuentra a los mejores egresados\r\n            </h1>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <div class=\"form-row margen-divider\">\r\n          <div class=\"offset-md-1 col-md-8\">\r\n            <mat-form-field class=\"full-width-height\">\r\n              <mat-label>Nombre de Egresado</mat-label>\r\n              <span matPrefix>\r\n                <mat-icon>search</mat-icon>&nbsp;\r\n              </span>\r\n              <input type=\"text\" matInput (change)=\"getSearchData($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"sm-text-center col-md-2\">\r\n            <button type=\"submit\" mat-raised-button class=\"btn\">\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form [formGroup]=\"optionsFormGroup\" (ngSubmit)=\"getResultsWithOptions()\" class=\"mt-2 mb-3\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <mat-card-title class=\"text-center alinear-centro mt-4 mb-1\">\r\n          <h1 class=\"text-center alinear-centro line-height-normal titulo-opciones\">\r\n            ¿Problemas encontrando al egresado indicado?\r\n          </h1>\r\n        </mat-card-title>\r\n        <mat-card-subtitle class=\"text-center alinear-centro subtitulo mb-5\">No pasa nada, busca a los egresados según las\r\n          preferencias que quieras</mat-card-subtitle>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2\">\r\n            <img src=\"../../../../assets/images/gorrolupa.png\" class=\" img-fluid ml-5 d-none d-md-block\" alt=\"\">\r\n          </div>\r\n          <div class=\"col-md-10\">\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Profesión</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Orientación</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Mínima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"minAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Máxima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"maxAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"sm-text-center offset-md-9 col-md-2\">\r\n          <button type=\"submit\" mat-raiser-button class=\"btn\">\r\n            Buscar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </ng-template>\r\n    <ng-template #mostrarResultados>\r\n      <form [formGroup]=\"firstNameFormGroup\" (ngSubmit)=\"searchWithFirstName()\" class=\"mt-2 mb-3\">\r\n        <div class=\"form-row margen-divider\">\r\n          <div class=\"offset-md-1 col-md-8\">\r\n            <mat-form-field class=\"full-width-height\">\r\n              <mat-label>Nombre de Egresado</mat-label>\r\n              <span matPrefix>\r\n                <mat-icon>search</mat-icon>&nbsp;\r\n              </span>\r\n              <input type=\"text\" matInput (change)=\"getSearchData($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"sm-text-center col-md-2\">\r\n            <button type=\"submit\" mat-raised-button class=\"btn\">\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form [formGroup]=\"optionsFormGroup\" (ngSubmit)=\"getResultsWithOptions()\" class=\"mt-2 mb-3\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <div class=\"row mt-4\">\r\n          <div class=\"col-12\">\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Profesión</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Orientación</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"offset-md-1 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Mínima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"minAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Máxima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"maxAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"sm-text-center col-md-2\">\r\n                <button type=\"submit\" mat-raised-button class=\"btn\">\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"form-row\">\r\n          <div class=\"offset-md-1 col-md-10\">\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Profesion</mat-label>\r\n                  <mat-select formControlName=\"profesion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Minima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"minAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Edad Maxima</mat-label>\r\n                  <input type=\"number\" matInput formControlName=\"maxAge\" />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-row mb-2\">\r\n          <div class=\"offset-md-1 col-md-10\">\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Orientacion</mat-label>\r\n                  <mat-select formControlName=\"orientacion\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opcion</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"sm-text-center offset-md-5 col-md-3\">\r\n                <button type=\"submit\" mat-raised-button class=\"btn\">\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n      </form>\r\n      <div *ngIf=\"resultadosDeBusqueda != null\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n        <div *ngFor=\"let resultado of resultadosDeBusqueda\" class=\"row pt-4\">\r\n          <div class=\"col-12 col-md-6\">\r\n            <div class=\"row set-pointer\" [routerLink]=\"['/perfil-de-servicio-egresado', resultado.uid]\">\r\n              <div class=\"col-md-6 set-pointer\">\r\n                <img class=\"img-fluid foto col-md-12 rounded-circle d-none d-md-block\" src=\"{{\r\n                    resultado.photoURL\r\n                      ? resultado.photoURL\r\n                      : '../../../assets/images/user8.png'\r\n                  }}\" alt=\"{{ resultado.firstName }}\" />\r\n              </div>\r\n              <div class=\"col-md-6 set-pointer\">\r\n                <h1 class=\"nombre\">{{ resultado.firstName }} {{ resultado.lastName }}</h1>\r\n                <h2 class=\"profesion\">{{ resultado.profesion }}</h2>\r\n                <h3 class=\"orientacion\">{{ resultado.orientacion }}, {{ resultado.yearDeEgreso }}</h3>\r\n                <!-- <h3 class=\"yearDeEgreso\">{{ resultado.yearDeEgreso }}</h3> -->\r\n                <h3 class=\"edad\">{{ getEdad(resultado.birthday) }} años</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </mat-card>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subject, combineLatest } from 'rxjs';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-home-empresa',\r\n  templateUrl: './home-empresa.component.html',\r\n  styleUrls: ['./home-empresa.component.scss'],\r\n})\r\nexport class HomeEmpresaComponent implements OnInit {\r\n  public profesions;\r\n\r\n  startAt = new Subject();\r\n  endAt = new Subject();\r\n  startObservable = this.startAt.asObservable();\r\n  endObservable = this.endAt.asObservable();\r\n  public resultadosDeBusqueda = null;\r\n  valorDeEvent;\r\n\r\n  firstNameFormGroup = new FormGroup({\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n  });\r\n\r\n  optionsFormGroup = new FormGroup({\r\n    profesion: new FormControl('', [Validators.required]),\r\n    minAge: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    maxAge: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    orientacion: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  public user: any;\r\n  public userFirebase: any;\r\n  public uid: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authSvc: AuthService,\r\n    private miscSvc: MiscService,\r\n    private firestoreSvc: FirestoreService\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario == 'empresa') {\r\n      this.user = JSON.parse(localStorage.getItem('user'));\r\n      this.userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n      this.uid = localStorage.getItem('uid');\r\n      this.profesions = this.http.get('../../../../assets/JSON/profesion.json');\r\n      this.getResultsWithFirstName();\r\n    } else {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  // Es para conseguir la informacion para el parametro de busqueda\r\n  getSearchData($event) {\r\n    this.valorDeEvent = $event.target.value;\r\n  }\r\n\r\n  searchWithFirstName() {\r\n    this.startAt.next(this.valorDeEvent);\r\n    this.endAt.next(this.valorDeEvent + '\\uf8ff');\r\n  }\r\n\r\n  // Llama al metodo que se encuentra en el service\r\n  makeQueryWithFirstName(start, end) {\r\n    console.log(start);\r\n    return this.firestoreSvc.searchwithFirstName(start, end);\r\n  }\r\n\r\n  /*\r\n   * Se subscribe a un observable que va trayendo la informacion de la busqueda.\r\n   * Por razones de seguiridad y para evitar un consumo de la red, se desuscribe despues de 30 segundos\r\n   */\r\n  getResultsWithFirstName() {\r\n    let subscription = combineLatest(\r\n      this.startObservable,\r\n      this.endObservable\r\n    ).subscribe((value) => {\r\n      if (value[0] != null || value[0] != undefined) {\r\n        this.makeQueryWithFirstName(value[0], value[1]).subscribe(\r\n          (resultado) => {\r\n            this.resultadosDeBusqueda = resultado;\r\n            console.log(this.resultadosDeBusqueda);\r\n            setTimeout(() => {\r\n              subscription.unsubscribe;\r\n              console.log('DESUSCRITO');\r\n            }, 30000);\r\n          }\r\n        );\r\n      } else {\r\n        console.log('No ingreso nada');\r\n      }\r\n    });\r\n  }\r\n\r\n  makeQueryWithOptions(profesion, minAge, maxAge, orientacion) {\r\n    return this.firestoreSvc.searchWithOption(\r\n      profesion,\r\n      minAge,\r\n      maxAge,\r\n      orientacion\r\n    );\r\n  }\r\n\r\n  getResultsWithOptions() {\r\n    const {\r\n      profesion,\r\n      minAge,\r\n      maxAge,\r\n      orientacion,\r\n    } = this.optionsFormGroup.value;\r\n    if (profesion == '' || minAge == '' || maxAge == '' || orientacion == '') {\r\n      console.log('No lleno todos los campos');\r\n    } else {\r\n      this.makeQueryWithOptions(\r\n        profesion,\r\n        minAge,\r\n        maxAge,\r\n        orientacion\r\n      ).subscribe((resultado) => {\r\n        this.resultadosDeBusqueda = resultado;\r\n        console.log(this.resultadosDeBusqueda);\r\n      });\r\n    }\r\n  }\r\n\r\n  getEdad(fecha): number {\r\n    console.log(fecha);\r\n    const timestamp = fecha.seconds;\r\n    let fechaDeNacimiento = new Date(timestamp * 1000);\r\n\r\n    let today: Date = new Date();\r\n\r\n    let edad: number = today.getFullYear() - fechaDeNacimiento.getFullYear();\r\n    return edad;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-landing-page',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.scss']\r\n})\r\nexport class LandingPageComponent implements OnInit {\r\n\r\n  public user;\r\n\r\n  constructor(private miscSvc: MiscService, private router: Router) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario != 'nadie') {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  goToLogin(){\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n","<!-- Vista para pantallas pequeñas para abajo -->\r\n<div class=\"d-md-none\">\r\n  <div class=\"container-fluid\">\r\n    <div id=\"navbar\" class=\"row fondo-blanco\">\r\n      <div class=\"col-12 mt-4 text-center\">\r\n        <img src=\"../../assets/images/titulo.png\" routerLink=\"/\" alt=\"Fondo\" class=\"pointer\">\r\n      </div>\r\n      <div class=\"col-12 text-center\">\r\n        <a href=\"#\" class=\"palabras-navbar posicion-palabras-navbar col-12 \">About</a>\r\n        <a routerLink=\"/eleccion-register\" class=\"palabras-navbar posicion-palabras-navbar col-12\">Registrarse</a>\r\n      </div>\r\n    </div>\r\n    <div id=\"contenido\" class=\"row\">\r\n      <div class=\"col-12 pb-5 fondo-blanco p-0\">\r\n        <img src=\"../../assets/images/maletin_gorro.png\" alt=\"maletin_gorro\" class=\"img-fluid float-right\">\r\n      </div>\r\n      <div class=\"col-12 fondo-blanco\">\r\n        <div class=\"mb-4 pb-5 text-center\">\r\n          <button type=\"submit\" (click)=\"goToLogin()\" class=\"btn btn-dark\">Iniciar sesión</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 fondo-negro\">\r\n        <div class=\"text-center\">\r\n          <p class=\"palabra-principal margen-palabra-principal line-height-normal\">No pierdas el contacto</p>\r\n        </div>\r\n        <div class=\"mt-5 mb-4 pb-5 text-center\">\r\n          <p class=\"palabra-secundaria line-height-normal\">Con nuestra nueva Red de Egresados, participá en proyectos y aparecé en el radar de las mejores empresas del mercado</p>\r\n        </div>\r\n        <!-- <div class=\"mt-5 mb-5 pb-5 text-center\">\r\n          <button type=\"submit\" (click)=\"goToLogin()\" class=\"btn btn-dark\">Iniciar sesion</button>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Vista para pantallas medianas para arriba -->\r\n<div class=\"d-none d-md-block\">\r\n  <div class=\"container-fluid fondo\">\r\n    <div class=\"row fondo-blanco\">\r\n      <div class=\"offset-md-1 col-md-1 mt-4\">\r\n        <img src=\"../../assets/images/titulo.png\" routerLink=\"/\" alt=\"Fondo\" class=\"pointer -margen-left-15\">\r\n      </div>\r\n      <div class=\"offset-md-5 col-md-4 mt-4\">\r\n        <a href=\"#\" class=\"palabras-navbar posicion-palabras-navbar offset-md-3 col-md-3\">About</a>\r\n        <a routerLink=\"/eleccion-register\" class=\"palabras-navbar posicion-palabras-navbar offset-md-2 col-md-3\">Registrarse</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"text-center\">\r\n          <p class=\"palabra-principal margen-palabra-principal line-height-normal\">No pierdas<br>el contacto</p>\r\n        </div>\r\n        <div class=\"offset-md-2 mt-5 text-left\">\r\n          <p class=\"palabra-secundaria line-height-normal\">Con nuestra nueva Red de Egresados, participá en proyectos y aparecé en el radar de las mejores empresas del mercado</p>\r\n          <!-- <p class=\"palabra-secundaria\">Con nuestra nueva red de Egresados, participá en proyectos</p>\r\n          <p class=\"palabra-secundaria margen-palabra-secundaria\">y aparece en el radar de las mejores empresas del mercado</p> -->\r\n        </div>\r\n        <div class=\"mt-5 mb-5 pb-5 text-center\">\r\n          <button type=\"submit\" (click)=\"goToLogin()\" class=\"btn btn-dark palabra-boton\">Iniciar sesión</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","<app-toolbar></app-toolbar>\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        Agregue las experiencias y capacitaciones que tuvo\r\n      </h1>\r\n    </mat-card-title>\r\n    <mat-card-subtitle class=\"subtitulo line-height-normal text-center mt-1\">\r\n      Ingresá tus datos para modificar su perfil de egresado<br />y que los demás\r\n      vean todas sus capacidades\r\n    </mat-card-subtitle>\r\n    <form [formGroup]=\"capacitacionForm\" (ngSubmit)=\"onAddCapacitation()\" class=\"mt-1 mb-3\">\r\n      <mat-vertical-stepper [linear]=\"true\" #stepper>\r\n        <mat-step [stepControl]=\"firstFormGroup\">\r\n          <form [formGroup]=\"firstFormGroup\">\r\n            <ng-template matStepLabel>Por favor, ingrese sus datos </ng-template>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"col-12\">\r\n                <div class=\"margen row\">\r\n                  <div class=\"col-12 col-md-6 set-pointer\" (click)=\"setFirstFormGroupEgresado()\">\r\n                    <!-- <div class=\"col-12 col-md-6 set-pointer\" (click)=\"setFirstFormGroupEgresado()\"\r\n                    [ngStyle]=\"{'background-color': backgroundColorEgresado}\"> -->\r\n                    <!-- <input type=\"radio\"/> -->\r\n                    <img mat-card-image src={{srcImgEgresado}} alt=\"Eleccion egresado\"\r\n                      class=\"img-fluid set-size-image\" value=\"egresado\">\r\n                    <!-- <div class=\"alinear-centro mt-5\">\r\n                      <button type=\"submit\" class=\"btn btn-dark alinear-centro\">Egresado</button>\r\n                    </div> -->\r\n                  </div>\r\n                  <div class=\"margen-pantalla-chica col-12 col-md-6 set-pointer\" (click)=\"setFirstFormGroupEmpresa()\">\r\n                    <!-- <div class=\"margen-pantalla-chica col-12 col-md-6 set-pointer\" (click)=\"setFirstFormGroupEmpresa()\"\r\n                    [ngStyle]=\"{'background-color': backgroundColorEmpresa}\"> -->\r\n                    <!-- <input type=\"radio\"/> -->\r\n                    <img mat-card-image src={{srcImgEmpresa}} alt=\"Eleccion empresa\"\r\n                      class=\"img-fluid set-size-image\">\r\n                    <!-- <div class=\"alinear-centro mt-5\">\r\n                    <button type=\"submit\" class=\"btn btn-dark\">Empresa</button>\r\n                  </div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button class=\"btn text-center mt-3\" mat-button matStepperNext>\r\n                Siguiente\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"secondFormGroup\">\r\n          <form [formGroup]=\"secondFormGroup\">\r\n            <ng-template matStepLabel>Complete los datos restantes sobre la capacitación/experiencia</ng-template>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Capacitación</mat-label>\r\n                  <input matInput formControlName=\"capacitacion\" type=\"text\" />\r\n                  <mat-error *ngIf=\"capacitacionPattern.hasError('required')\">\r\n                    Una descripción de la capacitación es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Area relacionada</mat-label>\r\n                  <mat-select formControlName=\"areaRelacionada\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option value=\"Computacion\">Computación</mat-option>\r\n                    <mat-option value=\"Mecanica\">Mecánica</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"areaRelacionadaPattern.hasError('required')\">\r\n                    El área con la que se relaciona la capacitación es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Año de Inicio</mat-label>\r\n                  <mat-select formControlName=\"yearDeInicio\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option *ngFor=\"let year of yearsInicio | async\" [value]=\"year.value\">\r\n                      {{ year.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"yearDeInicioPattern.hasError('required')\">\r\n                    El año de inicio es <strong>requerido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Año de finalización</mat-label>\r\n                  <mat-select formControlName=\"yearDeFinal\">\r\n                    <mat-option selected=\"selected\" hidden value=\"\">Elija una opción</mat-option>\r\n                    <mat-option value=\"Actualidad\">Actualidad</mat-option>\r\n                    <mat-option *ngFor=\"let year of yearsFinal | async\" [value]=\"year.value\">\r\n                      {{ year.viewValue }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"yearDeFinalPattern.hasError('required')\">\r\n                    El año de finalizacion es <strong>requerido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-3\">\r\n              <div class=\"offset-md-2 col-md-4 col-12\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Lugar de capacitación</mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"lugarDeCapacitacion\" />\r\n                  <mat-error *ngIf=\"lugarDeCapacitacionPattern.hasError('required')\">\r\n                    El lugar de la capacitación es <strong>requerido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n      </mat-vertical-stepper>\r\n      <div class=\"form-row\" *ngIf=\"errorMessage\">\r\n        <div class=\"offset-2 col-8\">\r\n          <small class=\"form-text alert-danger text-center mt-2 pt-1 pb-1\">\r\n            {{ errorMessage }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"text-center offset-md-8 col-md-4\">\r\n          <button type=\"submit\" mat-raised-button class=\"btn-agregar\">\r\n            Agregar experiencias\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-agregar-experiencias',\r\n  templateUrl: './agregar-experiencias.component.html',\r\n  styleUrls: ['./agregar-experiencias.component.scss'],\r\n})\r\nexport class AgregarExperienciasComponent implements OnInit {\r\n  // Es el formGroup de la primera parte del stepper\r\n  firstFormGroup = new FormGroup({\r\n    relacionDeCapacitacion: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public relacionDeCapacitacionPattern = this.firstFormGroup.get(\r\n    'relacionDeCapacitacion'\r\n  );\r\n\r\n  // Es el formGroup de la segunda parte del stepper\r\n  secondFormGroup = new FormGroup({\r\n    capacitacion: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n    ]),\r\n    yearDeInicio: new FormControl('', [Validators.required]),\r\n    yearDeFinal: new FormControl('', [Validators.required]),\r\n    areaRelacionada: new FormControl('', [Validators.required]),\r\n    lugarDeCapacitacion: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n    ]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public capacitacionPattern = this.secondFormGroup.get('capacitacion');\r\n  public yearDeInicioPattern = this.secondFormGroup.get('yearDeInicio');\r\n  public yearDeFinalPattern = this.secondFormGroup.get('yearDeFinal');\r\n  public areaRelacionadaPattern = this.secondFormGroup.get('areaRelacionada');\r\n  public lugarDeCapacitacionPattern = this.secondFormGroup.get(\r\n    'lugarDeCapacitacion'\r\n  );\r\n\r\n  // Es el formGroup que se pasa a la base de datos y ambos formGroup anteriores en uno solo\r\n  capacitacionForm = new FormGroup({\r\n    relacionDeCapacitacion: new FormControl('', [Validators.required]),\r\n    capacitacion: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n    ]),\r\n    yearDeInicio: new FormControl('', [Validators.required]),\r\n    yearDeFinal: new FormControl('', [Validators.required]),\r\n    areaRelacionada: new FormControl('', [Validators.required]),\r\n    lugarDeCapacitacion: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n    ]),\r\n  });\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  public errorMessage: string;\r\n\r\n  // Se usa para almacenar todos los años de inicio y fin disponibles\r\n  public yearsInicio;\r\n  public yearsFinal;\r\n\r\n  // Se usa para almacenar todas las areas disponibles\r\n  public areas;\r\n\r\n  public backgroundColorEgresado = '#ffffff';\r\n  public backgroundColorEmpresa = '#ffffff';\r\n  public srcImgEgresado = '../../../assets/images/eleccion_egresado.png';\r\n  public srcImgEmpresa = '../../../assets/images/eleccion_empresa.png';\r\n\r\n  public user: any;\r\n  public userFirebase: any;\r\n  public uid: any;\r\n\r\n  constructor(\r\n    private miscSvc: MiscService,\r\n    private firestoreSvc: FirestoreService,\r\n    private router: Router,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario != 'egresado') {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    } else {\r\n      this.user = JSON.parse(localStorage.getItem('user'));\r\n      this.userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n      this.uid = localStorage.getItem('uid');\r\n      this.yearsInicio = this.http.get('../../../../assets/JSON/egresoYear.json');\r\n      this.yearsFinal = this.http.get('../../../../assets/JSON/egresoYear.json');\r\n    }\r\n  }\r\n\r\n  setFirstFormGroupEmpresa() {\r\n    this.firstFormGroup.patchValue({\r\n      relacionDeCapacitacion: 'empresa',\r\n    });\r\n    this.backgroundColorEmpresa = '#51799f';\r\n    this.backgroundColorEgresado = '#ffffff';\r\n    this.srcImgEmpresa = '../../../assets/images/empresaselec.png';\r\n    this.srcImgEgresado = '../../../assets/images/eleccion_egresado.png';\r\n    const { relacionDeCapacitacion } = this.firstFormGroup.value;\r\n    console.log(relacionDeCapacitacion);\r\n  }\r\n\r\n  setFirstFormGroupEgresado() {\r\n    this.firstFormGroup.patchValue({\r\n      relacionDeCapacitacion: 'egresado',\r\n    });\r\n    this.backgroundColorEmpresa = '#ffffff';\r\n    this.backgroundColorEgresado = '#51799f';\r\n    this.srcImgEmpresa = '../../../assets/images/eleccion_empresa.png';\r\n    this.srcImgEgresado = '../../../assets/images/egresadoselec.png';\r\n    const { relacionDeCapacitacion } = this.firstFormGroup.value;\r\n    console.log(relacionDeCapacitacion);\r\n  }\r\n\r\n  async onAddCapacitation(): Promise<void> {\r\n    const { relacionDeCapacitacion } = this.firstFormGroup.value;\r\n    const {\r\n      capacitacion,\r\n      yearDeInicio,\r\n      yearDeFinal,\r\n      areaRelacionada,\r\n      lugarDeCapacitacion,\r\n    } = this.secondFormGroup.value;\r\n\r\n    // Se verifica que todos los datos sean validos\r\n    if (\r\n      relacionDeCapacitacion == '' ||\r\n      capacitacion == '' ||\r\n      yearDeInicio == '' ||\r\n      yearDeFinal == '' ||\r\n      areaRelacionada == '' ||\r\n      lugarDeCapacitacion == ''\r\n    ) {\r\n      // Si no lo son tira un error\r\n      this.errorMessage = 'Algunos de los campos estan incompletos';\r\n      throw new Error(this.errorMessage);\r\n    } else if (yearDeFinal != 'Actualidad' && yearDeInicio > yearDeFinal) {\r\n      // Si no lo son tira un error\r\n      this.errorMessage = 'La fecha de inicio es mayor a la de finalizacion';\r\n      throw new Error(this.errorMessage);\r\n    } else {\r\n      this.capacitacionForm.patchValue({\r\n        relacionDeCapacitacion: relacionDeCapacitacion,\r\n        capacitacion: capacitacion,\r\n        yearDeInicio: yearDeInicio,\r\n        yearDeFinal: yearDeFinal,\r\n        areaRelacionada: areaRelacionada,\r\n        lugarDeCapacitacion: lugarDeCapacitacion,\r\n      });\r\n\r\n      try {\r\n        await this.firestoreSvc.setCapacitacionesDeUser(\r\n          this.capacitacionForm.value\r\n        );\r\n        this.router.navigate(['/perfil']);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"pb-4 pt-3 px-5\">\r\n  <h1 mat-dialog-title class=\"titulo text-center mt-3 pb-3\">Envía un mensaje</h1>\r\n  <form (ngSubmit)=\"sendEmail($event)\">\r\n    <div class=\"row\">\r\n      <ng-container *ngIf=\"user.empresa; then nombreEmpresa ; else nombreEgresado\"></ng-container>\r\n      <ng-template #nombreEmpresa>\r\n        <input hidden name=\"from_name\" value=\"{{user.empresaName}}\">\r\n      </ng-template>\r\n      <ng-template #nombreEgresado>\r\n        <input hidden name=\"from_name\" value=\"{{user.firstName}}&nbsp;{{user.lastName}}\">\r\n      </ng-template>\r\n      <input hidden name=\"to_name\" value=\"{{nombreAContactar}}\">\r\n      <input hidden name=\"to_email\" value=\"{{emailAContactar}}\">\r\n      <input hidden name=\"reply_to\" value=\"{{user.email}}\">\r\n      <div class=\"col-12\">\r\n        <div class=\"form-row\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Mensaje</mat-label>\r\n            <textarea matInput name=\"message\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n      <div class=\"col-12\">\r\n        <button mat-button class=\"btn btn-dark btn-block\" type=\"submit\">Enviar</button>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"result == 'OK'\" class=\"row\">\r\n      <h2 class=\"text-center\">Se envió correctamente el email</h2>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { keys } from 'config';\r\nimport emailjs, { EmailJSResponseStatus } from 'emailjs-com';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-email-contact',\r\n  templateUrl: './email-contact.component.html',\r\n  styleUrls: ['./email-contact.component.scss'],\r\n})\r\nexport class EmailContactComponent implements OnInit {\r\n  constructor(\r\n    private authSvc: AuthService,\r\n    private miscSvc: MiscService,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<EmailContactComponent>\r\n  ) {}\r\n\r\n  public user: any;\r\n  public uid: any;\r\n  public userFirebase: any;\r\n\r\n  public nombreAContactar: string;\r\n  public emailAContactar: string;\r\n\r\n  public result: string = '';\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario == 'egresado' || hayUnUsuario == 'empresa') {\r\n      this.user = JSON.parse(localStorage.getItem('user'));\r\n      this.uid = localStorage.getItem('uid');\r\n      this.userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n      this.nombreAContactar = this.data.name;\r\n      this.emailAContactar = this.data.email;\r\n    } else {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  sendEmail(e: Event) {\r\n    e.preventDefault();\r\n    emailjs\r\n      .sendForm(\r\n        keys.serviceID,\r\n        keys.templateID,\r\n        e.target as HTMLFormElement,\r\n        keys.userID\r\n      )\r\n      .then(\r\n        (result: EmailJSResponseStatus) => {\r\n          this.result = result.text;\r\n          console.log(result.text);\r\n          this.dialogRef.close();\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<app-toolbar></app-toolbar>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-3 mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-4 mt-3 md-margen\">\r\n        <img class=\"offset-md-2 col-md-8 rounded-circle\" src=\"{{\r\n            user.photoURL ? user.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ user.firstName }}\" />\r\n        <div class=\"offset-md-3 mt-4 sm-alinear-centro\">\r\n          <h3 class=\"texto-datos\">\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3\" src=\"../../../assets/images/sexo.png\" />\r\n              {{ user.gender }}\r\n            </p>\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3 -ml-009\" src=\"../../../assets/images/nacimiento.png\" />\r\n              {{ fechaDeNacimiento | date: \"dd/MM/yyyy\" }}\r\n            </p>\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3 -ml-033\" src=\"../../../assets/images/egreso.png\" />\r\n              {{ user.yearDeEgreso }}\r\n            </p>\r\n            <p class=\"texto-dato mt\">\r\n              <img class=\"img-fluid mr-3 -ml-033\" src=\"../../../assets/images/orientacion.png\" />\r\n              {{ user.orientacion }}\r\n            </p>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <ng-container *ngIf=\"mostrar; then mostrarDatos; else editarDatos\"></ng-container>\r\n      <ng-template #mostrarDatos>\r\n        <div class=\"col-12 col-md-8 px-0 margin-top-content mb-4\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 col-md-11\">\r\n              <h1 class=\"line-height-normal sm-text-left titulo vertical-align\">\r\n                {{ user.firstName }} {{ user.lastName }}\r\n              </h1>\r\n            </div>\r\n            <div class=\"col-2 col-md-1 px-0\">\r\n              <button (click)=\"editar()\" class=\"boton-editar vertical-align\">\r\n                <img mat-icon class=\"img-fluid\" src=\"../../assets/images/editar.png\" />\r\n              </button>\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <p class=\"subtitulo-profesion mt-2 mb-3\">\r\n                <strong>{{ user.profesion }}</strong>\r\n              </p>\r\n            </div>\r\n            <div class=\"col 12\">\r\n              <h3>\r\n                <p class=\"mt-3 descrip\">\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                  Vestibulum nec ornare tortor, et volutpat augue. In tincidunt\r\n                  auctor nisl eget condimentum. Donec id iaculis sapien. Vivamus\r\n                  pharetra facilisis quam et sodales. Quisque congue, ipsum et\r\n                  sollicitudin laoreet, mauris augue condimentum est, in\r\n                  placerat massa odio vel erat. Mauris sit amet efficitur lorem,\r\n                  id volutpat diam.\"\r\n                </p>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template #editarDatos>\r\n        <div class=\"col-12 col-md-8 px-0 mt-4 mb-4\">\r\n          <div class=\"col-10 col-md-11\">\r\n            <h1 class=\"line-height-normal sm-text-left titulo vertical-align\">\r\n              Edite sus datos\r\n            </h1>\r\n          </div>\r\n          <form [formGroup]=\"editarForm\" (ngSubmit)=\"onEdit()\" class=\"sm-margen mt-4 mb-3\">\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Nombre</mat-label>\r\n                  <input matInput formControlName=\"firstName\" type=\"text\" [(ngModel)]=\"userAux.firstName\" />\r\n                  <mat-error *ngIf=\"firstNamePattern.hasError('required')\">\r\n                    El nombre es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      firstNamePattern.hasError('pattern') ||\r\n                      firstNamePattern.hasError('minlength')\r\n                    \">\r\n                    El nombre solo esta compuesto por\r\n                    <strong>letras</strong> y debe tener mínimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12 float-right\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Apellido</mat-label>\r\n                  <input matInput formControlName=\"lastName\" type=\"text\" [(ngModel)]=\"userAux.lastName\" />\r\n                  <mat-error *ngIf=\"lastNamePattern.hasError('required')\">\r\n                    El apellido es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      lastNamePattern.hasError('pattern') ||\r\n                      lastNamePattern.hasError('minlength')\r\n                    \">\r\n                    El apellido solo esta compuesto por\r\n                    <strong>letras</strong> y debe tener mínimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Género</mat-label>\r\n                  <mat-select [(ngModel)]=\"userAux.gender\" formControlName=\"gender\">\r\n                    <mat-option value=\"Masculino\">Masculino</mat-option>\r\n                    <mat-option value=\"Femenino\">Femenino</mat-option>\r\n                    <mat-option value=\"Prefiero no decirlo\">Prefiero no decirlo</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"genderPattern.hasError('required')\">\r\n                    El género es <strong>requerido</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12 float-right\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Fecha de Nacimiento</mat-label>\r\n                  <input matInput formControlName=\"birthday\" [(ngModel)]=\"fechaDeNacimiento\" [matDatepicker]=\"picker\"\r\n                    [max]=\"maxDate\" />\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker></mat-datepicker>\r\n                  <mat-error *ngIf=\"birthdayPattern.hasError('matDatepickerParse')\">\r\n                    La fecha de nacimiento no es <strong>válida</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      birthdayPattern.hasError('required') &&\r\n                      !birthdayPattern.hasError('matDatepickerParse')\r\n                    \">\r\n                    La fecha es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Teléfono</mat-label>\r\n                  <span matPrefix>+45 &nbsp;</span>\r\n                  <input matInput formControlName=\"cellphone\" type=\"number\" [(ngModel)]=\"userAux.cellphone\" />\r\n                  <mat-error *ngIf=\"cellphonePattern.hasError('required')\">\r\n                    El teléfono es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"cellphonePattern.hasError('pattern')\">\r\n                    El teléfono solo esta compuesto por <strong>números</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-5 col-12 float-right\">\r\n                <mat-form-field class=\"full-width-height mt-2\">\r\n                  <mat-label>Profesión</mat-label>\r\n                  <mat-select [(ngModel)]=\"userAux.profesion\" formControlName=\"profesion\">\r\n                    <mat-option *ngFor=\"let profesion of profesions | async\" [value]=\"profesion.value\">\r\n                      {{ profesion.viewValue }}</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"profesionPattern.hasError('required')\">\r\n                    La profesión es <strong>requerida</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <label for=\"Cambiar Foto\">Foto de perfil</label>\r\n                <input type=\"file\" accept=\"image/jpeg, image/png, image/jpg\" class=\"form-control-file\" id=\"inputFile\"\r\n                  formControlName=\"photoURL\" (change)=\"cambioArchivo($event)\" />\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 offset-md-1 col-md-5 mt-4 text-center\">\r\n                    <button class=\"btn btn-dark\" type=\"submit\">Guardar</button>\r\n                  </div>\r\n                  <div class=\"col-12 offset-md-1 col-md-5 mt-4 text-center\">\r\n                    <button class=\"btn btn-dark\" (click)=\"editar()\">\r\n                      Cancelar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-3\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <ng-container *ngIf=\"\r\n            capacitaciones == null ||\r\n              capacitaciones == undefined ||\r\n              capacitacionesLength == 0;\r\n            then mostrarSinCapacitaciones;\r\n            else mostrarConCapacitaciones\r\n          \">\r\n        </ng-container>\r\n        <ng-template #mostrarSinCapacitaciones>\r\n          <div class=\"mt-2 mb-1\">\r\n            <mat-card-title class=\"mt-2 mb-4 ml-4 mr-4\">\r\n              <h1 class=\"line-height-normal titulo-categoria\">\r\n                Lleva tu perfil a otro nivel\r\n              </h1>\r\n            </mat-card-title>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\">\r\n                <img src=\"../../../../assets/images/agregar_experiencia.png\" class=\"img-fluid ml-5 d-none d-md-block\"\r\n                  alt=\"\" />\r\n              </div>\r\n              <div class=\"col-12 offset-md-1 col-md-9\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12\">\r\n                    <mat-card-subtitle class=\"subtitulo-capacitacion\">Ingresá tus datos acerca de tu experiencia laboral\r\n                      y\r\n                      estudiantil para que las empresas <br />conozcan un poco\r\n                      más de vos\r\n                    </mat-card-subtitle>\r\n                  </div>\r\n                  <div class=\"sm-text-center offset-md-7 col-md-5\">\r\n                    <button (click)=\"goToAgregarExperiencia()\" mat-raiser-button class=\"btn-capacitacion\">\r\n                      Comenzar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template #mostrarConCapacitaciones>\r\n          <div class=\"row\">\r\n            <div class=\"col-6 float-left\">\r\n              <h2 class=\"subtitulo-experiencia ml-2\">Experiencia</h2>\r\n            </div>\r\n            <div class=\"offset-4 offset-md-5 col-2 col-md-1 px-0 float-right\">\r\n              <button (click)=\"editarCapacitaciones()\" class=\"boton-editar vertical-align\">\r\n                <img mat-icon class=\"img-fluid sm-margen-bottom-editar\" src=\"{{\r\n                    mostrarEdicionCapacitaciones == false\r\n                      ? '../../assets/images/editar.png'\r\n                      : '../../assets/images/cruz.png'\r\n                  }}\" alt=\"agregar imagen de cruz\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <ng-container *ngIf=\"\r\n              mostrarEdicionCapacitaciones == false;\r\n              then capacitacionesSinEditar;\r\n              else capacitacionesQueSeEditen\r\n            \">\r\n          </ng-container>\r\n          <ng-template #capacitacionesSinEditar>\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\" *ngFor=\"let capacitacion of capacitaciones\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-4 mt-2 mb-2 center\">\r\n                      <img src=\"{{\r\n                          capacitacion.relacionDeCapacitacion == 'empresa'\r\n                            ? '../../../assets/images/eleccion_empresa.png'\r\n                            : '../../../assets/images/eleccion_egresado.png'\r\n                        }}\" alt=\"Eleccion egresado\" class=\"img-fluid center\" />\r\n                    </div>\r\n                    <div class=\"col-8 mt-2 mb-2\">\r\n                      <div>{{ capacitacion.lugarDeCapacitacion }}</div>\r\n                      <div>{{ capacitacion.capacitacion }}</div>\r\n                      <div>\r\n                        {{ capacitacion.yearDeInicio }}&nbsp;-&nbsp;{{\r\n                          capacitacion.yearDeFinal\r\n                        }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <mat-divider class=\"mb-2 divider\"></mat-divider>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template #capacitacionesQueSeEditen>\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\" *ngFor=\"let capacitacion of capacitaciones; index as i\">\r\n                  <div class=\"row\" (click)=\"borrarCapacitacion(i)\">\r\n                    <div class=\"col-4 mt-2 mb-2 center\">\r\n                      <img src=\"../../assets/images/cruz.png\" class=\"set-pointer center img-fluid\" alt=\"\" />\r\n                    </div>\r\n                    <div class=\"col-8 mt-2 mb-2\">\r\n                      <div>{{ capacitacion.lugarDeCapacitacion }}</div>\r\n                      <div>{{ capacitacion.capacitacion }}</div>\r\n                      <div>\r\n                        {{ capacitacion.yearDeInicio }}&nbsp;-&nbsp;{{\r\n                          capacitacion.yearDeFinal\r\n                        }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <mat-divider class=\"mb-2 divider\"></mat-divider>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mt-3\">\r\n                <div class=\"container\">\r\n                  <div class=\"sm-text-center float-right sm-alinear-centro\">\r\n                    <button (click)=\"goToAgregarExperiencia()\" mat-raiser-button class=\"btn-agregar-capacitacion\">\r\n                      Agregar experiencias\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-6 float-left\">\r\n        <h2 class=\"subtitulo-experiencia ml-2\">Redes</h2>\r\n      </div>\r\n      <div class=\"offset-4 offset-md-5 col-2 col-md-1 px-0 float-right\">\r\n        <button (click)=\"editarRedes()\" class=\"boton-editar vertical-align\">\r\n          <img mat-icon class=\"img-fluid sm-margen-bottom-editar\" src=\"{{\r\n              mostrarEdicionRedes == false\r\n                ? '../../assets/images/editar.png'\r\n                : '../../assets/images/cruz.png'\r\n            }}\" alt=\"agregar imagen de cruz\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-12 col-md-6\">\r\n        <div class=\"row\">\r\n          <div class=\"offset-md-2 col-md-3\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 set-pointer\" (click)=\"abrirFormularioDeBehance()\">\r\n                <img src=\"../../assets/images/behance_icon.png\" class=\"img-fluid\" alt=\"behance_icon\" />\r\n                <p class=\"text-center mt-3 pb-2 social-icons\">Behance</p>\r\n              </div>\r\n              <div class=\"col-12 set-pointer\" (click)=\"abrirFormularioDeFacebook()\">\r\n                <img src=\"../../assets/images/facebook_icon.png\" class=\"img-fluid text-center sm-alinear-centro\"\r\n                  alt=\"facebook_icon\" />\r\n                <p class=\"text-center mt-3 social-icons\">Facebook</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"offset-md-2 col-md-3\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 set-pointer\" (click)=\"abrirFormularioDeInstagram()\">\r\n                <img src=\"../../assets/images/instagram_icon.png\" class=\"img-fluid text-center sm-alinear-centro\"\r\n                  alt=\"instagram_icon\" />\r\n                <p class=\"text-center mt-3 pb-2 social-icons\">Instagram</p>\r\n              </div>\r\n              <div class=\"col-12 set-pointer\" (click)=\"abrirFormularioDeFlickr()\">\r\n                <img src=\"../../assets/images/flickr_icon.png\" class=\"img-fluid text-center sm-alinear-centro\"\r\n                  alt=\"flickr_icon\" />\r\n                <p class=\"text-center mt-3 social-icons\">Flickr</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-5\">\r\n        <div class=\"row text-center\">\r\n          <div class=\"col-12 text-center\">\r\n            <div class=\"row text-center alinear-centro\">\r\n              <div class=\"github-icon-text set-pointer\" (click)=\"abrirFormularioDeGithub()\">\r\n                <img src=\"../../assets/images/github_icon.png\" class=\"img-fluid\" alt=\"github_icon\" />\r\n                Github\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 mt-4 text-center\" *ngIf=\"githubUser\">\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-4 center\">\r\n                    <img src=\"{{ githubUser.avatar_url }}\" class=\"rounded-circle img-fluid center\" alt=\"\" />\r\n                  </div>\r\n                  <div class=\"col-8\">\r\n                    <a href=\"{{githubUser.html_url}}\" class=\"row center\">\r\n                      <div class=\"container nombre-github mt-1\">\r\n                        {{ githubUser.name }}\r\n                      </div>\r\n                      <div class=\"container localizacion-github mt-1\">\r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-geo-alt\" fill=\"currentColor\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path fill-rule=\"evenodd\"\r\n                            d=\"M12.166 8.94C12.696 7.867 13 6.862 13 6A5 5 0 0 0 3 6c0 .862.305 1.867.834 2.94.524 1.062 1.234 2.12 1.96 3.07A31.481 31.481 0 0 0 8 14.58l.208-.22a31.493 31.493 0 0 0 1.998-2.35c.726-.95 1.436-2.008 1.96-3.07zM8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z\" />\r\n                          <path fill-rule=\"evenodd\"\r\n                            d=\"M8 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                        </svg> {{ githubUser.location }}\r\n                      </div>\r\n                    </a>\r\n                    <div class=\"row text-center mt-2\">\r\n                      <div class=\"col-4 text-center\">\r\n                        <div class=\"row text-center github-number\">{{githubUser.followers}}</div>\r\n                        <div class=\"row text-center github-text\">Seguidores</div>\r\n                      </div>\r\n                      <div class=\"col-4 text-center\">\r\n                        <div class=\"row text-center github-number\">{{githubUser.following}}</div>\r\n                        <div class=\"row text-center github-text\">Seguidos</div>\r\n                      </div>\r\n                      <div class=\"col-4 text-center\">\r\n                        <div class=\"row text-center github-number\">{{githubUser.public_repos}}</div>\r\n                        <div class=\"row text-center github-text\">Repositorios</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-body pt-2\">\r\n                <div class=\"container mt-1 texto-repositorio\">\r\n                  Top Repositories\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-4 mt-3\" *ngFor=\"let repo of githubRepos\">\r\n                    <a href=\"{{repo.html_url}}\" class=\"line-height-normal text-center nombre-repo\">\r\n                      {{repo.name}}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, NgZone, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { GithubUser } from 'src/app/shared/interfaces/githubUser';\r\nimport { User } from 'src/app/shared/interfaces/user';\r\nimport { ApisService } from 'src/app/shared/services/apis.service';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { FirestorageService } from 'src/app/shared/services/firestorage.service';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\nimport { RedesFormComponent } from '../redes-form/redes-form.component';\r\n\r\n@Component({\r\n  selector: 'app-perfil-egresado',\r\n  templateUrl: './perfil-egresado.component.html',\r\n  styleUrls: ['./perfil-egresado.component.scss'],\r\n})\r\nexport class PerfilEgresadoComponent implements OnInit {\r\n  // Se usa para establecer la fecha maxima, el dia de hoy.\r\n  today = new Date();\r\n  todayYear: number = this.today.getFullYear();\r\n  todayMonth: number = this.today.getMonth();\r\n  todayDay: number = this.today.getDate();\r\n\r\n  maxDate = new Date(this.todayYear, this.todayMonth, this.todayDay);\r\n\r\n  editarForm = new FormGroup({\r\n    firstName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    cellphone: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]+$'),\r\n    ]),\r\n    lastName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z ]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n    birthday: new FormControl('', [Validators.required]),\r\n    gender: new FormControl('', [Validators.required]),\r\n    profesion: new FormControl('', [Validators.required]),\r\n    photoURL: new FormControl(''),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public firstNamePattern = this.editarForm.get('firstName');\r\n  public lastNamePattern = this.editarForm.get('lastName');\r\n  public birthdayPattern = this.editarForm.get('birthday');\r\n  public genderPattern = this.editarForm.get('gender');\r\n  public cellphonePattern = this.editarForm.get('cellphone');\r\n  public profesionPattern = this.editarForm.get('profesion');\r\n\r\n  githubForm = new FormGroup({\r\n    githubUsername: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  // Variable para guardar los datos del usuario\r\n  public user: any;\r\n  public userAux: User;\r\n  public uid;\r\n  public userFirebase;\r\n  public capacitaciones;\r\n  public capacitacionesLength: number;\r\n  public social;\r\n  public githubUser: GithubUser;\r\n  public githubRepos;\r\n\r\n  // Variable para saber si se tiene que mostrar el formulario editable\r\n  public mostrar: boolean = true;\r\n  public mostrarEdicionCapacitaciones: boolean = false;\r\n  public mostrarEdicionRedes: boolean = false;\r\n\r\n  // Variables para la subida de fotos al Storage\r\n  public nombreArchivo = '';\r\n  public mensajeArchivo = 'No hay archivo seleccionado';\r\n  public datosFormulario = new FormData();\r\n  public URLPublica: string;\r\n  public porcentaje = 0;\r\n  public finalizado = false;\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  public errorMessage: any;\r\n\r\n  // Se usa para almacenar todas las profesiones disponibles\r\n  public profesions;\r\n\r\n  // Se usa para mostrar la fecha de nacimiento en el formato correcto\r\n  public fechaDeNacimiento: Date;\r\n\r\n  constructor(\r\n    private authSvc: AuthService,\r\n    private miscSvc: MiscService,\r\n    private apiSvc: ApisService,\r\n    private firestorageSvc: FirestorageService,\r\n    private firestoreSvc: FirestoreService,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario == 'egresado') {\r\n      this.user = JSON.parse(localStorage.getItem('user'));\r\n      this.userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n      this.uid = localStorage.getItem('uid');\r\n      this.capacitaciones = localStorage.getItem('capacitaciones');\r\n      await this.miscSvc.getSocialOfLoggedUser();\r\n      this.social = JSON.parse(localStorage.getItem('social'));\r\n      this.getCapacitaciones();\r\n      console.log(this.social);\r\n      this.githubUser = await this.apiSvc.getGithubUser(\r\n        this.social.githubUsername\r\n      );\r\n      console.log(this.githubUser);\r\n      this.getGithubRepos().then((result) => {\r\n        this.githubRepos = result;\r\n        this.githubRepos = this.githubRepos.slice(0, 3);\r\n      });\r\n      this.userAux = this.user;\r\n\r\n      const timestamp = this.user.birthday.seconds;\r\n      this.fechaDeNacimiento = new Date(timestamp * 1000);\r\n\r\n      // Almacena la informacion de los json en las variables\r\n      this.profesions = this.http.get('../../../../assets/JSON/profesion.json');\r\n    } else {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  public cambioArchivo(event) {\r\n    if (event.target.files.length > 0) {\r\n      if (\r\n        event.target.files[0].type == 'image/jpeg' ||\r\n        event.target.files[0].type == 'image/jpg' ||\r\n        event.target.files[0].type == 'image/png'\r\n      ) {\r\n        for (let i = 0; i < event.target.files.length; i++) {\r\n          this.mensajeArchivo = `Archivo preparado: ${event.target.files[i].name}`;\r\n          this.nombreArchivo = event.target.files[i].name;\r\n          this.datosFormulario.delete('archivo');\r\n          this.datosFormulario.append(\r\n            'archivo',\r\n            event.target.files[i],\r\n            event.target.files[i].name\r\n          );\r\n        }\r\n        this.datosFormulario.get('archivo');\r\n      } else {\r\n        this.mensajeArchivo =\r\n          'El formato del archivo no es valido (solo JPG, PNG o JPEG)';\r\n      }\r\n    } else {\r\n      this.mensajeArchivo = 'No hay un archivo seleccionado';\r\n    }\r\n  }\r\n\r\n  // Se usa para actualizar los datos del usuario propios de firebase\r\n  async updateUserData(firstName, lastName, photoURL) {\r\n    (await this.authSvc.afAuth.currentUser).updateProfile({\r\n      displayName: firstName + ' ' + lastName,\r\n      photoURL: photoURL,\r\n    });\r\n  }\r\n\r\n  public async editar() {\r\n    if (this.mostrar) {\r\n      this.mostrar = false;\r\n    } else {\r\n      this.mostrar = true;\r\n      let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n      if (hayUnUsuario == 'egresado') {\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        this.userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n        this.uid = localStorage.getItem('uid');\r\n        const timestamp = this.user.birthday.seconds;\r\n        this.fechaDeNacimiento = new Date(timestamp * 1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  async onEdit() {\r\n    try {\r\n      // Verifica si el usuario metio un archivo para cambiar\r\n      if (this.datosFormulario.get('archivo') != null) {\r\n        // Se encarga de actualizar los datos del usuario, si entre esos datos hay una foto\r\n        this.updateUserWithPhoto();\r\n      } else {\r\n        // Se encarga de actualizar los datos del usuario, si entre esos NO datos hay una foto\r\n        this.updateUserWithoutPhoto();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // Se encarga de actualizar los datos del usuario, si entre esos datos NO hay una foto\r\n  async updateUserWithoutPhoto() {\r\n    // Si no se ingresa una foto de perfil nueva, se agarra el link de la que ya estaba\r\n    this.URLPublica = (await this.authSvc.afAuth.currentUser).photoURL;\r\n\r\n    this.editUser();\r\n  }\r\n\r\n  // Se encarga de actualizar los datos del usuario, si entre esos datos hay una foto\r\n  updateUserWithPhoto() {\r\n    let archivo = this.datosFormulario.get('archivo');\r\n    const referencia = this.firestorageSvc.referenciaCloudStorage(\r\n      this.nombreArchivo\r\n    );\r\n    const tarea = this.firestorageSvc.tareaCloudStorage(\r\n      this.nombreArchivo,\r\n      archivo\r\n    );\r\n\r\n    tarea.percentageChanges().subscribe((porcentaje) => {\r\n      this.porcentaje = Math.round(porcentaje);\r\n      if (this.porcentaje == 100) {\r\n        this.finalizado = true;\r\n        referencia.getDownloadURL().subscribe((URL) => {\r\n          this.URLPublica = URL;\r\n        });\r\n        this.editUser();\r\n      }\r\n    });\r\n    referencia.getDownloadURL().subscribe((URL) => {\r\n      this.URLPublica = URL;\r\n    });\r\n    console.log(this.URLPublica);\r\n  }\r\n\r\n  async editUser() {\r\n    try {\r\n      const {\r\n        firstName,\r\n        cellphone,\r\n        lastName,\r\n        gender,\r\n        profesion,\r\n        birthday,\r\n      } = this.editarForm.value;\r\n\r\n      if (\r\n        firstName == '' ||\r\n        lastName == '' ||\r\n        cellphone == '' ||\r\n        gender == '' ||\r\n        profesion == '' ||\r\n        birthday == ''\r\n      ) {\r\n        throw new Error('Algunos de los campos estan incompletos');\r\n      }\r\n\r\n      const user = await this.firestoreSvc.editUser(\r\n        this.user,\r\n        this.editarForm.value,\r\n        this.URLPublica\r\n      );\r\n\r\n      // Si el resultado de la operacion no es un string (osea que no devolvio un error)\r\n      if (typeof user !== 'string') {\r\n        //Se agarran los valores firstName y lastName del registerForm\r\n        const { firstName, lastName } = this.editarForm.value;\r\n\r\n        // Se actualiza los datos del usuario (estos son los propios de firebase)\r\n        await this.updateUserData(firstName, lastName, this.URLPublica);\r\n\r\n        console.log(user);\r\n\r\n        this.editar();\r\n      } else {\r\n        // Si user es un string, significa que hubo un error, por lo tanto se muestra\r\n        this.errorMessage = user;\r\n        console.log(user);\r\n      }\r\n    } catch (error) {\r\n      this.errorMessage = error;\r\n    }\r\n  }\r\n\r\n  goToAgregarExperiencia() {\r\n    this.router.navigate(['/agregar-experiencias']);\r\n  }\r\n\r\n  async getCapacitaciones() {\r\n    await this.firestoreSvc\r\n      .getCapacitaciones(this.uid)\r\n      .then((capacitaciones) => {\r\n        console.log(capacitaciones);\r\n        this.capacitaciones = capacitaciones.capacitaciones;\r\n        this.capacitacionesLength = this.capacitaciones.length;\r\n        let i: number = 0;\r\n        for (const capacitacion of this.capacitaciones) {\r\n          i = i + 1;\r\n        }\r\n      });\r\n  }\r\n\r\n  async editarCapacitaciones() {\r\n    if (this.mostrarEdicionCapacitaciones) {\r\n      this.mostrarEdicionCapacitaciones = false;\r\n    } else {\r\n      this.mostrarEdicionCapacitaciones = true;\r\n    }\r\n  }\r\n\r\n  async borrarCapacitacion(indice) {\r\n    this.capacitaciones = await this.firestoreSvc.deleteCapacitacion(indice);\r\n    this.editarCapacitaciones();\r\n  }\r\n\r\n  async editarRedes() {\r\n    if (this.mostrarEdicionRedes) {\r\n      this.mostrarEdicionRedes = false;\r\n    } else {\r\n      this.mostrarEdicionRedes = true;\r\n      await this.miscSvc.getSocialOfLoggedUser();\r\n      this.social = JSON.parse(localStorage.getItem('social'));\r\n    }\r\n  }\r\n\r\n  abrirFormularioDeInstagram() {\r\n    let user: User = this.user;\r\n    let dialogRef = this.dialog.open(RedesFormComponent, {\r\n      data: { uid: this.uid, red: 'Instagram', user: user },\r\n    });\r\n    this.editarRedes();\r\n  }\r\n\r\n  abrirFormularioDeBehance() {\r\n    let user: User = this.user;\r\n    let dialogRef = this.dialog.open(RedesFormComponent, {\r\n      data: { uid: this.uid, red: 'Behance', user: user },\r\n    });\r\n    this.editarRedes();\r\n  }\r\n\r\n  abrirFormularioDeFlickr() {\r\n    let user: User = this.user;\r\n    let dialogRef = this.dialog.open(RedesFormComponent, {\r\n      data: { uid: this.uid, red: 'Flickr', user: user },\r\n    });\r\n    this.editarRedes();\r\n  }\r\n\r\n  abrirFormularioDeFacebook() {\r\n    let user: User = this.user;\r\n    let dialogRef = this.dialog.open(RedesFormComponent, {\r\n      data: { uid: this.uid, red: 'Facebook', user: user },\r\n    });\r\n    this.editarRedes();\r\n  }\r\n\r\n  abrirFormularioDeGithub() {\r\n    let user: User = this.user;\r\n    let dialogRef = this.dialog.open(RedesFormComponent, {\r\n      data: { uid: this.uid, red: 'GitHub', user: user },\r\n    });\r\n    this.editarRedes();\r\n  }\r\n\r\n  getGithubRepos() {\r\n    const url = this.githubUser.repos_url;\r\n    return this.http.get<any>(url).toPromise();\r\n  }\r\n}\r\n","<app-toolbar></app-toolbar>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-3 mt-5\">\r\n    <ng-container *ngIf=\"usuarioIngresado; then datos; else noExiste\"></ng-container>\r\n    <ng-template #datos>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 col-md-4 mt-3 md-margen\">\r\n          <img class=\"offset-md-2 col-md-8 rounded-circle\" src=\"{{\r\n          usuarioIngresado.photoURL ? usuarioIngresado.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ usuarioIngresado.firstName }}\" />\r\n          <div class=\"offset-md-3 mt-4 sm-alinear-centro\">\r\n            <h3 class=\"texto-datos\">\r\n              <p class=\"texto-dato\">\r\n                <img class=\"img-fluid mr-3\" src=\"../../../assets/images/sexo.png\"> {{ usuarioIngresado.gender }}\r\n              </p>\r\n              <p class=\"texto-dato\">\r\n                <img class=\"img-fluid mr-3 -ml-009\" src=\"../../../assets/images/nacimiento.png\">\r\n                {{ fechaDeNacimiento | date:\"dd/MM/yyyy\" }}\r\n              </p>\r\n              <p class=\"texto-dato\">\r\n                <img class=\"img-fluid mr-3 -ml-033\" src=\"../../../assets/images/egreso.png\">\r\n                {{ usuarioIngresado.yearDeEgreso }}\r\n              </p>\r\n              <p class=\"texto-dato\">\r\n                <img class=\"img-fluid mr-3 -ml-033\" src=\"../../../assets/images/orientacion.png\">\r\n                {{ usuarioIngresado.orientacion }}\r\n              </p>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12 col-md-8 px-0 margin-top-content mb-4\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 col-md-11\">\r\n              <h1 class=\"line-height-normal sm-text-left titulo vertical-align\">\r\n                {{ usuarioIngresado.firstName }} {{usuarioIngresado.lastName}}\r\n              </h1>\r\n            </div>\r\n            <div class=\"col-2 col-md-1 px-0 contactar\">\r\n              <button (click)=\"abrirFormularioDeContacto()\" class=\"boton-editar vertical-align\">\r\n                <img mat-icon class=\"imagen-contacto\" src=\"../../assets/images/contactar.png\">\r\n              </button>\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <p class=\"subtitulo-profesion mt-2 mb-3\">\r\n                <strong>{{ usuarioIngresado.profesion }}</strong>\r\n              </p>\r\n            </div>\r\n            <div class=\"col 12\">\r\n              <h3>\r\n                <p class=\"mt-3 descrip\">\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\r\n                  nec ornare tortor, et volutpat augue. In tincidunt auctor nisl eget\r\n                  condimentum. Donec id iaculis sapien. Vivamus pharetra facilisis\r\n                  quam et sodales. Quisque congue, ipsum et sollicitudin laoreet,\r\n                  mauris augue condimentum est, in placerat massa odio vel erat.\r\n                  Mauris sit amet efficitur lorem, id volutpat diam.\"\r\n                </p>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #noExiste>\r\n      <div class=\"container text-center alinear-centro mt-3\">\r\n        <h1 class=\"line-height-normal alinear-centro text-center titulo vertical-align\">\r\n          El usuario no existe\r\n        </h1>\r\n      </div>\r\n    </ng-template>\r\n  </mat-card>\r\n</div>\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <ng-container\r\n          *ngIf=\"capacitaciones == null || capacitaciones == undefined || capacitacionesLength == 0; then mostrarSinCapacitaciones ; else mostrarConCapacitaciones\">\r\n        </ng-container>\r\n        <ng-template #mostrarSinCapacitaciones>\r\n          <div class=\"mt-2 mb-1\">\r\n            <mat-card-title class=\"mt-2 mb-4 ml-4 mr-4\">\r\n              <h1 class=\"line-height-normal titulo-categoria\">\r\n                Este usuario no tiene capacitaciones\r\n              </h1>\r\n            </mat-card-title>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\">\r\n                <img src=\"../../../../assets/images/gorrolupa.png\" class=\" img-fluid ml-5 d-none d-md-block\" alt=\"\">\r\n              </div>\r\n              <div class=\"col-12 offset-md-1 col-md-9\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12\">\r\n                    <mat-card-subtitle class=\"subtitulo-capacitacion \">Recomiendale que ingrese sus datos acerca de su\r\n                      experiencia laboral y estudiantil para que las empresas <br>puedan saber mas sobre los\r\n                      egresados\r\n                    </mat-card-subtitle>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template #mostrarConCapacitaciones>\r\n          <div class=\"row\">\r\n            <div class=\"col-6 float-left\">\r\n              <h2 class=\"subtitulo-experiencia ml-2\">\r\n                Experiencia\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-4 col-12\" *ngFor=\"let capacitacion of capacitaciones\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-4 mt-2 mb-2\">\r\n                    <img src=\"{{\r\n                        capacitacion.relacionDeCapacitacion == 'empresa' ? '../../../assets/images/eleccion_empresa.png' : '../../../assets/images/eleccion_egresado.png'\r\n                      }}\" alt=\"Eleccion egresado\" class=\"img-fluid \">\r\n                  </div>\r\n                  <div class=\"col-8 mt-2 mb-2\">\r\n                    <div>{{capacitacion.lugarDeCapacitacion}}</div>\r\n                    <div>{{capacitacion.capacitacion}}</div>\r\n                    <div>{{capacitacion.yearDeInicio}}&nbsp;-&nbsp;{{capacitacion.yearDeFinal}}</div>\r\n                  </div>\r\n                </div>\r\n                <mat-divider class=\"mb-2 divider\"></mat-divider>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-6 float-left\">\r\n        <h2 class=\"subtitulo-experiencia ml-2\">Redes</h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-12 col-md-6\">\r\n        <div class=\"row\">\r\n          <div class=\"offset-md-2 col-md-3\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 set-pointer\">\r\n                <img src=\"../../assets/images/behance_icon.png\" class=\"img-fluid\" alt=\"behance_icon\" />\r\n                <p class=\"text-center mt-3 pb-2 social-icons\">Behance</p>\r\n              </div>\r\n              <div class=\"col-12 set-pointer\">\r\n                <img src=\"../../assets/images/facebook_icon.png\" class=\"img-fluid text-center sm-alinear-centro\"\r\n                  alt=\"facebook_icon\" />\r\n                <p class=\"text-center mt-3 social-icons\">Facebook</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"offset-md-2 col-md-3\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 set-pointer\">\r\n                <img src=\"../../assets/images/instagram_icon.png\" class=\"img-fluid text-center sm-alinear-centro\"\r\n                  alt=\"instagram_icon\" />\r\n                <p class=\"text-center mt-3 pb-2 social-icons\">Instagram</p>\r\n              </div>\r\n              <div class=\"col-12 set-pointer\">\r\n                <img src=\"../../assets/images/flickr_icon.png\" class=\"img-fluid text-center sm-alinear-centro\"\r\n                  alt=\"flickr_icon\" />\r\n                <p class=\"text-center mt-3 social-icons\">Flickr</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-5\">\r\n        <div class=\"row text-center\">\r\n          <div class=\"col-12 text-center\">\r\n            <div class=\"row text-center alinear-centro\">\r\n              <div class=\"github-icon-text\">\r\n                <img src=\"../../assets/images/github_icon.png\" class=\"img-fluid\" alt=\"github_icon\" />\r\n                Github\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 mt-4 text-center\" *ngIf=\"githubUser\">\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-4 center\">\r\n                    <img src=\"{{ githubUser.avatar_url }}\" class=\"rounded-circle img-fluid center\" alt=\"\" />\r\n                  </div>\r\n                  <div class=\"col-8\">\r\n                    <a href=\"{{githubUser.html_url}}\" class=\"row center\">\r\n                      <div class=\"container nombre-github mt-1\">\r\n                        {{ githubUser.name }}\r\n                      </div>\r\n                      <div class=\"container localizacion-github mt-1\">\r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-geo-alt\" fill=\"currentColor\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path fill-rule=\"evenodd\"\r\n                            d=\"M12.166 8.94C12.696 7.867 13 6.862 13 6A5 5 0 0 0 3 6c0 .862.305 1.867.834 2.94.524 1.062 1.234 2.12 1.96 3.07A31.481 31.481 0 0 0 8 14.58l.208-.22a31.493 31.493 0 0 0 1.998-2.35c.726-.95 1.436-2.008 1.96-3.07zM8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z\" />\r\n                          <path fill-rule=\"evenodd\"\r\n                            d=\"M8 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                        </svg> {{ githubUser.location }}\r\n                      </div>\r\n                    </a>\r\n                    <div class=\"row text-center mt-2\">\r\n                      <div class=\"col-4 text-center\">\r\n                        <div class=\"row text-center github-number\">{{githubUser.followers}}</div>\r\n                        <div class=\"row text-center github-text\">Seguidores</div>\r\n                      </div>\r\n                      <div class=\"col-4 text-center\">\r\n                        <div class=\"row text-center github-number\">{{githubUser.following}}</div>\r\n                        <div class=\"row text-center github-text\">Seguidos</div>\r\n                      </div>\r\n                      <div class=\"col-4 text-center\">\r\n                        <div class=\"row text-center github-number\">{{githubUser.public_repos}}</div>\r\n                        <div class=\"row text-center github-text\">Repositorios</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-body pt-2\">\r\n                <div class=\"container mt-1 texto-repositorio\">\r\n                  Top Repositories\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-4 mt-3\" *ngFor=\"let repo of githubRepos\">\r\n                    <a href=\"{{repo.html_url}}\" class=\"line-height-normal text-center nombre-repo\">\r\n                      {{repo.name}}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GithubUser } from 'src/app/shared/interfaces/githubUser';\r\nimport { ApisService } from 'src/app/shared/services/apis.service';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\nimport { EmailContactComponent } from '../email-contact/email-contact.component';\r\n\r\n@Component({\r\n  selector: 'app-perfil-servicio-egresado',\r\n  templateUrl: './perfil-servicio-egresado.component.html',\r\n  styleUrls: ['./perfil-servicio-egresado.component.scss'],\r\n})\r\nexport class PerfilServicioEgresadoComponent implements OnInit {\r\n  public uid;\r\n  public usuarioIngresado;\r\n  public fechaDeNacimiento;\r\n  public uidDelUsuarioLogeado;\r\n  public capacitaciones;\r\n  public capacitacionesLength: number;\r\n  public social;\r\n  public githubUser: GithubUser;\r\n  public githubRepos;\r\n\r\n  constructor(\r\n    private miscSvc: MiscService,\r\n    private apiSvc: ApisService,\r\n    private firestoreSvc: FirestoreService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario == 'egresado' || hayUnUsuario == 'empresa') {\r\n      this.uidDelUsuarioLogeado = localStorage.getItem('uid');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const uid = localStorage.getItem('uid');\r\n      const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n      this.route.paramMap.subscribe(async (params) => {\r\n        this.uid = params.get('uid');\r\n        console.log(this.uid);\r\n        console.log(this.uidDelUsuarioLogeado);\r\n        // Si el usuario seleccionado es el propio, se navega al propio perfil\r\n        if (this.uid == this.uidDelUsuarioLogeado) {\r\n          this.router.navigate(['/perfil']);\r\n        } else {\r\n          // Sino muestra los datos correspondientes\r\n          this.usuarioIngresado = await this.miscSvc.getUser(this.uid);\r\n          this.social = await this.miscSvc.getUserSocial(this.uid);\r\n          const timestamp = this.usuarioIngresado.birthday.seconds;\r\n          this.fechaDeNacimiento = new Date(timestamp * 1000);\r\n          /* this.miscSvc.getSocialOfLoggedUser();\r\n          this.social = JSON.parse(localStorage.getItem('social')); */\r\n          this.getCapacitaciones();\r\n          this.githubUser = await this.apiSvc.getGithubUser(\r\n            this.social.githubUsername\r\n          );\r\n          this.getGithubRepos().then((result) => {\r\n            this.githubRepos = result;\r\n            this.githubRepos = this.githubRepos.slice(0, 3);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  async getCapacitaciones() {\r\n    await this.firestoreSvc\r\n      .getCapacitaciones(this.uid)\r\n      .then((capacitaciones) => {\r\n        this.capacitaciones = capacitaciones.capacitaciones;\r\n        this.capacitacionesLength = this.capacitaciones.length;\r\n        let i: number = 0;\r\n        for (const capacitacion of this.capacitaciones) {\r\n          i = i + 1;\r\n        }\r\n      });\r\n  }\r\n\r\n  abrirFormularioDeContacto() {\r\n    let nombreDelUsuario: string =\r\n      this.usuarioIngresado.firstName + ' ' + this.usuarioIngresado.lastName;\r\n    let dialogRef = this.dialog.open(EmailContactComponent, {\r\n      data: { name: nombreDelUsuario, email: this.usuarioIngresado.email },\r\n    });\r\n  }\r\n\r\n  getGithubRepos() {\r\n    const url = this.githubUser.repos_url;\r\n    return this.http.get<any>(url).toPromise();\r\n  }\r\n}\r\n","<div class=\"pb-4 pt-3 px-5\">\r\n  <h1 mat-dialog-title class=\"titulo text-center mt-3 pb-3\">{{ red }}</h1>\r\n  <form [formGroup]=\"redesForm\" (ngSubmit)=\"onAddUsername()\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"form-row\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Ingrese su nombre de usuario de {{red}}</mat-label>\r\n            <input matInput formControlName=\"username\">\r\n            <mat-error *ngIf=\"usernamePattern.hasError('required')\">\r\n              El nombre de usuario es <strong>requerido</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n      <div class=\"col-12\">\r\n        <button mat-button class=\"btn btn-dark btn-block\" type=\"submit\">Agregar</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { User } from 'src/app/shared/interfaces/user';\r\nimport { ApisService } from 'src/app/shared/services/apis.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-redes-form',\r\n  templateUrl: './redes-form.component.html',\r\n  styleUrls: ['./redes-form.component.scss'],\r\n})\r\nexport class RedesFormComponent implements OnInit {\r\n  redesForm = new FormGroup({\r\n    username: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  usernamePattern = this.redesForm.get('username');\r\n\r\n  red: string = this.data.red;\r\n  user: User = this.data.user;\r\n\r\n  constructor(\r\n    private miscSvc: MiscService,\r\n    private apiSvc: ApisService,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<RedesFormComponent>\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario != 'egresado' && hayUnUsuario != 'empresa') {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  async onAddUsername() {\r\n    try {\r\n      const { username } = this.redesForm.value;\r\n      if (username == '') {\r\n        throw new Error('El campo esta vacio');\r\n      }\r\n\r\n      if (this.data.red == 'GitHub') {\r\n        await this.agregarGithub();\r\n      }\r\n\r\n      this.dialogRef.close();\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  async agregarGithub() {\r\n    try {\r\n      const { username } = this.redesForm.value;\r\n      if (username == '') {\r\n        throw new Error('El campo esta vacio');\r\n      }\r\n\r\n      let result = await this.apiSvc.agregarGithub(username, this.user);\r\n\r\n      if (typeof result.message === 'string') {\r\n        throw new Error('El usuario no existe');\r\n      } else {\r\n        return result;\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n}\r\n","<app-toolbar></app-toolbar>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-4 mt-3 md-margen\">\r\n        <img class=\"offset-md-2 col-md-8 rounded-circle\" src=\"{{\r\n            user.photoURL ? user.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ user.empresaName }}\" />\r\n        <div class=\"offset-md-3 mt-4 sm-alinear-centro\">\r\n          <h3 class=\"texto-datos\">\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3\" src=\"../../../../assets/images/correo.png\"> {{ user.email }}\r\n            </p>\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3\" src=\"../../../../assets/images/cuitcuil.png\"> {{ user.CUIT }}\r\n            </p>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <ng-container *ngIf=\"mostrar; then mostrarDatos; else editarDatos\"></ng-container>\r\n      <ng-template #mostrarDatos>\r\n        <div class=\"col-12 col-md-8 px-0 margin-top-content mb-4\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 col-md-11\">\r\n              <h1 class=\"line-height-normal sm-text-left titulo vertical-align\">\r\n                {{ user.empresaName }}\r\n              </h1>\r\n            </div>\r\n            <div class=\"col-2 col-md-1 px-0\">\r\n              <button (click)=\"editar()\" class=\"boton-editar vertical-align\">\r\n                <img mat-icon class=\"img-fluid\" src=\"../../assets/images/editar.png\">\r\n              </button>\r\n            </div>\r\n            <!-- <div class=\"col-12\">\r\n              <p class=\"subtitulo-profesion mt-2 mb-3\">\r\n                <strong>Descripcion de la empresa o lema</strong>\r\n              </p>\r\n            </div> -->\r\n            <div class=\"col 12 \">\r\n              <h3>\r\n                <p class=\"mt-3 descrip\">\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\r\n                  nec ornare tortor, et volutpat augue. In tincidunt auctor nisl eget\r\n                  condimentum. Donec id iaculis sapien. Vivamus pharetra facilisis\r\n                  quam et sodales. Quisque congue, ipsum et sollicitudin laoreet,\r\n                  mauris augue condimentum est, in placerat massa odio vel erat.\r\n                  Mauris sit amet efficitur lorem, id volutpat diam.\"\r\n                </p>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template #editarDatos>\r\n        <div class=\"col-12 col-md-8 px-0 mt-4 mb-4\">\r\n          <div class=\"col-10 col-md-11\">\r\n            <h1 class=\"line-height-normal sm-text-left titulo vertical-align\">\r\n              Edite sus datos\r\n            </h1>\r\n          </div>\r\n          <form [formGroup]=\"editarForm\" (ngSubmit)=\"onEdit()\" class=\"sm-margen mt-4 mb-3\">\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <mat-form-field class=\"full-width-height\">\r\n                  <mat-label>Nombre de la empresa</mat-label>\r\n                  <input matInput formControlName=\"empresaName\" type=\"text\" [(ngModel)]=\"user.empresaName\">\r\n                  <mat-error *ngIf=\"empresaNamePattern.hasError('required')\">\r\n                    El nombre es <strong>requerido</strong>\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"empresaNamePattern.hasError('pattern') || empresaNamePattern.hasError('minlength')\">\r\n                    El nombre solo esta compuesto por\r\n                    <strong>letras</strong> y debe tener mínimo 2\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row mb-2\">\r\n              <div class=\"offset-md-1 col-md-5 col-12 float-left\">\r\n                <label for=\"Cambiar Foto\">Foto de perfil</label>\r\n                <input type=\"file\" accept=\"image/jpeg, image/png, image/jpg\" class=\"form-control-file\" id=\"inputFile\"\r\n                  (change)=\"cambioArchivo($event)\" />\r\n              </div>\r\n              <div class=\"col-md-5 col-12\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 offset-md-1 col-md-5 mt-4 text-center\">\r\n                    <button class=\"btn btn-dark\" type=\"submit\">Guardar</button>\r\n                  </div>\r\n                  <div class=\"col-12 offset-md-1 col-md-5 mt-4 text-center\">\r\n                    <button class=\"btn btn-dark\" (click)=\"editar()\">Cancelar</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { FirestorageService } from 'src/app/shared/services/firestorage.service';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-perfil-empresa',\r\n  templateUrl: './perfil-empresa.component.html',\r\n  styleUrls: ['./perfil-empresa.component.scss'],\r\n})\r\nexport class PerfilEmpresaComponent implements OnInit {\r\n  editarForm = new FormGroup({\r\n    empresaName: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z .]*'),\r\n      Validators.minLength(2),\r\n    ]),\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  public empresaNamePattern = this.editarForm.get('empresaName');\r\n\r\n  // Variable para guardar los datos del usuario\r\n  public user: any;\r\n  public uid;\r\n  public userFirebase;\r\n\r\n  // Variable para saber si se tiene que mostrar el formulario editable\r\n  public mostrar: boolean = true;\r\n\r\n  // Variables para la subida de fotos al Storage\r\n  public nombreArchivo = '';\r\n  public mensajeArchivo = 'No hay archivo seleccionado';\r\n  public datosFormulario = new FormData();\r\n  public URLPublica: string;\r\n  public porcentaje = 0;\r\n  public finalizado = false;\r\n\r\n  // Variable para mostrar si hubo algun error en el formulario\r\n  public errorMessage: any;\r\n\r\n  // Se usa para saber si el usuario ofrece servicios o no.\r\n  public ofreceServicio: boolean;\r\n\r\n  constructor(\r\n    private authSvc: AuthService,\r\n    private miscSvc: MiscService,\r\n    private firestorageSvc: FirestorageService,\r\n    private firestoreSvc: FirestoreService\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario != 'empresa') {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    } else {\r\n      this.user = JSON.parse(localStorage.getItem('user'));\r\n      this.userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n      this.uid = localStorage.getItem('uid');\r\n    }\r\n  }\r\n\r\n  public cambioArchivo(event) {\r\n    if (event.target.files.length > 0) {\r\n      if (\r\n        event.target.files[0].type == 'image/jpeg' ||\r\n        event.target.files[0].type == 'image/jpg' ||\r\n        event.target.files[0].type == 'image/png'\r\n      ) {\r\n        for (let i = 0; i < event.target.files.length; i++) {\r\n          this.mensajeArchivo = `Archivo preparado: ${event.target.files[i].name}`;\r\n          this.nombreArchivo = event.target.files[i].name;\r\n          this.datosFormulario.delete('archivo');\r\n          this.datosFormulario.append(\r\n            'archivo',\r\n            event.target.files[i],\r\n            event.target.files[i].name\r\n          );\r\n        }\r\n        console.log(this.datosFormulario.get('archivo'));\r\n      } else {\r\n        this.mensajeArchivo =\r\n          'El formato del archivo no es valido (solo JPG, PNG o JPEG)';\r\n      }\r\n    } else {\r\n      this.mensajeArchivo = 'No hay un archivo seleccionado';\r\n    }\r\n  }\r\n\r\n  // Se usa para actualizar los datos del usuario propios de firebase\r\n  async updateUserData(empresaName, photoURL) {\r\n    (await this.authSvc.afAuth.currentUser).updateProfile({\r\n      displayName: empresaName,\r\n      photoURL: photoURL,\r\n    });\r\n  }\r\n\r\n  public async editar() {\r\n    if (this.mostrar) {\r\n      this.mostrar = false;\r\n    } else {\r\n      this.mostrar = true;\r\n      let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n      if (hayUnUsuario == 'empresa') {\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        this.userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n        this.uid = localStorage.getItem('uid');\r\n      }\r\n    }\r\n  }\r\n\r\n  async onEdit() {\r\n    try {\r\n      // Verifica si el usuario metio un archivo para cambiar\r\n      if (this.datosFormulario.get('archivo') != null) {\r\n        // Se encarga de actualizar los datos del usuario, si entre esos datos hay una foto\r\n        this.updateUserWithPhoto();\r\n      } else {\r\n        // Se encarga de actualizar los datos del usuario, si entre esos NO datos hay una foto\r\n        this.updateUserWithoutPhoto();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // Se encarga de actualizar los datos del usuario, si entre esos datos NO hay una foto\r\n  async updateUserWithoutPhoto() {\r\n    // Si no se ingresa una foto de perfil nueva, se agarra el link de la que ya estaba\r\n    this.URLPublica = (await this.authSvc.afAuth.currentUser).photoURL;\r\n    console.log(this.URLPublica);\r\n\r\n    this.editEmpresa();\r\n  }\r\n\r\n  // Se encarga de actualizar los datos del usuario, si entre esos datos hay una foto\r\n  updateUserWithPhoto() {\r\n    let archivo = this.datosFormulario.get('archivo');\r\n    const referencia = this.firestorageSvc.referenciaCloudStorage(\r\n      this.nombreArchivo\r\n    );\r\n    const tarea = this.firestorageSvc.tareaCloudStorage(\r\n      this.nombreArchivo,\r\n      archivo\r\n    );\r\n\r\n    tarea.percentageChanges().subscribe((porcentaje) => {\r\n      this.porcentaje = Math.round(porcentaje);\r\n      if (this.porcentaje == 100) {\r\n        this.finalizado = true;\r\n        referencia.getDownloadURL().subscribe((URL) => {\r\n          this.URLPublica = URL;\r\n        });\r\n        console.log(this.URLPublica);\r\n\r\n        this.editEmpresa();\r\n      }\r\n    });\r\n    referencia.getDownloadURL().subscribe((URL) => {\r\n      this.URLPublica = URL;\r\n    });\r\n    console.log(this.URLPublica);\r\n  }\r\n\r\n  async editEmpresa() {\r\n    const user = await this.firestoreSvc.editEmpresa(\r\n      this.user,\r\n      this.editarForm.value,\r\n      this.URLPublica\r\n    );\r\n\r\n    // Si el resultado de la operacion no es un string (osea que no devolvio un error)\r\n    if (typeof user !== 'string') {\r\n      //Se agarran los valores firstName y lastName del registerForm\r\n      const { empresaName } = this.editarForm.value;\r\n\r\n      // Se actualiza los datos del usuario (estos son los propios de firebase)\r\n      this.updateUserData(empresaName, this.URLPublica);\r\n\r\n      console.log(user);\r\n\r\n      this.editar();\r\n    } else {\r\n      // Si user es un string, significa que hubo un error, por lo tanto se muestra\r\n      this.errorMessage = user;\r\n      console.log(user);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MiscService } from 'src/app/shared/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-perfil-servicio-empresa',\r\n  templateUrl: './perfil-servicio-empresa.component.html',\r\n  styleUrls: ['./perfil-servicio-empresa.component.scss'],\r\n})\r\nexport class PerfilServicioEmpresaComponent implements OnInit {\r\n  public uid;\r\n  public empresaIngresada;\r\n  public uidDelUsuarioLogeado;\r\n\r\n  constructor(\r\n    private miscSvc: MiscService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario == 'empresa' || hayUnUsuario == 'egresado') {\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const uid = localStorage.getItem('uid');\r\n      const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n      this.uidDelUsuarioLogeado = localStorage.getItem('uid');\r\n      this.route.paramMap.subscribe((params) => {\r\n        this.uid = params.get('uid');\r\n        console.log(this.uid);\r\n        console.log(this.uidDelUsuarioLogeado);\r\n        // Si el usuario seleccionado es el propio, se navega al propio perfil\r\n        if (this.uid == this.uidDelUsuarioLogeado) {\r\n          this.router.navigate(['/perfil-empresa']);\r\n        } else {\r\n          // Sino muestra los datos correspondientes\r\n          this.empresaIngresada = this.miscSvc.getUser(this.uid);\r\n        }\r\n      });\r\n    } else {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n}\r\n","<app-toolbar></app-toolbar>\r\n\r\n<div class=\"margen container-fluid\">\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-4 mt-3 md-margen\">\r\n        <img class=\"offset-md-2 col-md-8 rounded-circle\" src=\"{{\r\n            empresaIngresada.photoURL ? empresaIngresada.photoURL : '../../../assets/images/user8.png'\r\n          }}\" alt=\"{{ empresaIngresada.empresaName }}\" />\r\n        <div class=\"offset-md-3 mt-4 sm-alinear-centro\">\r\n          <h3 class=\"texto-datos\">\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3\" src=\"../../../../assets/images/correo.png\"> {{ empresaIngresada.email }}\r\n            </p>\r\n            <p class=\"texto-dato\">\r\n              <img class=\"img-fluid mr-3\" src=\"../../../../assets/images/cuitcuil.png\"> {{ empresaIngresada.CUIT }}\r\n            </p>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n        <div class=\"col-12 col-md-8 px-0 margin-top-content mb-4\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 col-md-11\">\r\n              <h1 class=\"line-height-normal sm-text-left titulo vertical-align\">\r\n                {{ empresaIngresada.empresaName }}\r\n              </h1>\r\n            </div>\r\n            <!-- <div class=\"col-12\">\r\n              <p class=\"subtitulo-profesion mt-2 mb-3\">\r\n                <strong>Descripcion de la empresa o lema</strong>\r\n              </p>\r\n            </div> -->\r\n            <div class=\"col 12 \">\r\n              <h3 >\r\n                <p class=\"mt-3 descrip\">\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\r\n                  nec ornare tortor, et volutpat augue. In tincidunt auctor nisl eget\r\n                  condimentum. Donec id iaculis sapien. Vivamus pharetra facilisis\r\n                  quam et sodales. Quisque congue, ipsum et sollicitudin laoreet,\r\n                  mauris augue condimentum est, in placerat massa odio vel erat.\r\n                  Mauris sit amet efficitur lorem, id volutpat diam.\"\r\n                </p>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div>\r\n  <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n    <mat-card-title class=\"text-center mt-4 mb-4\">\r\n      <h1 class=\"line-height-normal titulo\">\r\n        Cambio de contraseña\r\n      </h1>\r\n    </mat-card-title>\r\n    <mat-card-subtitle class=\"subtitulo line-height-normal text-center mt-1\">\r\n      Ingrese su email. Recibirá un correo<br />para cambiar la contraseña.\r\n    </mat-card-subtitle>\r\n    <form [formGroup]=\"passwordForm\" (ngSubmit)=\"onReset()\" class=\"mt-1 mb-3\">\r\n      <div class=\"form-row mb-2\">\r\n        <div class=\"offset-3 col-6\">\r\n          <mat-form-field class=\"full-width-height\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput type=\"email\" formControlName=\"email\">\r\n            <mat-error *ngIf=\"emailPattern.invalid && !emailPattern.touched\">\r\n              Por favor, ingrese un email válido.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"emailPattern.touched\" >\r\n              El email es <strong>requerido</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"form-row mt-4 mb-4\" *ngIf=\"errorMessage\">\r\n        <div class=\"offset-2 col-8\">\r\n          <small class=\"form-text alert-danger text-center mt-2 pt-1 pb-1\"> {{ errorMessage }} </small>\r\n        </div>\r\n      </div> -->\r\n      <mat-card-actions class=\"mb-5\">\r\n        <div class=\"offset-3 col-6\">\r\n          <div class=\"alinear-centro mt-4\">\r\n            <button type=\"submit\" class=\"btn btn-dark btn-block alinear-centro\">Solicitar cambio</button>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"col-12 mt-4\">\r\n          <div class=\"alinear-centro mt-4\">\r\n            <p class=\"sm-text-center float-left mb-0\">\r\n              ¿No tienes una cuenta?\r\n              <a [routerLink]=\"['/register']\">\r\n                Regístrate\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div> -->\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n\r\n<!-- ACLARACIONES -->\r\n<!-- El FormControlName esta asociado al nombre de las variables\r\n     FormControl del login.component.ts\r\n-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { MiscService } from '../../services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  passwordForm = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]),\r\n\r\n  });\r\n\r\n  // Variables para controlar los patrones del formulario\r\n  emailPattern = this.passwordForm.get('email');\r\n\r\n  constructor(private authSvc: AuthService, private miscSvc: MiscService, private router: Router) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if(hayUnUsuario == 'nadie' || hayUnUsuario == 'wait-verification'){\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  onReset() {\r\n    try{\r\n\r\n      // Se agarra el valor de userEmail\r\n      const { email } = this.passwordForm.value;\r\n\r\n      // Verifica si esta vacio o no\r\n      if (email !== ''){\r\n\r\n        //Llama al metodo resetear contraseña\r\n        this.authSvc.resetPassword(email);\r\n\r\n        // Se hace un aviso que el mail fue enviado\r\n        window.alert('Email sent, check your inbox!');\r\n\r\n        // Se redirige al login\r\n        this.router.navigate(['/login']);\r\n\r\n      } else {\r\n\r\n        // Se hace un aviso que pide un email\r\n        window.alert('Please, enter an email');\r\n      }\r\n    } catch (error) {\r\n\r\n      // Si hubo algun error hace un aviso\r\n      window.alert('There was an error, please try again');\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"margen container-fluid\">\r\n  <div class=\"sm-text-center offset-md-1 set-size-logo\">\r\n    <img src=\"../../assets/images/titulo.png\" class=\"img-fluid\">\r\n  </div>\r\n  <div *ngIf=\"user$ | async as user ; else loading\">\r\n    <mat-card class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 mb-5 mt-5\">\r\n      <mat-card-title class=\"text-center mt-4 mb-4\">\r\n        <h1 class=\"line-height-normal titulo\">\r\n          ¡Gracias por registrarse!\r\n        </h1>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <p class=\"text-center mt-5 line-height-normal roboto-light\">\r\n          Hemos recibido sus datos\r\n        </p>\r\n        <p class=\"text-center mt-3 line-height-normal roboto-light\">\r\n          Pronto enviaremos un email de verificación a\r\n        </p>\r\n        <p class=\"text-center line-height-normal roboto-light\">\r\n          <strong>{{ user?.email }}</strong>\r\n        </p>\r\n      </mat-card-content>\r\n      <mat-card-actions class=\"mb-5\">\r\n        <div class=\"col-12 set-pointer\">\r\n          <div class=\"alinear-centro mt-4\">\r\n            <button (click)=\"onSendEmail()\" class=\"btn btn-dark alinear-centro\">Reenviar verificación</button>\r\n          </div>\r\n        </div>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <div class=\"text-center mt-5\">\r\n    <div class=\"spinner-border\" role=\"status\">\r\n      <span class=\"sr-only\">Cargando...</span>\r\n    </div>\r\n    <h3 class=\"mt-3\">\r\n      <a [routerLink]=\"['/login']\">\r\n        Trate de logearse nuevamente!\r\n      </a>\r\n    </h3>\r\n    <h3>\r\n      <a [routerLink]=\"['/register']\">\r\n        Si no tiene una cuenta, registrese!\r\n      </a>\r\n    </h3>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { MiscService } from '../../services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-wait-verification',\r\n  templateUrl: './wait-verification.component.html',\r\n  styleUrls: ['./wait-verification.component.scss'],\r\n})\r\nexport class WaitVerificationComponent implements OnInit {\r\n  public user$: Observable<any> = this.authSvc.afAuth.user;\r\n  public isVerified: boolean;\r\n\r\n  constructor(\r\n    private authSvc: AuthService,\r\n    private miscSvc: MiscService,\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let hayUnUsuario: string = await this.miscSvc.checkIfUserIsLogged();\r\n    if (hayUnUsuario != 'wait-verification') {\r\n      this.miscSvc.notAllowed(hayUnUsuario);\r\n    }\r\n  }\r\n\r\n  async onSendEmail() {\r\n    await this.authSvc.sendVerificationEmail();\r\n    window.alert('Se envio el email, mire su casilla de mensajes!');\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { GithubUser } from '../interfaces/githubUser';\r\nimport { MiscService } from './misc.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApisService {\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private http: HttpClient,\r\n    private miscSvc: MiscService\r\n  ) {}\r\n\r\n  public async agregarGithub(githubUsername, user): Promise<any> {\r\n    try {\r\n      if (!this.checkGithubUser(githubUsername)) {\r\n        console.log('entre');\r\n        return 'El usuario no existe';\r\n      }\r\n\r\n      // Se actualizan todos los datos del documento del usuario\r\n      const result = this.angularFirestore\r\n        .collection('social')\r\n        .doc(user.uid)\r\n        .set({\r\n          githubUsername: githubUsername,\r\n        });\r\n\r\n      await this.miscSvc.saveUserSocial(user.uid);\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  public getGithubUser(name: string): Promise<GithubUser> {\r\n    const url = `https://api.github.com/users/${name}`;\r\n    return this.http.get<GithubUser>(url).toPromise();\r\n  }\r\n\r\n  public async checkGithubUser(githubUsername: string): Promise<boolean> {\r\n    let mensajeDeError: string;\r\n    await this.getGithubUser(githubUsername).then((result) => {\r\n      mensajeDeError = result.message;\r\n    });\r\n    if (mensajeDeError == 'Not Found') {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { MiscService } from './misc.service';\r\nimport { FirestoreService } from './firestore.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  userData: any;\r\n\r\n  constructor(\r\n    public afAuth: AngularFireAuth,\r\n    private miscSvc: MiscService,\r\n    private firestoreSvc: FirestoreService,\r\n  ) {}\r\n\r\n  /*\r\n  ┌─────────────────────────────────────────────┐\r\n  │                    LOGIN                    │\r\n  └─────────────────────────────────────────────┘\r\n  */\r\n\r\n  //Login con email y password\r\n  async login(email: string, password: string) {\r\n    try {\r\n      //Hace un signIn con email y password\r\n      const result = await this.afAuth.signInWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      localStorage.setItem('uid', result.user.uid);\r\n      localStorage.setItem('userFirebase', JSON.stringify(result.user));\r\n      await this.miscSvc.saveUser(result.user.uid);\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  /*\r\n  ┌─────────────────────────────────────────────┐\r\n  │                   SIGN UP                   │\r\n  └─────────────────────────────────────────────┘\r\n  */\r\n\r\n  // REGISTER EGRESADO\r\n\r\n  async register(email: string, password: string, values) {\r\n    try {\r\n      console.log('Llegue a register');\r\n      // Crea un usuario usando email y password y lo mete en el firebase\r\n      const result = await this.afAuth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n\r\n      // Manda un mail para verificar su email\r\n      this.sendVerificationEmail();\r\n\r\n      /*\r\n       * Se llama al metodo SetUserDataLogUp para meter los datos\r\n       * del usuario en firestore\r\n       */\r\n      this.firestoreSvc.setUserDataLogUp(result.user, values);\r\n\r\n      localStorage.setItem('uid', result.user.uid);\r\n\r\n      localStorage.setItem('userFirebase', JSON.stringify(result.user));\r\n\r\n      await this.miscSvc.saveUser(result.user.uid);\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  // REGISTER EMPRESA\r\n\r\n  async registerEmpresa(email: string, password: string, values) {\r\n    try {\r\n      console.log('Llegue a register');\r\n      // Crea un usuario usando email y password y lo mete en el firebase\r\n      const result = await this.afAuth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n\r\n      console.log(result);\r\n\r\n      // Manda un mail para verificar su email\r\n      this.sendVerificationEmail();\r\n\r\n      /*\r\n       * Se llama al metodo SetUserDataLogUp para meter los datos\r\n       * del usuario en firestore\r\n       */\r\n      this.firestoreSvc.setEmpresaDataLogUp(result.user, values);\r\n\r\n      localStorage.setItem('uid', result.user.uid);\r\n      localStorage.setItem('userFirebase', JSON.stringify(result.user));\r\n      await this.miscSvc.saveUser(result.user.uid);\r\n      /* this.getUser(result.user.uid).subscribe((userSnapshot) => {\r\n        localStorage.setItem(\r\n          'user',\r\n          JSON.stringify(userSnapshot.payload.data())\r\n        );\r\n      }); */\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  /*\r\n  ┌──────────────────────────────────────────────┐\r\n  │            SECURITY VERIFICATIONS            │\r\n  └──────────────────────────────────────────────┘\r\n  */\r\n\r\n  // RESETEAR CONTRASEÑA\r\n\r\n  //Se usa para que el usuario resetee su password\r\n  async resetPassword(email: string): Promise<void> {\r\n    try {\r\n      // Se envia un mail al usuario para resetear la contraseña\r\n      return this.afAuth.sendPasswordResetEmail(email);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // MANDAR MAIL DE VERIFICACION\r\n\r\n  // Se envia un mail al usuario para que verifique su email\r\n  async sendVerificationEmail(): Promise<void> {\r\n    return (await this.afAuth.currentUser).sendEmailVerification();\r\n  }\r\n\r\n  /*\r\n  ┌─────────────────────────────────────────────┐\r\n  │                   LOG OUT                   │\r\n  └─────────────────────────────────────────────┘\r\n  */\r\n\r\n  // Se usa para deslogear al usuario\r\n  async logout() {\r\n    try {\r\n      await this.afAuth.signOut();\r\n\r\n      // Elimina al user del local storage\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('userFirebase');\r\n      localStorage.removeItem('uid');\r\n      localStorage.removeItem('social');\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FirestorageService {\r\n  constructor(private angularFirestorage: AngularFireStorage) {}\r\n\r\n  // Se usa para subir un archivo a Storage\r\n  public tareaCloudStorage(nombreArchivo: string, datos: any) {\r\n    return this.angularFirestorage.upload(nombreArchivo, datos);\r\n  }\r\n\r\n  // Se usa para obtener una referencia de un archivo en Storage\r\n  public referenciaCloudStorage(nombreArchivo: string) {\r\n    return this.angularFirestorage.ref(nombreArchivo);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreDocument,\r\n} from '@angular/fire/firestore';\r\nimport { User } from '../interfaces/user';\r\nimport { Empresa } from '../interfaces/empresa';\r\nimport { MiscService } from './misc.service';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Observable } from 'rxjs';\r\nimport { Titulos } from '../interfaces/titulos';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FirestoreService {\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private afAuth: AngularFireAuth,\r\n    private miscSvc: MiscService\r\n  ) {}\r\n\r\n  /*\r\n  ┌────────────────────────────────────────────┐\r\n  │                  EGRESADO                  │\r\n  └────────────────────────────────────────────┘\r\n  */\r\n\r\n  // INICIAL\r\n\r\n  // Se usa para escribir los datos del usuario en Firestore\r\n  setUserDataLogUp(user, values, photoURL?) {\r\n    // Se hace una referencia al documento del usuario teniendo en cuenta su uid\r\n    const userRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `users/${user.uid}`\r\n    );\r\n\r\n    const capacitacionesRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `capacitaciones/${user.uid}`\r\n    );\r\n\r\n    const socialRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `social/${user.uid}`\r\n    );\r\n\r\n    if (typeof photoURL === 'undefined') {\r\n      photoURL = '';\r\n    }\r\n\r\n    /*\r\n     * Se guarda en la variable userData toda la informacion del usuario\r\n     * usando la interfaz User\r\n     */\r\n    const userData: User = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      gender: values.gender,\r\n      photoURL: photoURL,\r\n      birthday: values.birthday,\r\n      yearDeEgreso: values.yearDeEgreso,\r\n      orientacion: values.orientacion,\r\n      profesion: values.profesion,\r\n      DNI: values.DNI,\r\n      tituloEgreso: values.tituloEgreso,\r\n      cellphone: values.cellphone,\r\n      empresa: false,\r\n    };\r\n\r\n    const capacitacionData = {\r\n      capacitaciones: [],\r\n    };\r\n\r\n    const socialData = {};\r\n\r\n    /*\r\n     * Se guarda la informacion que esta dentro de userData en el\r\n     * Firestore usando la referencia creada antes\r\n     */\r\n    socialRef.set(socialData, {\r\n      merge: true,\r\n    });\r\n    capacitacionesRef.set(capacitacionData, {\r\n      merge: true,\r\n    });\r\n    return userRef.set(userData, {\r\n      merge: true,\r\n    });\r\n  }\r\n\r\n  // EDICION\r\n\r\n  // Se usa para editar un usuario que ya se encuentre en Firestore\r\n  async editUser(user: any, data: any, url: any) {\r\n    try {\r\n      if (\r\n        data.firstName == '' ||\r\n        data.lastName == '' ||\r\n        data.gender == '' ||\r\n        data.birthday == '' ||\r\n        data.cellphone == ''\r\n      ) {\r\n        return 'Por favor llene todos los campos obligatorios';\r\n      }\r\n\r\n      // Se actualizan todos los datos del documento del usuario\r\n      const result = this.angularFirestore\r\n        .collection('users')\r\n        .doc(user.uid)\r\n        .set({\r\n          uid: user.uid,\r\n          email: user.email,\r\n          firstName: data.firstName,\r\n          lastName: data.lastName,\r\n          gender: data.gender,\r\n          photoURL: url,\r\n          birthday: data.birthday,\r\n          yearDeEgreso: user.yearDeEgreso,\r\n          orientacion: user.orientacion,\r\n          profesion: data.profesion,\r\n          DNI: user.DNI,\r\n          tituloEgreso: user.tituloEgreso,\r\n          cellphone: data.cellphone,\r\n          empresa: false,\r\n        });\r\n\r\n      await this.miscSvc.saveUser(user.uid);\r\n      /* this.getUser(user.uid).subscribe((userSnapshot) => {\r\n        localStorage.setItem(\r\n          'user',\r\n          JSON.stringify(userSnapshot.payload.data())\r\n        );\r\n      }); */\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  /*\r\n  ┌───────────────────────────────────────────┐\r\n  │                  EMPRESA                  │\r\n  └───────────────────────────────────────────┘\r\n  */\r\n\r\n  // INICIAL\r\n\r\n  // Se usa para escribir los datos del usuario en Firestore\r\n  setEmpresaDataLogUp(user, values, photoURL?) {\r\n    // Se hace una referencia al documento del usuario teniendo en cuenta su uid\r\n    const userRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `users/${user.uid}`\r\n    );\r\n\r\n    if (typeof photoURL === 'undefined') {\r\n      photoURL = '';\r\n    }\r\n\r\n    let verificada = values.verificada;\r\n\r\n    if (typeof verificada === 'undefined') {\r\n      verificada = '';\r\n    }\r\n\r\n    let CUIT = values.CUIT.toString();\r\n    console.log(CUIT);\r\n\r\n    /*\r\n     * Se guarda en la variable userData toda la informacion del usuario\r\n     * usando la interfaz User\r\n     */\r\n    const empresaData: Empresa = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      empresaName: values.empresaName,\r\n      CUIT: CUIT,\r\n      verificada: verificada,\r\n      photoURL: photoURL,\r\n      empresa: true,\r\n    };\r\n\r\n    /*\r\n     * Se guarda la informacion que esta dentro de userData en el\r\n     * Firestore usando la referencia creada antes\r\n     */\r\n    return userRef.set(empresaData, {\r\n      merge: true,\r\n    });\r\n  }\r\n\r\n  // EDICION\r\n\r\n  // Se usa para editar la empresa\r\n  async editEmpresa(user: any, data: any, url: any) {\r\n    try {\r\n      if (data.empresaName == '') {\r\n        return 'Por favor llene todos los campos obligatorios';\r\n      }\r\n\r\n      // Se actualizan todos los datos del documento del usuario\r\n      const result = this.angularFirestore\r\n        .collection('users')\r\n        .doc(user.uid)\r\n        .set({\r\n          uid: user.uid,\r\n          email: user.email,\r\n          empresaName: data.empresaName,\r\n          CUIT: user.CUIT,\r\n          verificada: user.verificada,\r\n          photoURL: url,\r\n          empresa: true,\r\n        });\r\n\r\n      await this.miscSvc.saveUser(user.uid);\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  /*\r\n  ┌──────────────────────────────────────────┐\r\n  │                 BUSQUEDA                 │\r\n  └──────────────────────────────────────────┘\r\n  */\r\n\r\n  // CON OPCIONES\r\n\r\n  searchWithOption(profesion, minAge, maxAge, orientacion) {\r\n    let today = new Date();\r\n    let todayYear: number = today.getFullYear();\r\n    let todayMonth: number = today.getMonth();\r\n    let todayDay: number = today.getDate();\r\n\r\n    minAge = parseInt(minAge);\r\n    maxAge = parseInt(maxAge);\r\n\r\n    let minAgeDate = new Date(todayYear - minAge, todayMonth, todayDay);\r\n    let maxAgeDate = new Date(todayYear - maxAge, todayMonth, todayDay);\r\n\r\n    return this.angularFirestore\r\n      .collection('users', (ref) =>\r\n        ref\r\n          .where('profesion', '==', profesion)\r\n          .where('birthday', '<=', minAgeDate)\r\n          .where('birthday', '>=', maxAgeDate)\r\n          .where('orientacion', '==', orientacion)\r\n      )\r\n      .valueChanges();\r\n  }\r\n\r\n  // POR NOMBRE\r\n\r\n  searchwithFirstName(start, end) {\r\n    console.log(start);\r\n    console.log(end);\r\n    return this.angularFirestore\r\n      .collection('users', (ref) =>\r\n        ref.limit(25).orderBy('firstName').startAt(start).endAt(end)\r\n      )\r\n      .valueChanges();\r\n  }\r\n\r\n  /*\r\n  ┌──────────────────────────────────────────────┐\r\n  │                 CAPACITACION                 │\r\n  └──────────────────────────────────────────────┘\r\n  */\r\n\r\n  // CONSEGUIR CAPACITACIONES\r\n\r\n  // Se usa para traer a un usuario especifico\r\n  public async getCapacitaciones(id: string): Promise<any> {\r\n    //Trae de la collection 'capacitaciones', el documento con el id que se pasa como argumento\r\n    let capacitaciones = await this.angularFirestore\r\n      .collection('capacitaciones')\r\n      .doc(id)\r\n      .get()\r\n      .toPromise();\r\n    return capacitaciones.data();\r\n  }\r\n\r\n  // AGREGAR EXEPRIENCIA\r\n\r\n  // Se usa para almacenar las capacitaciones en Firestore\r\n  async setCapacitacionesDeUser(values) {\r\n    const uid = localStorage.getItem('uid');\r\n    let arregloCapacitaciones: Array<Object> = [];\r\n    let capacitacionesExistentes;\r\n    await this.getCapacitaciones(uid).then((capacitaciones) => {\r\n      capacitacionesExistentes = capacitaciones.capacitaciones;\r\n      for (const capacitacion of capacitacionesExistentes) {\r\n        console.log(capacitacion);\r\n        arregloCapacitaciones.push(capacitacion);\r\n      }\r\n    });\r\n    console.log(1);\r\n    console.log(arregloCapacitaciones);\r\n    console.log(2);\r\n    console.log(values);\r\n    arregloCapacitaciones.push(values);\r\n    console.log(3);\r\n    console.log(arregloCapacitaciones);\r\n\r\n    // Se hace una referencia al documento del usuario teniendo en cuenta su uid\r\n    const capacitacionesRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `capacitaciones/${uid}`\r\n    );\r\n\r\n    /*\r\n     * Se guarda la informacion que esta dentro de capacitaciones en el\r\n     * Firestore usando la referencia creada antes\r\n     */\r\n\r\n    capacitacionesRef.update({\r\n      capacitaciones: arregloCapacitaciones,\r\n    });\r\n\r\n    return arregloCapacitaciones;\r\n  }\r\n\r\n  // ELIMINAR EXPERIENCIA\r\n\r\n  //Se usa para eliminar una capacitacion especifica\r\n  async deleteCapacitacion(indice) {\r\n    const uid = localStorage.getItem('uid');\r\n    let arregloCapacitaciones: Array<Object> = [];\r\n    let capacitacionesExistentes;\r\n    await this.getCapacitaciones(uid).then((capacitaciones) => {\r\n      capacitacionesExistentes = capacitaciones.capacitaciones;\r\n      for (const capacitacion of capacitacionesExistentes) {\r\n        console.log(capacitacion);\r\n        arregloCapacitaciones.push(capacitacion);\r\n      }\r\n    });\r\n\r\n    if (indice !== -1) {\r\n      arregloCapacitaciones.splice(indice, 1);\r\n    }\r\n\r\n    // Se hace una referencia al documento del usuario teniendo en cuenta su uid\r\n    const capacitacionesRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `capacitaciones/${uid}`\r\n    );\r\n\r\n    capacitacionesRef.update({\r\n      capacitaciones: arregloCapacitaciones,\r\n    });\r\n\r\n    return arregloCapacitaciones;\r\n  }\r\n\r\n  /*\r\n  ┌─────────────────────────────────────────┐\r\n  │                 TITULOS                 │\r\n  └─────────────────────────────────────────┘\r\n  */\r\n\r\n  // AGREGAR TITULOS CON CSV\r\n\r\n  uploadTitulos(titulos): Promise<void> {\r\n    try {\r\n      return titulos.forEach((titulo) => {\r\n        let titulosRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n          `titulos/${titulo.id}`\r\n        );\r\n\r\n        const tituloData = {\r\n          DNI: titulo.DNI,\r\n          nombre: titulo.nombre,\r\n          apellido: titulo.apellido,\r\n          nroDeAlumno: titulo.nroDeAlumno,\r\n          yearDeEgreso: titulo.yearDeEgreso,\r\n        };\r\n\r\n        titulosRef.set(tituloData, {\r\n          merge: true,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  // CONSEGUIR TODOS LOS TITULOS\r\n\r\n  async getTitulos(): Promise<Titulos[]> {\r\n    let query = this.angularFirestore.collection('titulos', (ref) => ref.orderBy(\"apellido\")).get().toPromise();\r\n    let titulos: Titulos[] = [];\r\n    await query.then((documentos) => {\r\n      documentos.forEach((doc) => {\r\n        let titulo: Titulos = {\r\n          titulo: doc.id,\r\n          DNI: doc.data().DNI,\r\n          nroDeAlumno: doc.data().nroDeAlumno,\r\n          nombre: doc.data().nombre,\r\n          apellido: doc.data().apellido,\r\n          yearDeEgreso: doc.data().yearDeEgreso,\r\n        };\r\n        titulos.push(titulo);\r\n      });\r\n    });\r\n    return titulos;\r\n  }\r\n\r\n  // CONSEGUIR DE A 10 TITULOS\r\n\r\n  async getTitulosInicial() {\r\n    let query = this.angularFirestore\r\n      .collection('titulos', (ref) => ref.limit(10).orderBy(\"apellido\"))\r\n      .get()\r\n      .toPromise();\r\n    let titulos = [];\r\n    await query.then((documentos) => {\r\n      documentos.forEach((doc) => {\r\n        let titulo = {\r\n          id: doc.id,\r\n          DNI: doc.data().DNI,\r\n          nroDeAlumno: doc.data().nroDeAlumno,\r\n          nombre: doc.data().nombre,\r\n          apellido: doc.data().apellido,\r\n          yearDeEgreso: doc.data().yearDeEgreso,\r\n        };\r\n        titulos.push(titulo);\r\n      });\r\n    });\r\n    return titulos;\r\n  }\r\n\r\n  async getFewTitulos(limit, startApellido) {\r\n    let query = this.angularFirestore\r\n      .collection('titulos', (ref) =>\r\n        ref\r\n          .limit(limit)\r\n          .orderBy('apellido')\r\n          .startAfter(startApellido)\r\n      )\r\n      .get()\r\n      .toPromise();\r\n    let titulos = [];\r\n    await query.then((documentos) => {\r\n      documentos.forEach((doc) => {\r\n        let titulo = {\r\n          id: doc.id,\r\n          DNI: doc.data().DNI,\r\n          nroDeAlumno: doc.data().nroDeAlumno,\r\n          nombre: doc.data().nombre,\r\n          apellido: doc.data().apellido,\r\n          yearDeEgreso: doc.data().yearDeEgreso,\r\n        };\r\n        titulos.push(titulo);\r\n      });\r\n    });\r\n    return titulos;\r\n  }\r\n\r\n  // ELIMINAR UN TITULO\r\n\r\n  async eliminarTitulo(id) {\r\n    let titulosRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `titulos/${id}`\r\n    );\r\n\r\n    return await titulosRef.delete();\r\n  }\r\n\r\n  // EDITAR UN TITULO\r\n\r\n  editarTitulo(id, DNI, nombre, apellido, nroDeAlumno, yearDeEgreso) {\r\n    let titulosRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `titulos/${id}`\r\n    );\r\n\r\n    let DNIString: string = DNI;\r\n\r\n    const tituloData = {\r\n      DNI: DNIString,\r\n      nombre: nombre,\r\n      apellido: apellido,\r\n      nroDeAlumno: nroDeAlumno,\r\n      yearDeEgreso: yearDeEgreso,\r\n    };\r\n\r\n    titulosRef.set(tituloData, {\r\n      merge: true,\r\n    });\r\n  }\r\n\r\n  // AGREGAR UN TITULO\r\n\r\n  async agregarTitulo(\r\n    id,\r\n    DNI,\r\n    nombre,\r\n    apellido,\r\n    nroDeAlumno,\r\n    yearDeEgreso\r\n  ): Promise<string> {\r\n    try {\r\n      let query: Promise<any>;\r\n      let titulos = [];\r\n      query = this.angularFirestore\r\n        .collection('titulos', (ref) => ref.where('DNI', '==', DNI))\r\n        .get()\r\n        .toPromise();\r\n\r\n      await query.then((documentos) => {\r\n        documentos.forEach((doc) => {\r\n          let titulo = {\r\n            id: doc.id,\r\n            DNI: doc.data().DNI,\r\n            nroDeAlumno: doc.data().nroDeAlumno,\r\n            nombre: doc.data().nombre,\r\n            apellido: doc.data().apellido,\r\n            yearDeEgreso: doc.data().yearDeEgreso,\r\n          };\r\n          titulos.push(titulo);\r\n        });\r\n      });\r\n\r\n      if (titulos.length > 0) {\r\n        throw new Error('Ya existe un titulo con ese DNI');\r\n      }\r\n\r\n      let titulosRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n        `titulos/${id}`\r\n      );\r\n\r\n      const tituloData = {\r\n        DNI: DNI,\r\n        nombre: nombre,\r\n        apellido: apellido,\r\n        nroDeAlumno: nroDeAlumno,\r\n        yearDeEgreso: yearDeEgreso,\r\n      };\r\n\r\n      titulosRef.set(tituloData, {\r\n        merge: true,\r\n      });\r\n\r\n      return 'OK';\r\n    } catch (error) {\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  //  BUSCAR UN TITULO\r\n\r\n  async searchTitulo(start, end, campo) {\r\n    let query: Promise<any>;\r\n    let titulos = [];\r\n    query = this.angularFirestore\r\n      .collection('titulos', (ref) =>\r\n        ref.orderBy(campo).startAt(start).endAt(end)\r\n      )\r\n      .get()\r\n      .toPromise();\r\n\r\n    await query.then((documentos) => {\r\n      documentos.forEach((doc) => {\r\n        let titulo = {\r\n          id: doc.id,\r\n          DNI: doc.data().DNI,\r\n          nroDeAlumno: doc.data().nroDeAlumno,\r\n          nombre: doc.data().nombre,\r\n          apellido: doc.data().apellido,\r\n          yearDeEgreso: doc.data().yearDeEgreso,\r\n        };\r\n        titulos.push(titulo);\r\n      });\r\n    });\r\n\r\n    return titulos;\r\n  }\r\n\r\n  /*\r\n  ┌────────────────────────────────────────┐\r\n  │                 ADMINS                 │\r\n  └────────────────────────────────────────┘\r\n  */\r\n\r\n  // CONSEGUIR TODOS LOS ADMINS\r\n\r\n  async getAdmins() {\r\n    let query = this.angularFirestore.collection('admin').get().toPromise();\r\n    let admins = [];\r\n    await query.then((docs) => {\r\n      docs.forEach((doc) => {\r\n        let admin = {\r\n          id: doc.id,\r\n          email: doc.data().email,\r\n        };\r\n        admins.push(admin);\r\n      });\r\n    });\r\n    return admins;\r\n  }\r\n\r\n  // AGREGAR UN ADMIN\r\n\r\n  async agregarAdmin(email): Promise<void> {\r\n    let id: string = this.angularFirestore.createId();\r\n\r\n    // Se hace una referencia al documento del usuario teniendo en cuenta su uid\r\n    const adminRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `admin/${id}`\r\n    );\r\n\r\n    /*\r\n     * Se guarda en la variable adminData el mail que permite logearse como admin\r\n     */\r\n    const adminData = {\r\n      email: email,\r\n    };\r\n\r\n    /*\r\n     * Se guarda la informacion que esta dentro de adminData en el\r\n     * Firestore usando la referencia creada antes\r\n     */\r\n    return adminRef.set(adminData, {\r\n      merge: true,\r\n    });\r\n  }\r\n\r\n  // ELIMINAR UN ADMIN\r\n\r\n  async eliminarAdmin(id) {\r\n    let titulosRef: AngularFirestoreDocument<any> = this.angularFirestore.doc(\r\n      `admin/${id}`\r\n    );\r\n\r\n    return await titulosRef.delete();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MiscService {\r\n  constructor(\r\n    private angularFirestore: AngularFirestore,\r\n    private afAuth: AngularFireAuth,\r\n    private router: Router\r\n  ) {}\r\n\r\n  // CONSEGUIR UN USUARIO ESPECIFICO\r\n\r\n  // Se usa para traer a un usuario especifico\r\n  public async getUser(id: string) {\r\n    //Trae de la collection 'users', el documento con el id que se pasa como argumento\r\n    let user = await this.angularFirestore\r\n      .collection('users')\r\n      .doc(id)\r\n      .get()\r\n      .toPromise();\r\n    return user.data();\r\n  }\r\n\r\n  // GUARDA UN USUARIO ESPECIFICO EN LOCAL STORAGE\r\n\r\n  public async saveUser(id) {\r\n    let user = await this.getUser(id);\r\n    console.log(user);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  // CONSIGUE LAS REDES SOCIALES DE UN USUARIO\r\n\r\n  // Se usa para traer a un usuario especifico\r\n  public async getUserSocial(id: string) {\r\n    //Trae de la collection 'users', el documento con el id que se pasa como argumento\r\n    let user = await this.angularFirestore\r\n      .collection('social')\r\n      .doc(id)\r\n      .get()\r\n      .toPromise();\r\n    return user.data();\r\n  }\r\n\r\n  public async saveUserSocial(id) {\r\n    let user = await this.getUserSocial(id);\r\n    localStorage.setItem('social', JSON.stringify(user));\r\n  }\r\n\r\n  // Se usa para traer un titulo\r\n  public existeElEgresado(tituloEgreso) {\r\n    tituloEgreso = tituloEgreso.toString();\r\n    return this.angularFirestore\r\n      .collection('titulos')\r\n      .doc(tituloEgreso)\r\n      .snapshotChanges();\r\n  }\r\n\r\n  /*\r\n  ┌─────────────────────────────────────────────────┐\r\n  │                   LOGGED USER                   │\r\n  └─────────────────────────────────────────────────┘\r\n  */\r\n\r\n  // Se usa para almacenar en el localStorage la informacion del usuario de firebase\r\n  async getUserFirebase(): Promise<void> {\r\n    this.afAuth.user.subscribe((user) => {\r\n      localStorage.setItem('userFirebase', JSON.stringify(user));\r\n    });\r\n  }\r\n\r\n  // Se usa para almacenar en el localStorage la informacion del usuario de firestore y el uid\r\n  async getUserAndUID(): Promise<void> {\r\n    this.afAuth.user.subscribe(async (user) => {\r\n      localStorage.setItem('uid', user.uid);\r\n      const dataUser = await this.getUser(user.uid);\r\n      localStorage.setItem('user', JSON.stringify(dataUser));\r\n    });\r\n  }\r\n\r\n  async getSocialOfLoggedUser(): Promise<void> {\r\n    this.afAuth.user.subscribe(async (user) => {\r\n      const dataUser = await this.getUserSocial(user.uid);\r\n      localStorage.setItem('social', JSON.stringify(dataUser));\r\n    });\r\n  }\r\n\r\n  async getAdmin(email): Promise<boolean> {\r\n    const dataAdmin = await this.angularFirestore.collection('admins').doc(email).get().toPromise();\r\n    return dataAdmin.exists\r\n  }\r\n\r\n  async checkIfUserIsLogged(): Promise<string> {\r\n    await this.getUserFirebase();\r\n    await this.getUserAndUID();\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    const userFirebase = JSON.parse(localStorage.getItem('userFirebase'));\r\n    console.log(user);\r\n    console.log(uid);\r\n    console.log(userFirebase);\r\n\r\n    if (user && uid) {\r\n      if (!userFirebase.emailVerified) {\r\n        return 'wait-verification';\r\n      } else {\r\n        if (user.empresa && uid) {\r\n          return 'empresa';\r\n        } else if (!user.empresa && uid) {\r\n          return 'egresado';\r\n        }\r\n      }\r\n    } else {\r\n      return 'nadie';\r\n    }\r\n  }\r\n\r\n  async notAllowed(tipoDeUsuario: string): Promise<void> {\r\n    if (tipoDeUsuario == 'wait-verification') {\r\n      this.router.navigate(['/wait-verification']);\r\n    } else if (tipoDeUsuario == 'empresa') {\r\n      this.router.navigate(['/home-empresa']);\r\n    } else if (tipoDeUsuario == 'egresado') {\r\n      this.router.navigate(['/home-egresado']);\r\n    } else if (tipoDeUsuario == 'admin') {\r\n      this.router.navigate(['/dashboard']);\r\n    } else {\r\n      this.router.navigate(['/home']);\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('userFirebase');\r\n      localStorage.removeItem('uid');\r\n      localStorage.removeItem('social');\r\n    }\r\n  }\r\n}\r\n","<mat-toolbar>\r\n  <div class=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6\">\r\n    <div class=\"float-left\">\r\n      <img src=\"../../assets/images/logo-mini.png\" class=\"img-fluid\">\r\n    </div>\r\n    <div class=\"float-right\">\r\n      <mat-icon svgIcon=\"logout\" routerLink=\"/login\" (click)=\"onLogout()\" class=\"img-fluid mr-4 set-pointer\"></mat-icon>\r\n      <ng-container *ngIf=\"esEmpresa; then linkAEmpresa ; else linkAEgresado\"></ng-container>\r\n      <ng-template #linkAEmpresa>\r\n        <mat-icon svgIcon=\"home\" routerLink=\"/home-empresa\" class=\"img-fluid mr-4 set-pointer\"></mat-icon>\r\n        <mat-icon svgIcon=\"user\" routerLink=\"/perfil-empresa\" class=\"img-fluid set-pointer\"></mat-icon>\r\n      </ng-template>\r\n      <ng-template #linkAEgresado>\r\n        <mat-icon svgIcon=\"home\" routerLink=\"/home-egresado\" class=\"img-fluid mr-4 set-pointer\"></mat-icon>\r\n        <mat-icon svgIcon=\"user\" routerLink=\"/perfil\" class=\"img-fluid set-pointer\"></mat-icon>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss'],\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n  public user$: Observable<any> = this.authSvc.afAuth.user;\r\n  public userData;\r\n  public loggedUser: any = '';\r\n  public esEmpresa: boolean = null;\r\n\r\n  ngOnInit(): void {\r\n    this.loggedUser = JSON.parse(localStorage.getItem('user'));\r\n    const uid = localStorage.getItem('uid');\r\n    if (this.loggedUser.empresa && uid) {\r\n      this.esEmpresa = true;\r\n    } else if (!this.loggedUser.empresa && uid) {\r\n      this.esEmpresa = false;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer,\r\n    private authSvc: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.matIconRegistry.addSvgIcon(\r\n      `home`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../../../assets/images/home.svg'\r\n      )\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `user`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../../../assets/images/user.svg'\r\n      )\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `logout`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        '../../../assets/images/logout.svg'\r\n      )\r\n    );\r\n  }\r\n\r\n  async onLogout() {\r\n    try {\r\n      await this.authSvc.logout();\r\n      this.router.navigate(['/login']);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { keys } from 'config';\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: keys.keysForHostedRed,\r\n};\r\n \r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}